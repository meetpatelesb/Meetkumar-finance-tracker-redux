{"ast":null,"code":"var _jsxFileName = \"/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport \"./Form.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\n// const getTransactionDetails = () => {\n//   const storeDetails = localStorage.getItem(\"transactionForm\");\n//   if (!storeDetails)\n//     return {\n//       transactionDate: \"\",\n//       monthYear: \"\",\n//       transactionType: \"\",\n//       fromAccount: \"\",\n//       toAccount: \"\",\n//       transactionAmount: \"\",\n//       receipt: \"\",\n//       notes: \"\",\n//     };\n//   return JSON.stringify(storeDetails);\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransactonForm = () => {\n  _s();\n  const [details, setDetails] = useState({\n    transactionDate: \"\",\n    monthYear: \"\",\n    transactionType: \"\",\n    fromAccount: \"\",\n    toAccount: \"\",\n    transactionAmount: \"\",\n    receipt: \"\",\n    notes: \"\"\n  });\n  const [error, setError] = useState({\n    transactionDate: \"\",\n    monthYear: \"\",\n    transactionType: \"\",\n    fromAccount: \"\",\n    toAccount: \"\",\n    transactionAmount: \"\",\n    receipt: \"\",\n    notes: \"\"\n  });\n  const formDetails = {\n    monthYear: {\n      value: \"\",\n      error: \"\"\n    },\n    transactionDate: {\n      value: \"\",\n      error: \"\"\n    },\n    transactionType: {\n      value: \"\",\n      error: \"\"\n    },\n    fromAccount: {\n      value: \"\",\n      error: \"\"\n    },\n    toAccount: {\n      value: \"\",\n      error: \"\"\n    },\n    transactionAmount: {\n      value: \"\",\n      error: \"\"\n    },\n    receipt: {\n      value: \"\",\n      error: \"\"\n    },\n    notes: {\n      value: \"\",\n      error: \"\"\n    }\n  };\n  const [data, setData] = useState(formDetails);\n  const [isValidate, setValidate] = useState(false);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"transactionForm\", JSON.stringify(data));\n  // }, [data]);\n\n  // useEffect(()=>{\n\n  // })\n\n  //   const hasChange = (e) => {\n  //     const { name, value } = e.target;\n  //     console.log(name, value);\n  //     setDetails(\n  //       { ...details, [name]: value }\n  // //       (prev)=>{\n  // // return( {...prev,[name]:value})\n  // //     }\n  //     );\n  //   };\n\n  // const hasChange =(e)=>{\n  //   const {name,value} = e.target;\n  //   setDetails((prev)=>{\n  //   return {...prev, [name]:value}\n  // })\n  // }\n  // onchange functions\n  const DateHandler = e => {\n    const date = e;\n    console.log(date, \"date\");\n    // console.log(date);\n    // setData((prev) => ({\n    //   ...prev,\n    //   transactionDate: {\n    //     ...prev.transactionDate,\n    //     value: date,\n    //   },\n    // }));\n\n    if (date) {\n      setData(prev => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          value: date,\n          error: \"\"\n        }\n      }));\n      setValidate(true);\n    } else {\n      setData(prev => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          error: \"date is Requierd!!\"\n        }\n      }));\n    }\n  };\n  const MonthHandler = e => {\n    const month = e;\n    // setData((prev) => ({\n    //   ...prev,\n    //   monthYear: {\n    //     ...prev.monthYear,\n    //     value: month,\n    //   },\n    // }));\n    if (month) {\n      setData(prev => ({\n        ...prev,\n        monthYear: {\n          ...prev.monthYear,\n          value: month,\n          error: \"\"\n        }\n      }));\n      setValidate(true);\n    } else {\n      setData(prev => ({\n        ...prev,\n        monthYear: {\n          ...prev.monthYear,\n          error: \"Month is Requierd!!\"\n        }\n      }));\n    }\n  };\n  const TypeHandler = e => {\n    const type = e;\n    // setData((prev) => ({\n    //   ...prev,\n    //   transactionType: {\n    //     ...prev.transactionType,\n    //     value: type,\n    //   },\n    // }));\n    if (type) {\n      if (type === \"Select\") {\n        setData(prev => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            error: \"type is Required!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            value: type,\n            error: \"\"\n          }\n        }));\n        setValidate(true);\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        transactionType: {\n          ...prev.transactionType,\n          error: \"type is Required!!\"\n        }\n      }));\n    }\n  };\n  const FromActHandler = e => {\n    const FromAcc = e;\n    // setData((prev) => ({\n    //   ...prev,\n    //   fromAccount: {\n    //     ...prev.fromAccount,\n    //     value: FromAcc,\n    //   },\n    // }));\n    if (FromAcc) {\n      if (FromAcc === \"Select\") {\n        setData(prev => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            error: \"Account is Required!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            value: FromAcc,\n            error: \"\"\n          }\n        }));\n        setValidate(true);\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        fromAccount: {\n          ...prev.fromAccount,\n          error: \"Account is Required\"\n        }\n      }));\n    }\n  };\n  const toActHandler = e => {\n    const ToAcc = e;\n\n    // setData((prev) => ({\n    //   ...prev,\n    //   toAccount: {\n    //     ...prev.toAccount,\n    //     value: ToAcc,\n    //   },\n    // }));\n    if (ToAcc) {\n      if (ToAcc === \"Select\") {\n        setData(prev => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            error: \"Account is Required!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            value: ToAcc,\n            error: \"\"\n          }\n        }));\n        setValidate(true);\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        toAccount: {\n          ...prev.toAccount,\n          error: \"Account is Required!!\"\n        }\n      }));\n    }\n  };\n  const AmountHandler = e => {\n    const value = e;\n    setData(prev => ({\n      ...prev,\n      transactionAmount: {\n        ...prev.transactionAmount,\n        value: value\n      }\n    }));\n    setValidate(true);\n    if (value) {\n      if (value.length < 2) {\n        setData(prev => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            error: \"Amount is too short!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            value: value,\n            error: \"\"\n          }\n        }));\n        setValidate(true);\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        transactionAmount: {\n          ...prev.transactionAmount,\n          error: \"amount is Required!!\"\n        }\n      }));\n    }\n    console.log(value);\n  };\n  const ReceiptHandler = e => {\n    if (e) {\n      var _e$target;\n      if ((e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.type) === \"file\") {\n        var _e$target2;\n        if ((e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.files[0].size) > 10000) {\n          setData(prev => ({\n            ...prev,\n            receipt: {\n              ...prev.receipt,\n              error: \"Image is too large\"\n            }\n          }));\n        } else {\n          let freader = new FileReader();\n          freader.readAsDataURL(e.target.files[0]);\n          freader.addEventListener(\"load\", () => {\n            const receiptPhoto = freader.result;\n            setData(prev => ({\n              ...prev,\n              receipt: {\n                ...prev.receipt,\n                value: receiptPhoto,\n                error: \"\"\n              }\n            }));\n            setValidate(true);\n            // setData((prev) => ({\n            //   ...prev,\n            //   receipt: {\n            //     ...prev.receipt,\n            //     error: \"\",\n            //   },\n            // }));\n          });\n        }\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        receipt: {\n          ...prev.receipt,\n          error: \"Receipt is Required!!\"\n        }\n      }));\n    }\n  };\n  const NotesHandler = e => {\n    const notes = e;\n    console.log(notes);\n    setData(prev => ({\n      ...prev,\n      notes: {\n        ...prev.notes,\n        value: notes\n      }\n    }));\n    if (notes.trim()) {\n      if (notes.trim().length > 250 || notes.trim().length < 3) {\n        setData(prev => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"Notes is Required!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        notes: {\n          ...prev.notes,\n          error: \"Notes is Required!!\"\n        }\n      }));\n    }\n  };\n  console.log(\"data.....\");\n  console.log(data, \"initial value\");\n  const submitHandler = e => {\n    e.preventDefault();\n    AmountHandler(data.transactionAmount.value);\n    DateHandler(data.transactionDate.value);\n    TypeHandler(data.transactionType.value);\n    FromActHandler(data.fromAccount.value);\n    toActHandler(data.toAccount.value);\n    NotesHandler(data.notes.value);\n    MonthHandler(data.monthYear.value);\n    ReceiptHandler(data.receipt.value);\n    console.log(data.fromAccount.error, \"error of account\");\n    const errorArr = [];\n    Object.values(data).map(field => {\n      return field.error !== \"\" ? errorArr === null || errorArr === void 0 ? void 0 : errorArr.push(field) : null;\n    });\n    console.log(\"arrrrrrrrrrrrrrrrrrrrrrr\");\n    console.log(errorArr);\n    console.log(isValidate, 'error');\n    if (errorArr.length === 0) {\n      if (localStorage.getItem(\"transactionForm\")) {\n        const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n        retrivedata.push(data);\n        localStorage.setItem(\"transactionForm\", JSON.stringify(retrivedata));\n      } else {\n        localStorage.setItem(\"transactionForm\", JSON.stringify([data]));\n      }\n    }\n  };\n  const MonthArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const TransactionTypeArr = [\"Home Expense\", \"Personal Expense\", \"Income\"];\n  const AccountArr = [\"Personal Account\", \"Real Living\", \"My Dream Home\", \"Full Circle\", \"Core Realtors\", \"Big Block\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Transaction Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"transactionDate\",\n            value: data.transactionDate.value,\n            onChange: e => {\n              DateHandler(e.target.value);\n            },\n            onClick: () => {\n              const newdate = new Date();\n              var year = newdate.getFullYear();\n              var month = newdate.getMonth() + 1;\n              var day = newdate.getDate();\n              if (month < 10) {\n                month = \"0\" + month;\n              }\n              if (day < 10) {\n                day = \"0\" + day;\n              }\n              var limit = `${year}-${month}-${day}`;\n              document.getElementById(\"date\").setAttribute(\"max\", limit);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.transactionDate.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Month Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"monthYear\",\n            value: data.monthYear.value,\n            id: \"\",\n            onChange: e => {\n              MonthHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              disabled: true,\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this), MonthArr.map(month => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `${month} 2023`,\n                children: `${month} 2023`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.monthYear.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Transaction Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"transactionType\",\n            value: data.transactionType.value,\n            onChange: e => {\n              TypeHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this), TransactionTypeArr.map(type => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `${type}`,\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.transactionType.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"From Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"fromAccount\",\n            value: data.fromAccount.value,\n            onChange: e => {\n              FromActHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 15\n            }, this), AccountArr.map(account => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: account,\n                children: account\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.fromAccount.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"To Account: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"toAccount\",\n            value: data.toAccount.value,\n            onChange: e => {\n              toActHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }, this), AccountArr.map(account => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: account,\n                children: account\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.toAccount.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"transactionAmount\",\n            value: data.transactionAmount.value,\n            onChange: e => {\n              AmountHandler(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.transactionAmount.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Receipt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"receipt\",\n            alt: \"Receipt is not found\",\n            onChange: e => {\n              ReceiptHandler(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.receipt.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: \"30\",\n            rows: \"6\",\n            name: \"notes\",\n            value: data.notes.value,\n            onChange: e => {\n              NotesHandler(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.notes.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submitBtn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TransactonForm, \"UdNxiy9dBltAnxXrbJsMLMHJtcA=\");\n_c = TransactonForm;\nexport default TransactonForm;\nvar _c;\n$RefreshReg$(_c, \"TransactonForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactonForm","_s","details","setDetails","transactionDate","monthYear","transactionType","fromAccount","toAccount","transactionAmount","receipt","notes","error","setError","formDetails","value","data","setData","isValidate","setValidate","DateHandler","e","date","console","log","prev","MonthHandler","month","TypeHandler","type","FromActHandler","FromAcc","toActHandler","ToAcc","AmountHandler","length","ReceiptHandler","_e$target","target","_e$target2","files","size","freader","FileReader","readAsDataURL","addEventListener","receiptPhoto","result","NotesHandler","trim","submitHandler","preventDefault","errorArr","Object","values","map","field","push","localStorage","getItem","retrivedata","JSON","parse","setItem","stringify","MonthArr","TransactionTypeArr","AccountArr","children","className","onSubmit","method","fileName","_jsxFileName","lineNumber","columnNumber","id","name","onChange","onClick","newdate","Date","year","getFullYear","getMonth","day","getDate","limit","document","getElementById","setAttribute","disabled","selected","account","alt","cols","rows","_c","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx"],"sourcesContent":["import \"./Form.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\n// const getTransactionDetails = () => {\n//   const storeDetails = localStorage.getItem(\"transactionForm\");\n//   if (!storeDetails)\n//     return {\n//       transactionDate: \"\",\n//       monthYear: \"\",\n//       transactionType: \"\",\n//       fromAccount: \"\",\n//       toAccount: \"\",\n//       transactionAmount: \"\",\n//       receipt: \"\",\n//       notes: \"\",\n//     };\n//   return JSON.stringify(storeDetails);\n// };\nconst TransactonForm = () => {\n  const [details, setDetails] = useState({\n    transactionDate: \"\",\n    monthYear: \"\",\n    transactionType: \"\",\n    fromAccount: \"\",\n    toAccount: \"\",\n    transactionAmount: \"\",\n    receipt: \"\",\n    notes: \"\",\n  });\n\n  const [error, setError] = useState({\n    transactionDate: \"\",\n    monthYear: \"\",\n    transactionType: \"\",\n    fromAccount: \"\",\n    toAccount: \"\",\n    transactionAmount: \"\",\n    receipt: \"\",\n    notes: \"\",\n  });\n\n  const formDetails = {\n    monthYear: {\n      value: \"\",\n      error: \"\",\n    },\n    transactionDate: {\n      value: \"\",\n      error: \"\",\n    },\n    transactionType: {\n      value: \"\",\n      error: \"\",\n    },\n    fromAccount: {\n      value: \"\",\n      error: \"\",\n    },\n    toAccount: {\n      value: \"\",\n      error: \"\",\n    },\n    transactionAmount: {\n      value: \"\",\n      error: \"\",\n    },\n    receipt: {\n      value: \"\",\n      error: \"\",\n    },\n    notes: {\n      value: \"\",\n      error: \"\",\n    },\n  };\n\n  const [data, setData] = useState(formDetails);\n  const [isValidate,setValidate]=useState(false)\n\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"transactionForm\", JSON.stringify(data));\n  // }, [data]);\n\n  // useEffect(()=>{\n\n  // })\n\n  //   const hasChange = (e) => {\n  //     const { name, value } = e.target;\n  //     console.log(name, value);\n  //     setDetails(\n  //       { ...details, [name]: value }\n  // //       (prev)=>{\n  // // return( {...prev,[name]:value})\n  // //     }\n  //     );\n  //   };\n\n  // const hasChange =(e)=>{\n  //   const {name,value} = e.target;\n  //   setDetails((prev)=>{\n  //   return {...prev, [name]:value}\n  // })\n  // }\n  // onchange functions\n  const DateHandler = (e) => {\n    const date = e;\n    console.log(date, \"date\");\n    // console.log(date);\n    // setData((prev) => ({\n    //   ...prev,\n    //   transactionDate: {\n    //     ...prev.transactionDate,\n    //     value: date,\n    //   },\n    // }));\n\n   \n    if (date) {\n      setData((prev) => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          value: date,\n          error: \"\",\n        },\n      }));\nsetValidate(true);\n     \n    } else {\n      setData((prev) => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          error: \"date is Requierd!!\",\n        },\n      }));\n    }\n  };\n\n  \n  const MonthHandler = (e) => {\n    const month = e;\n    // setData((prev) => ({\n    //   ...prev,\n    //   monthYear: {\n    //     ...prev.monthYear,\n    //     value: month,\n    //   },\n    // }));\n    if (month) {\n      setData((prev) => ({\n        ...prev,\n        monthYear: {\n          ...prev.monthYear,\n          value: month,\n          error: \"\",\n        },\n      }\n      \n      ));\n      setValidate(true);\n    } else {\n      setData((prev) => ({\n        ...prev,\n        monthYear: {\n          ...prev.monthYear,\n          error: \"Month is Requierd!!\",\n        },\n      }));\n    }\n  };\n\n  const TypeHandler = (e) => {\n    const type = e;\n    // setData((prev) => ({\n    //   ...prev,\n    //   transactionType: {\n    //     ...prev.transactionType,\n    //     value: type,\n    //   },\n    // }));\n    if (type) {\n      if (type === \"Select\") {\n        setData((prev) => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            error: \"type is Required!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            value: type,\n            error: \"\",\n          },\n        }));\n        setValidate(true);\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        transactionType: {\n          ...prev.transactionType,\n          error: \"type is Required!!\",\n        },\n      }));\n    }\n  };\n\n  const FromActHandler = (e) => {\n    const FromAcc = e;\n    // setData((prev) => ({\n    //   ...prev,\n    //   fromAccount: {\n    //     ...prev.fromAccount,\n    //     value: FromAcc,\n    //   },\n    // }));\n    if (FromAcc) {\n      if (FromAcc === \"Select\") {\n        setData((prev) => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            error: \"Account is Required!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            value: FromAcc,\n            error: \"\",\n          },\n        }));\n        setValidate(true);\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        fromAccount: {\n          ...prev.fromAccount,\n          error: \"Account is Required\",\n        },\n      }));\n    }\n  };\n\n  const toActHandler = (e) => {\n    const ToAcc = e;\n\n    // setData((prev) => ({\n    //   ...prev,\n    //   toAccount: {\n    //     ...prev.toAccount,\n    //     value: ToAcc,\n    //   },\n    // }));\n    if (ToAcc) {\n      if (ToAcc === \"Select\") {\n        setData((prev) => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            error: \"Account is Required!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            value: ToAcc,\n            error: \"\",\n          },\n        }));\n        setValidate(true);\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        toAccount: {\n          ...prev.toAccount,\n          error: \"Account is Required!!\",\n        },\n      }));\n    }\n  };\n\n  const AmountHandler = (e) => {\n    const value = e;\n    setData((prev) => ({\n      ...prev,\n      transactionAmount: {\n        ...prev.transactionAmount,\n        value: value,\n      },\n    }));\n    setValidate(true);\n    if (value) {\n      if (value.length < 2) {\n        setData((prev) => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            error: \"Amount is too short!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n          value:value,\n            error: \"\",\n          },\n        }));\n        setValidate(true);\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        transactionAmount: {\n          ...prev.transactionAmount,\n          error: \"amount is Required!!\",\n        },\n      }));\n    }\n\n    console.log(value);\n  };\n\n  const ReceiptHandler = (e) => {\n\n    if (e) {\n      if (e?.target?.type === \"file\") {\n        if (e?.target?.files[0].size > 10000) {\n          setData((prev) => ({\n            ...prev,\n            receipt: {\n              ...prev.receipt,\n              error: \"Image is too large\",\n            },\n          }));\n        } else {\n          let freader = new FileReader();\n\n          freader.readAsDataURL(e.target.files[0]);\n\n          freader.addEventListener(\"load\", () => {\n            const receiptPhoto = freader.result;\n            setData((prev) => ({\n              ...prev,\n              receipt: {\n                ...prev.receipt,\n                value: receiptPhoto,\n                error: \"\",\n              },\n            }));\n            setValidate(true);\n            // setData((prev) => ({\n            //   ...prev,\n            //   receipt: {\n            //     ...prev.receipt,\n            //     error: \"\",\n            //   },\n            // }));\n          });\n        }\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        receipt: {\n          ...prev.receipt,\n          error: \"Receipt is Required!!\",\n        },\n      }));\n    }\n  };\n\n  const NotesHandler = (e) => {\n    const notes = e;\n    console.log(notes);\n    setData((prev) => ({\n      ...prev,\n      notes: {\n        ...prev.notes,\n        value: notes,\n      },\n    }));\n    if (notes.trim()) {\n      if (notes.trim().length > 250 || notes.trim().length < 3) {\n        setData((prev) => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"Notes is Required!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"\",\n\n          },\n        }));\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        notes: {\n          ...prev.notes,\n          error: \"Notes is Required!!\",\n        },\n      }));\n    }\n  };\n\n  console.log(\"data.....\");\n  console.log(data, \"initial value\");\n\n  const submitHandler = (e) => {\n  \n\n    e.preventDefault();\n    AmountHandler(data.transactionAmount.value);\n    DateHandler(data.transactionDate.value);\n    TypeHandler(data.transactionType.value);\n    FromActHandler(data.fromAccount.value);\n    toActHandler(data.toAccount.value);\n    NotesHandler(data.notes.value);\n    MonthHandler(data.monthYear.value);\n    ReceiptHandler(data.receipt.value);\n    console.log(data.fromAccount.error,\"error of account\")\n  \n  \n    const errorArr = [];\n    Object.values(data).map((field) => {\n      return field.error !== \"\" ? errorArr?.push(field) : null;\n\n    });\n  \n    console.log(\"arrrrrrrrrrrrrrrrrrrrrrr\");\n    console.log(errorArr);\n  console.log(isValidate,'error')\n    if (errorArr.length===0) {\n      if (localStorage.getItem(\"transactionForm\")) {\n        const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n        retrivedata.push(data);\n  \n        localStorage.setItem(\"transactionForm\", JSON.stringify(retrivedata));\n      } else {\n        localStorage.setItem(\"transactionForm\", JSON.stringify([data]));\n      }\n    }\n  };\n \n\n  const MonthArr = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const TransactionTypeArr = [\"Home Expense\", \"Personal Expense\", \"Income\"];\n  const AccountArr = [\n    \"Personal Account\",\n    \"Real Living\",\n    \"My Dream Home\",\n    \"Full Circle\",\n    \"Core Realtors\",\n    \"Big Block\",\n  ];\n\n  return (\n    <>\n      <div className=\"form\">\n        <form onSubmit={submitHandler} method=\"POST\">\n          <label className=\"label\">Transaction Date:</label>\n          <div className=\"input\">\n            <input\n              type=\"date\"\n              id=\"date\"\n              name=\"transactionDate\"\n              value={data.transactionDate.value}\n              onChange={(e) => {\n                DateHandler(e.target.value);\n              }}\n              onClick={() => {\n                const newdate = new Date();\n                var year = newdate.getFullYear();\n                var month = newdate.getMonth() + 1;\n                var day = newdate.getDate();\n                if (month < 10) {\n                  month = \"0\" + month;\n                }\n                if (day < 10) {\n                  day = \"0\" + day;\n                }\n\n                var limit = `${year}-${month}-${day}`;\n\n                document.getElementById(\"date\").setAttribute(\"max\", limit);\n              }}\n            ></input>\n            <span>{data.transactionDate.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Month Year:</label>\n\n          <div className=\"input\">\n            <select\n              name=\"monthYear\"\n              value={data.monthYear.value}\n              id=\"\"\n              onChange={(e) => {\n                MonthHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" disabled selected>\n                Select\n              </option>\n\n              {MonthArr.map((month) => {\n                return (\n                  <option value={`${month} 2023`}>{`${month} 2023`}</option>\n                );\n              })}\n\n              {/* <option value=\"Jan 2023\">Jan 2023</option>\n                <option value=\"Feb 2023\">Feb 2023</option>\n                */}\n            </select>\n            <span>{data.monthYear.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Transaction Type:</label>\n          <div className=\"input\">\n            <select\n              name=\"transactionType\"\n              value={data.transactionType.value}\n              onChange={(e) => {\n                TypeHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" selected>\n                Select\n              </option>\n              {TransactionTypeArr.map((type) => {\n                return <option value={`${type}`}>{type}</option>;\n              })}\n            </select>\n            <span>{data.transactionType.error}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">From Account:</label>\n          <div className=\"input\">\n            <select\n              name=\"fromAccount\"\n              value={data.fromAccount.value}\n              onChange={(e) => {\n                FromActHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" selected>\n                Select\n              </option>\n              {AccountArr.map((account) => {\n                return <option value={account}>{account}</option>;\n              })}\n            </select>\n            <span>{data.fromAccount.error}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">To Account: </label>\n          <div className=\"input\">\n            <select\n              name=\"toAccount\"\n              value={data.toAccount.value}\n              onChange={(e) => {\n                toActHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" selected>\n                Select\n              </option>\n\n              {AccountArr.map((account) => {\n                return <option value={account}>{account}</option>;\n              })}\n            </select>\n            <span>{data.toAccount.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Amount:</label>\n          <div className=\"input\">\n            <input\n              type=\"text\"\n              name=\"transactionAmount\"\n              value={data.transactionAmount.value}\n              onChange={(e) => {\n                AmountHandler(e.target.value);\n              }}\n            ></input>\n            <span>{data.transactionAmount.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Receipt:</label>\n          <div className=\"input\">\n            <input\n              type=\"file\"\n              name=\"receipt\"\n              alt=\"Receipt is not found\"\n              onChange={(e) => {\n                ReceiptHandler(e);\n              }}\n            ></input>\n            <span>{data.receipt.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Notes:</label>\n          <div className=\"input\">\n            <textarea\n              cols=\"30\"\n              rows=\"6\"\n              name=\"notes\"\n              value={data.notes.value}\n              onChange={(e) => {\n                NotesHandler(e.target.value);\n              }}\n            ></textarea>\n            <span>{data.notes.error}</span>\n          </div>\n\n          <button type=\"submit\" className=\"submitBtn\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default TransactonForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}