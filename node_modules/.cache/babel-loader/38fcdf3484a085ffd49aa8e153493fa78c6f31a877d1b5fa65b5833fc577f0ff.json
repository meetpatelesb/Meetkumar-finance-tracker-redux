{"ast":null,"code":"var _jsxFileName = \"/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport \"../assets/styles/transaction.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { MonthArr, TransactionTypeArr, AccountArr, MAX_FILE_SIZE, validFileExtensions } from \"../utils/constant\";\nimport { Dropdown } from \"./Dropdown\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet info = {\n  monthYear: {},\n  transactionDate: {},\n  transactionType: {},\n  fromAccount: {},\n  toAccount: {},\n  transactionAmount: {},\n  receipt: {},\n  notes: {}\n};\nconst TransactionForm = () => {\n  _s();\n  var _data$transactionDate, _errors$transactionDa, _data$monthYear, _errors$monthYear, _data$transactionType, _errors$transactionTy, _data$fromAccount, _errors$fromAccount, _data$toAccount, _errors$toAccount, _data$transactionAmou, _errors$transactionAm, _errors$receipt, _data$notes, _errors$notes;\n  const {\n    id\n  } = useParams();\n  const index = id - 1;\n  const updateData = JSON.parse(localStorage.getItem(\"transactionForm\"));\n  console.log(\"update dat\");\n  console.log(updateData);\n  const [submit, setSubmit] = useState(false);\n  const [data, setData] = useState(info);\n  const navigate = useNavigate();\n\n  // YUP VALIDATIONS...\n\n  const formSchema = yup.object().shape({\n    transactionDate: yup.string().required(\"Transaction Date is required!!\"),\n    monthYear: yup.string().required(\"month year is required!!\"),\n    transactionType: yup.string().required(\"transaction type is required!!\"),\n    fromAccount: yup.string()\n    // .notOneOf([yup.ref(\"toAccount\"), null], \"To Account is  matched!!\")\n    .required(\"account is required!!\"),\n    toAccount: yup.string().notOneOf([yup.ref(\"fromAccount\"), null], \"From Account is  matched!!\").required(\"account is required!!\"),\n    transactionAmount: yup.number().integer().positive().min(2, \"minimum amount should be 10\").required().typeError(\"amount is required!!\"),\n    notes: yup.string().min(3).max(250).required().typeError(\"notes is required!!\"),\n    receipt: yup.mixed().test({\n      name: \"is-sku\",\n      skipAbsent: true,\n      test(value, error) {\n        if (value === undefined || value === null || value.length === 0) {\n          return error.createError({\n            message: \"image is required!!!\"\n          });\n        } else {\n          if (!validFileExtensions.includes(value[0].type)) {\n            return error.createError({\n              message: \"image type must be jpeg,png,jpg or svg..\"\n            });\n          }\n          if (value[0][\"size\"] > MAX_FILE_SIZE) {\n            return error.createError({\n              message: \"image must less than 10kb\"\n            });\n          }\n        }\n        return true;\n      }\n    })\n  });\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(formSchema)\n    // defaultValues:dummy[0],\n  });\n\n  // ......\n\n  useEffect(() => {\n    for (const key in updateData) {\n      var _updateData$key;\n      if (key && parseInt((_updateData$key = updateData[key]) === null || _updateData$key === void 0 ? void 0 : _updateData$key.id) === parseInt(id)) {\n        setData(updateData[key]);\n        break;\n      }\n    }\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const removeImage = () => {\n    setData(prev => ({\n      ...prev,\n      receipt: \"\"\n    }));\n    // setValue({receipt  : {value: \"\"}})\n  };\n\n  const onSubmit = e => {\n    //  console.log(e)\n    let {\n      monthYear,\n      transactionDate,\n      transactionType,\n      fromAccount,\n      toAccount,\n      transactionAmount,\n      receipt,\n      notes\n    } = e;\n    console.log(\"submit\");\n\n    // let insertData = {\n    //   monthYear: {\n    //     value: monthYear,\n    //   },\n    //   transactionDate: {\n    //     value: transactionDate,\n    //   },\n    //   transactionType: {\n    //     value: transactionType,\n    //   },\n    //   fromAccount: {\n    //     value: fromAccount,\n    //   },\n    //   toAccount: {\n    //     value: toAccount,\n    //   },\n    //   transactionAmount: {\n    //     value: transactionAmount,\n    //   },\n    //   receipt:{\n    //     value: data.receipt.value\n    //   },\n    //   notes: {\n    //     value: notes,\n    //   },\n    // };\n    setData(prev => ({\n      ...prev,\n      monthYear: {\n        value: monthYear\n      },\n      transactionDate: {\n        value: transactionDate\n      },\n      transactionType: {\n        value: transactionType\n      },\n      fromAccount: {\n        value: fromAccount\n      },\n      toAccount: {\n        value: toAccount\n      },\n      transactionAmount: {\n        value: transactionAmount\n      },\n      receipt: {\n        value: data.receipt.value\n      },\n      notes: {\n        value: notes\n      }\n    }));\n\n    // setData(insertData);\n\n    setSubmit(true);\n  };\n  const handleChange = e => {\n    let receiptPhoto;\n    let file = e.target.files[0];\n    let freader = new FileReader();\n    freader.readAsDataURL(file);\n    freader.addEventListener(\"load\", () => {\n      receiptPhoto = freader.result;\n\n      // insertData[\"receipt\"] = { value: receiptPhoto };\n      // setData(insertData);\n\n      // 2nd appro.\n      setData(prev => ({\n        ...prev,\n        receipt: {\n          ...prev.receipt,\n          value: receiptPhoto\n        }\n      }));\n    });\n  };\n  console.log(data);\n  useEffect(() => {\n    if (submit === true) {\n      if (localStorage.getItem(\"transactionForm\")) {\n        const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n        if (id) {\n          for (const e in retrivedata) {\n            if (parseInt(retrivedata[e].id) === parseInt(id)) {\n              data[\"id\"] = id;\n              retrivedata[e] = data;\n            }\n          }\n        } else {\n          const prevDataIndex = Object.keys(retrivedata).length - 1;\n          const prevId = retrivedata[prevDataIndex][\"id\"];\n          data[\"id\"] = parseInt(prevId) + 1;\n          retrivedata.push(data);\n        }\n        localStorage.setItem(\"transactionForm\", JSON.stringify(retrivedata));\n      } else {\n        data[\"id\"] = 1;\n        localStorage.setItem(\"transactionForm\", JSON.stringify([data]));\n      }\n      navigate(\"/transaction\");\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Transaction Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"transactionDate\",\n            ...register(\"transactionDate\"),\n            value: data === null || data === void 0 ? void 0 : (_data$transactionDate = data.transactionDate) === null || _data$transactionDate === void 0 ? void 0 : _data$transactionDate.value\n            // onChange={(e) => {\n            //   DateHandler(e.target.value);\n            // }}\n            ,\n            onClick: () => {\n              const newdate = new Date();\n              var year = newdate.getFullYear();\n              var month = newdate.getMonth() + 1;\n              var day = newdate.getDate();\n              if (month < 10) {\n                month = \"0\" + month;\n              }\n              if (day < 10) {\n                day = \"0\" + day;\n              }\n              var limit = `${year}-${month}-${day}`;\n              document.getElementById(\"date\").setAttribute(\"max\", limit);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$transactionDa = errors.transactionDate) === null || _errors$transactionDa === void 0 ? void 0 : _errors$transactionDa.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Month Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"monthYear\",\n            ...register(\"monthYear\"),\n            value: data === null || data === void 0 ? void 0 : (_data$monthYear = data.monthYear) === null || _data$monthYear === void 0 ? void 0 : _data$monthYear.value,\n            id: \"\"\n            // onChange={(e) => {\n            //   MonthHandler(e.target.value);\n            // }}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), MonthArr.map(month => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `${month} 2023`,\n                children: `${month} 2023`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$monthYear = errors.monthYear) === null || _errors$monthYear === void 0 ? void 0 : _errors$monthYear.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Transaction Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"transactionType\",\n            ...register(\"transactionType\"),\n            value: data === null || data === void 0 ? void 0 : (_data$transactionType = data.transactionType) === null || _data$transactionType === void 0 ? void 0 : _data$transactionType.value\n            // onChange={(e) => {\n            //   TypeHandler(e.target.value);\n            // }}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              for: TransactionTypeArr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$transactionTy = errors.transactionType) === null || _errors$transactionTy === void 0 ? void 0 : _errors$transactionTy.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"From Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"fromAccount\",\n            ...register(\"fromAccount\"),\n            value: data === null || data === void 0 ? void 0 : (_data$fromAccount = data.fromAccount) === null || _data$fromAccount === void 0 ? void 0 : _data$fromAccount.value\n            // onChange={(e) => {\n            //   FromActHandler(e.target.value);\n            // }}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              for: AccountArr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$fromAccount = errors.fromAccount) === null || _errors$fromAccount === void 0 ? void 0 : _errors$fromAccount.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"To Account: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"toAccount\",\n            ...register(\"toAccount\"),\n            value: data === null || data === void 0 ? void 0 : (_data$toAccount = data.toAccount) === null || _data$toAccount === void 0 ? void 0 : _data$toAccount.value\n            // onChange={(e) => {\n            //   toActHandler(e.target.value);\n            // }}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              for: AccountArr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$toAccount = errors.toAccount) === null || _errors$toAccount === void 0 ? void 0 : _errors$toAccount.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"transactionAmount\",\n            ...register(\"transactionAmount\"),\n            value: data === null || data === void 0 ? void 0 : (_data$transactionAmou = data.transactionAmount) === null || _data$transactionAmou === void 0 ? void 0 : _data$transactionAmou.value\n            // onChange={(e) => {\n            //   AmountHandler(e.target.value);\n            // }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$transactionAm = errors.transactionAmount) === null || _errors$transactionAm === void 0 ? void 0 : _errors$transactionAm.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Receipt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [data.receipt ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: data.receipt.value,\n              width: 50,\n              height: 50,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: removeImage,\n              className: \"cross\",\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"receipt\",\n              alt: \"Receipt is not found\",\n              ...register(\"receipt\", {\n                onChange: handleChange\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$receipt = errors.receipt) === null || _errors$receipt === void 0 ? void 0 : _errors$receipt.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: \"30\",\n            rows: \"6\",\n            name: \"notes\",\n            ...register(\"notes\"),\n            value: data === null || data === void 0 ? void 0 : (_data$notes = data.notes) === null || _data$notes === void 0 ? void 0 : _data$notes.value\n            // onChange={(e) => {\n            //   NotesHandler(e.target.value);\n            // }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$notes = errors.notes) === null || _errors$notes === void 0 ? void 0 : _errors$notes.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submitBtn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/transaction`,\n          className: \"showTrn\",\n          children: \"Show Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TransactionForm, \"fq+Frz8iz1diilLFHpGVAbKx2Y0=\", false, function () {\n  return [useParams, useNavigate, useForm];\n});\n_c = TransactionForm;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Link","MonthArr","TransactionTypeArr","AccountArr","MAX_FILE_SIZE","validFileExtensions","Dropdown","yup","yupResolver","useForm","jsxDEV","_jsxDEV","Fragment","_Fragment","info","monthYear","transactionDate","transactionType","fromAccount","toAccount","transactionAmount","receipt","notes","TransactionForm","_s","_data$transactionDate","_errors$transactionDa","_data$monthYear","_errors$monthYear","_data$transactionType","_errors$transactionTy","_data$fromAccount","_errors$fromAccount","_data$toAccount","_errors$toAccount","_data$transactionAmou","_errors$transactionAm","_errors$receipt","_data$notes","_errors$notes","id","index","updateData","JSON","parse","localStorage","getItem","console","log","submit","setSubmit","data","setData","navigate","formSchema","object","shape","string","required","notOneOf","ref","number","integer","positive","min","typeError","max","mixed","test","name","skipAbsent","value","error","undefined","length","createError","message","includes","type","register","handleSubmit","setValue","reset","formState","errors","resolver","key","_updateData$key","parseInt","removeImage","prev","onSubmit","e","handleChange","receiptPhoto","file","target","files","freader","FileReader","readAsDataURL","addEventListener","result","retrivedata","prevDataIndex","Object","keys","prevId","push","setItem","stringify","children","className","method","fileName","_jsxFileName","lineNumber","columnNumber","onClick","newdate","Date","year","getFullYear","month","getMonth","day","getDate","limit","document","getElementById","setAttribute","selected","map","for","src","width","height","alt","onChange","cols","rows","to","_c","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx"],"sourcesContent":["import \"../assets/styles/transaction.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport {\n  MonthArr,\n  TransactionTypeArr,\n  AccountArr,\n  MAX_FILE_SIZE,\n  validFileExtensions,\n} from \"../utils/constant\";\nimport { Dropdown } from \"./Dropdown\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nlet info = {\n  monthYear: {},\n  transactionDate: {},\n  transactionType: {},\n  fromAccount: {},\n  toAccount: {},\n  transactionAmount: {},\n  receipt: {},\n  notes: {},\n};\nconst TransactionForm = () => {\n  const { id } = useParams();\n  const index = id - 1;\n  const updateData = JSON.parse(localStorage.getItem(\"transactionForm\"));\n  console.log(\"update dat\");\n  console.log(updateData);\n  const [submit, setSubmit] = useState(false);\n  const [data, setData] = useState(info);\n\n  const navigate = useNavigate();\n\n  // YUP VALIDATIONS...\n\n  const formSchema = yup.object().shape({\n    transactionDate: yup.string().required(\"Transaction Date is required!!\"),\n    monthYear: yup.string().required(\"month year is required!!\"),\n    transactionType: yup.string().required(\"transaction type is required!!\"),\n    fromAccount: yup\n      .string()\n      // .notOneOf([yup.ref(\"toAccount\"), null], \"To Account is  matched!!\")\n      .required(\"account is required!!\"),\n    toAccount: yup\n      .string()\n      .notOneOf([yup.ref(\"fromAccount\"), null], \"From Account is  matched!!\")\n      .required(\"account is required!!\"),\n    transactionAmount: yup\n      .number()\n      .integer()\n      .positive()\n      .min(2, \"minimum amount should be 10\")\n      .required()\n      .typeError(\"amount is required!!\"),\n    notes: yup\n      .string()\n      .min(3)\n      .max(250)\n      .required()\n      .typeError(\"notes is required!!\"),\n    receipt: yup.mixed().test({\n      name: \"is-sku\",\n      skipAbsent: true,\n      test(value, error) {\n        if (value === undefined || value === null || value.length === 0) {\n          return error.createError({ message: \"image is required!!!\" });\n        } else {\n          if (!validFileExtensions.includes(value[0].type)) {\n            return error.createError({\n              message: \"image type must be jpeg,png,jpg or svg..\",\n            });\n          }\n          if (value[0][\"size\"] > MAX_FILE_SIZE) {\n            return error.createError({ message: \"image must less than 10kb\" });\n          }\n        }\n        return true;\n      },\n    }),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(formSchema),\n    // defaultValues:dummy[0],\n  });\n\n  // ......\n\n  useEffect(() => {\n    for (const key in updateData) {\n      if (key && parseInt(updateData[key]?.id) === parseInt(id)) {\n        setData(updateData[key]);\n        break;\n      }\n    }\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const removeImage = () => {\n    setData((prev) => ({\n      ...prev,\n      receipt: \"\",\n    }));\n    // setValue({receipt  : {value: \"\"}})\n  };\n  const onSubmit = (e) => {\n    //  console.log(e)\n    let {\n      monthYear,\n      transactionDate,\n      transactionType,\n      fromAccount,\n      toAccount,\n      transactionAmount,\n      receipt,\n      notes,\n    } = e;\n    console.log(\"submit\");\n\n    // let insertData = {\n    //   monthYear: {\n    //     value: monthYear,\n    //   },\n    //   transactionDate: {\n    //     value: transactionDate,\n    //   },\n    //   transactionType: {\n    //     value: transactionType,\n    //   },\n    //   fromAccount: {\n    //     value: fromAccount,\n    //   },\n    //   toAccount: {\n    //     value: toAccount,\n    //   },\n    //   transactionAmount: {\n    //     value: transactionAmount,\n    //   },\n    //   receipt:{\n    //     value: data.receipt.value\n    //   },\n    //   notes: {\n    //     value: notes,\n    //   },\n    // };\n    setData((prev) => ({\n      ...prev,\n      monthYear: {\n        value: monthYear,\n      },\n      transactionDate: {\n        value: transactionDate,\n      },\n      transactionType: {\n        value: transactionType,\n      },\n      fromAccount: {\n        value: fromAccount,\n      },\n      toAccount: {\n        value: toAccount,\n      },\n      transactionAmount: {\n        value: transactionAmount,\n      },\n      receipt: {\n        value: data.receipt.value,\n      },\n      notes: {\n        value: notes,\n      },\n    }));\n\n    // setData(insertData);\n\n    setSubmit(true);\n  };\n  const handleChange = (e) => {\n    let receiptPhoto;\n    let file = e.target.files[0];\n    let freader = new FileReader();\n    freader.readAsDataURL(file);\n    freader.addEventListener(\"load\", () => {\n      receiptPhoto = freader.result;\n\n      // insertData[\"receipt\"] = { value: receiptPhoto };\n      // setData(insertData);\n\n      // 2nd appro.\n      setData((prev) => ({\n        ...prev,\n        receipt: {\n          ...prev.receipt,\n          value: receiptPhoto,\n        },\n      }));\n    });\n  };\n\n  console.log(data);\n\n  useEffect(() => {\n    if (submit === true) {\n      if (localStorage.getItem(\"transactionForm\")) {\n        const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n\n        if (id) {\n          for (const e in retrivedata) {\n            if (parseInt(retrivedata[e].id) === parseInt(id)) {\n              data[\"id\"] = id;\n              retrivedata[e] = data;\n            }\n          }\n        } else {\n          const prevDataIndex = Object.keys(retrivedata).length - 1;\n          const prevId = retrivedata[prevDataIndex][\"id\"];\n          data[\"id\"] = parseInt(prevId) + 1;\n\n          retrivedata.push(data);\n        }\n\n        localStorage.setItem(\"transactionForm\", JSON.stringify(retrivedata));\n      } else {\n        data[\"id\"] = 1;\n\n        localStorage.setItem(\"transactionForm\", JSON.stringify([data]));\n      }\n\n      navigate(\"/transaction\");\n    }\n  }, [data]);\n\n  return (\n    <>\n      <div className=\"form\">\n        <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">\n          <label className=\"label\">Transaction Date:</label>\n          <div className=\"input\">\n            <input\n              type=\"date\"\n              id=\"date\"\n              name=\"transactionDate\"\n              {...register(\"transactionDate\")}\n              value={data?.transactionDate?.value}\n              // onChange={(e) => {\n              //   DateHandler(e.target.value);\n              // }}\n              onClick={() => {\n                const newdate = new Date();\n                var year = newdate.getFullYear();\n                var month = newdate.getMonth() + 1;\n                var day = newdate.getDate();\n                if (month < 10) {\n                  month = \"0\" + month;\n                }\n                if (day < 10) {\n                  day = \"0\" + day;\n                }\n\n                var limit = `${year}-${month}-${day}`;\n\n                document.getElementById(\"date\").setAttribute(\"max\", limit);\n              }}\n            ></input>\n            <span>{errors.transactionDate?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Month Year:</label>\n\n          <div className=\"input\">\n            <select\n              name=\"monthYear\"\n              {...register(\"monthYear\")}\n              value={data?.monthYear?.value}\n              id=\"\"\n              // onChange={(e) => {\n              //   MonthHandler(e.target.value);\n              // }}\n            >\n              <option value=\"\" selected>\n                Select\n              </option>\n\n              {MonthArr.map((month) => {\n                return (\n                  <option value={`${month} 2023`}>{`${month} 2023`}</option>\n                );\n              })}\n            </select>\n            <span>{errors.monthYear?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Transaction Type:</label>\n          <div className=\"input\">\n            <select\n              name=\"transactionType\"\n              {...register(\"transactionType\")}\n              value={data?.transactionType?.value}\n              // onChange={(e) => {\n              //   TypeHandler(e.target.value);\n              // }}\n            >\n              <option value=\"\" selected>\n                Select\n              </option>\n              <Dropdown for={TransactionTypeArr} />\n            </select>\n            <span>{errors.transactionType?.message}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">From Account:</label>\n          <div className=\"input\">\n            <select\n              name=\"fromAccount\"\n              {...register(\"fromAccount\")}\n              value={data?.fromAccount?.value}\n              // onChange={(e) => {\n              //   FromActHandler(e.target.value);\n              // }}\n            >\n              <option value=\"\" selected>\n                Select\n              </option>\n              <Dropdown for={AccountArr} />\n            </select>\n            <span>{errors.fromAccount?.message}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">To Account: </label>\n          <div className=\"input\">\n            <select\n              name=\"toAccount\"\n              {...register(\"toAccount\")}\n              value={data?.toAccount?.value}\n              // onChange={(e) => {\n              //   toActHandler(e.target.value);\n              // }}\n            >\n              <option value=\"\" selected>\n                Select\n              </option>\n              <Dropdown for={AccountArr} />\n            </select>\n            <span>{errors.toAccount?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Amount:</label>\n          <div className=\"input\">\n            <input\n              type=\"text\"\n              name=\"transactionAmount\"\n              {...register(\"transactionAmount\")}\n              value={data?.transactionAmount?.value}\n              // onChange={(e) => {\n              //   AmountHandler(e.target.value);\n              // }}\n            ></input>\n            <span>{errors.transactionAmount?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Receipt:</label>\n          <div className=\"input\">\n            {data.receipt ? (\n              <>\n                <img src={data.receipt.value} width={50} height={50} alt=\"\" />\n                <span onClick={removeImage} className=\"cross\">\n                  X\n                </span>\n              </>\n            ) : (\n              <>\n                <input\n                  type=\"file\"\n                  name=\"receipt\"\n                  alt=\"Receipt is not found\"\n                  {...register(\"receipt\", { onChange: handleChange })}\n                  // value={data?.receipt?.value}\n\n                  // onChange={(e) => {\n                  //   ReceiptHandler(e);\n                  // }}\n                ></input>\n              </>\n            )}\n\n            <span>{errors.receipt?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Notes:</label>\n          <div className=\"input\">\n            <textarea\n              cols=\"30\"\n              rows=\"6\"\n              name=\"notes\"\n              {...register(\"notes\")}\n              value={data?.notes?.value}\n              // onChange={(e) => {\n              //   NotesHandler(e.target.value);\n              // }}\n            ></textarea>\n            <span>{errors.notes?.message}</span>\n          </div>\n\n          <button type=\"submit\" className=\"submitBtn\">\n            Submit\n          </button>\n\n          <Link to={`/transaction`} className=\"showTrn\">\n            Show Transaction\n          </Link>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default TransactionForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}