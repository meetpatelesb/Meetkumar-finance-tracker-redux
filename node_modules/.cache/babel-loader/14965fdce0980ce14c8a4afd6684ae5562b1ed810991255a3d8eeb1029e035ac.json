{"ast":null,"code":"var _jsxFileName = \"/home/meet-vaghasiya/reactPractice/khatabook/src/components/Table.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst months = [\"January 2023\", \"February 2023\", \"March 2023\", \"April 2023\", \"May 2023\", \"June 2023\", \"July 2023\", \"August 2023\", \"September 2023\", \"October 2023\", \"November 2023\", \"December 2023\"];\nconst Table = props => {\n  _s();\n  let records = props.records;\n  console.log(\"props\");\n  console.log(props);\n  let [sortedData, setSortedData] = useState(records);\n  const [sortedField, setSortedField] = useState({});\n\n  // // pagination.........\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [postPerPage, setPostPerPage] = useState(3);\n  // const lastPostIndex = currentPage * postPerPage;\n  // const firstPostIndex = lastPostIndex - postPerPage;\n  // const paginationData = sortedData.slice(firstPostIndex, lastPostIndex);\n\n  // let totalPosts = records.length;\n  // let pages = [];\n  // for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\n  //   pages.push(i);\n  // }\n  // let nThPage = pages.length;\n\n  const sorting = key => {\n    let direction = \"ascending\";\n    if (sortedField.key === key && sortedField.direction === \"ascending\") {\n      direction = \"descending\";\n    } else if (sortedField.key === key && sortedField.direction === \"descending\") {\n      direction = \"normal\";\n    }\n    setSortedField({\n      key,\n      direction\n    });\n  };\n\n  // useEffect(() => {\n  if (sortedField.direction === \"normal\") {\n    // setSortedData(records);\n  } else if (sortedField.key === \"transactionAmount\") {\n    let newData = sortedData;\n    if (sortedField.direction === \"ascending\") {\n      newData.sort((a, b) => {\n        var _a$sortedField$key, _b$sortedField$key;\n        return ((_a$sortedField$key = a[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _a$sortedField$key === void 0 ? void 0 : _a$sortedField$key.value) - ((_b$sortedField$key = b[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _b$sortedField$key === void 0 ? void 0 : _b$sortedField$key.value);\n      });\n    } else if (sortedField.direction === \"descending\") {\n      newData.sort((a, b) => {\n        var _b$sortedField$key2, _a$sortedField$key2;\n        return ((_b$sortedField$key2 = b[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _b$sortedField$key2 === void 0 ? void 0 : _b$sortedField$key2.value) - ((_a$sortedField$key2 = a[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _a$sortedField$key2 === void 0 ? void 0 : _a$sortedField$key2.value);\n      });\n    }\n    setSortedData(newData);\n  } else if (sortedField.key === \"transactionDate\") {\n    let newData = sortedData;\n    if (sortedField.direction === \"ascending\") {\n      newData.sort((a, b) => {\n        var _a$sortedField$key3, _b$sortedField$key3;\n        return new Date((_a$sortedField$key3 = a[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _a$sortedField$key3 === void 0 ? void 0 : _a$sortedField$key3.value) - new Date((_b$sortedField$key3 = b[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _b$sortedField$key3 === void 0 ? void 0 : _b$sortedField$key3.value);\n      });\n      setSortedData(newData);\n    } else if (sortedField.direction === \"descending\") {\n      let newData = sortedData;\n      newData.sort((a, b) => {\n        var _b$sortedField$key4, _a$sortedField$key4;\n        return new Date((_b$sortedField$key4 = b[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _b$sortedField$key4 === void 0 ? void 0 : _b$sortedField$key4.value) - new Date((_a$sortedField$key4 = a[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _a$sortedField$key4 === void 0 ? void 0 : _a$sortedField$key4.value);\n      });\n    }\n    setSortedData(newData);\n  } else if (sortedField.key === \"monthYear\") {\n    let newData = sortedData;\n    if (sortedField.direction === \"ascending\") {\n      console.log(months.indexOf(\"January 2023\"));\n      newData.sort((a, b) => {\n        var _a$sortedField$key5, _b$sortedField$key5;\n        return months.indexOf((_a$sortedField$key5 = a[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _a$sortedField$key5 === void 0 ? void 0 : _a$sortedField$key5.value) - months.indexOf((_b$sortedField$key5 = b[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _b$sortedField$key5 === void 0 ? void 0 : _b$sortedField$key5.value);\n      });\n      setSortedData(newData);\n    } else if (sortedField.direction === \"descending\") {\n      let newData = sortedData;\n      newData.sort((a, b) => {\n        var _b$sortedField$key6, _a$sortedField$key6;\n        return months.indexOf((_b$sortedField$key6 = b[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _b$sortedField$key6 === void 0 ? void 0 : _b$sortedField$key6.value) - months.indexOf((_a$sortedField$key6 = a[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _a$sortedField$key6 === void 0 ? void 0 : _a$sortedField$key6.value);\n      });\n    }\n    setSortedData(newData);\n  } else {\n    let newData = sortedData;\n    newData.sort((a, b) => {\n      var _a$sortedField$key7, _a$sortedField$key7$v, _b$sortedField$key7, _b$sortedField$key7$v, _a$sortedField$key8, _a$sortedField$key8$v, _b$sortedField$key8, _b$sortedField$key8$v;\n      // console.log(a[sortedField?.key].value < b[sortedField?.key].value);\n      if (((_a$sortedField$key7 = a[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _a$sortedField$key7 === void 0 ? void 0 : (_a$sortedField$key7$v = _a$sortedField$key7.value) === null || _a$sortedField$key7$v === void 0 ? void 0 : _a$sortedField$key7$v.toLowerCase()) < ((_b$sortedField$key7 = b[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _b$sortedField$key7 === void 0 ? void 0 : (_b$sortedField$key7$v = _b$sortedField$key7.value) === null || _b$sortedField$key7$v === void 0 ? void 0 : _b$sortedField$key7$v.toLowerCase())) {\n        return sortedField.direction === \"ascending\" ? -1 : 1;\n      }\n      if (((_a$sortedField$key8 = a[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _a$sortedField$key8 === void 0 ? void 0 : (_a$sortedField$key8$v = _a$sortedField$key8.value) === null || _a$sortedField$key8$v === void 0 ? void 0 : _a$sortedField$key8$v.toLowerCase()) > ((_b$sortedField$key8 = b[sortedField === null || sortedField === void 0 ? void 0 : sortedField.key]) === null || _b$sortedField$key8 === void 0 ? void 0 : (_b$sortedField$key8$v = _b$sortedField$key8.value) === null || _b$sortedField$key8$v === void 0 ? void 0 : _b$sortedField$key8$v.toLowerCase())) {\n        return sortedField.direction === \"ascending\" ? 1 : -1;\n      }\n      return 0;\n    });\n  }\n  // }, [sortedField]);\n\n  // pagination.........\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage, setPostPerPage] = useState(2);\n  const lastPostIndex = currentPage * postPerPage;\n  const firstPostIndex = lastPostIndex - postPerPage;\n  const paginationData = records.slice(firstPostIndex, lastPostIndex);\n  console.log(\"pagination\");\n  console.log(paginationData);\n  let totalPosts = records.length;\n  let pages = [];\n  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\n    pages.push(i);\n  }\n  let nThPage = pages.length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => {\n            sorting(\"transactionDate\");\n          },\n          children: \"Transaction Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => {\n            sorting(\"monthYear\");\n          },\n          children: \"Month Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => {\n            sorting(\"transactionType\");\n          },\n          children: \"Transaction Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => {\n            sorting(\"fromAccount\");\n          },\n          children: \"From Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => {\n            sorting(\"toAccount\");\n          },\n          children: \"To Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => {\n            sorting(\"transactionAmount\");\n          },\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Receipt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => {\n            sorting(\"notes\");\n          },\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: paginationData.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.transactionDate.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.monthYear.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.transactionType.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.fromAccount.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.toAccount.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Intl.NumberFormat(\"en-IN\", {\n              style: \"currency\",\n              currency: \"INR\"\n            }).format(transaction.transactionAmount.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: transaction.receipt.value,\n              width: 50,\n              height: 50,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.notes.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"View\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"page\",\n        onClick: () => {\n          if (currentPage !== 1) {\n            setCurrentPage(currentPage - 1);\n          }\n        },\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), pages.map((page, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: page === currentPage ? \"active\" : \"page\",\n          onClick: () => {\n            setCurrentPage(page);\n          },\n          children: page\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"page\",\n        onClick: () => {\n          if (currentPage !== nThPage) {\n            setCurrentPage(currentPage + 1);\n          }\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Table, \"Zw7OIUMaOWV87g9DQlV2Nq6d1Zo=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","months","Table","props","_s","records","console","log","sortedData","setSortedData","sortedField","setSortedField","sorting","key","direction","newData","sort","a","b","_a$sortedField$key","_b$sortedField$key","value","_b$sortedField$key2","_a$sortedField$key2","_a$sortedField$key3","_b$sortedField$key3","Date","_b$sortedField$key4","_a$sortedField$key4","indexOf","_a$sortedField$key5","_b$sortedField$key5","_b$sortedField$key6","_a$sortedField$key6","_a$sortedField$key7","_a$sortedField$key7$v","_b$sortedField$key7","_b$sortedField$key7$v","_a$sortedField$key8","_a$sortedField$key8$v","_b$sortedField$key8","_b$sortedField$key8$v","toLowerCase","currentPage","setCurrentPage","postPerPage","setPostPerPage","lastPostIndex","firstPostIndex","paginationData","slice","totalPosts","length","pages","i","Math","ceil","push","nThPage","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","transaction","index","transactionDate","monthYear","transactionType","fromAccount","toAccount","Intl","NumberFormat","style","currency","format","transactionAmount","src","receipt","width","height","alt","notes","href","className","page","_c","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/khatabook/src/components/Table.jsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nconst months = [\n  \"January 2023\",\n  \"February 2023\",\n  \"March 2023\",\n  \"April 2023\",\n  \"May 2023\",\n  \"June 2023\",\n  \"July 2023\",\n  \"August 2023\",\n  \"September 2023\",\n  \"October 2023\",\n  \"November 2023\",\n  \"December 2023\",\n];\n\nconst Table = (props) => {\n  let records = props.records;\n  console.log(\"props\");\n  console.log(props)\n\n  let [sortedData, setSortedData] = useState(records);\n  const [sortedField, setSortedField] = useState({});\n\n  // // pagination.........\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [postPerPage, setPostPerPage] = useState(3);\n  // const lastPostIndex = currentPage * postPerPage;\n  // const firstPostIndex = lastPostIndex - postPerPage;\n  // const paginationData = sortedData.slice(firstPostIndex, lastPostIndex);\n\n  // let totalPosts = records.length;\n  // let pages = [];\n  // for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\n  //   pages.push(i);\n  // }\n  // let nThPage = pages.length;\n\n  const sorting = (key) => {\n    let direction = \"ascending\";\n\n    if (sortedField.key === key && sortedField.direction === \"ascending\") {\n      direction = \"descending\";\n    } else if (\n      sortedField.key === key &&\n      sortedField.direction === \"descending\"\n    ) {\n      direction = \"normal\";\n    }\n    setSortedField({ key, direction });\n  };\n\n  // useEffect(() => {\n    if (sortedField.direction === \"normal\") {\n      // setSortedData(records);\n    } else if (sortedField.key === \"transactionAmount\") {\n      let newData = sortedData;\n      if (sortedField.direction === \"ascending\") {\n        newData.sort((a, b) => {\n          return a[sortedField?.key]?.value - b[sortedField?.key]?.value;\n        });\n      } else if (sortedField.direction === \"descending\") {\n        newData.sort((a, b) => {\n          return b[sortedField?.key]?.value - a[sortedField?.key]?.value;\n        });\n      }\n      setSortedData(newData);\n    } else if (sortedField.key === \"transactionDate\") {\n      let newData = sortedData;\n      if (sortedField.direction === \"ascending\") {\n        newData.sort((a, b) => {\n          return (\n            new Date(a[sortedField?.key]?.value) -\n            new Date(b[sortedField?.key]?.value)\n          );\n        });\n        setSortedData(newData);\n      } else if (sortedField.direction === \"descending\") {\n        let newData = sortedData;\n        newData.sort((a, b) => {\n          return (\n            new Date(b[sortedField?.key]?.value) -\n            new Date(a[sortedField?.key]?.value)\n          );\n        });\n      }\n      setSortedData(newData);\n    } else if (sortedField.key === \"monthYear\") {\n      let newData = sortedData;\n      if (sortedField.direction === \"ascending\") {\n        console.log(months.indexOf(\"January 2023\"));\n        newData.sort((a, b) => {\n          return (\n            months.indexOf(a[sortedField?.key]?.value) -\n            months.indexOf(b[sortedField?.key]?.value)\n          );\n        });\n        setSortedData(newData);\n      } else if (sortedField.direction === \"descending\") {\n        let newData = sortedData;\n        newData.sort((a, b) => {\n          return (\n            months.indexOf(b[sortedField?.key]?.value) -\n            months.indexOf(a[sortedField?.key]?.value)\n          );\n        });\n      }\n      setSortedData(newData);\n    } else {\n      let newData = sortedData;\n\n      newData.sort((a, b) => {\n        // console.log(a[sortedField?.key].value < b[sortedField?.key].value);\n        if (\n          a[sortedField?.key]?.value?.toLowerCase() <\n          b[sortedField?.key]?.value?.toLowerCase()\n        ) {\n          return sortedField.direction === \"ascending\" ? -1 : 1;\n        }\n\n        if (\n          a[sortedField?.key]?.value?.toLowerCase() >\n          b[sortedField?.key]?.value?.toLowerCase()\n        ) {\n          return sortedField.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n  // }, [sortedField]);\n\n  // pagination.........\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage, setPostPerPage] = useState(2);\n  const lastPostIndex = currentPage * postPerPage;\n  const firstPostIndex = lastPostIndex - postPerPage;\n  const paginationData = records.slice(firstPostIndex, lastPostIndex);\n  console.log(\"pagination\")\n  console.log(paginationData);\n\n  let totalPosts = records.length;\n  let pages = [];\n  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\n    pages.push(i);\n  }\n  let nThPage = pages.length;\n\n  return (\n    <>\n      <table>\n        <thead>\n          <th\n            onClick={() => {\n              sorting(\"transactionDate\");\n            }}\n          >\n            Transaction Date\n          </th>\n          <th\n            onClick={() => {\n              sorting(\"monthYear\");\n            }}\n          >\n            Month Year\n          </th>\n          <th\n            onClick={() => {\n              sorting(\"transactionType\");\n            }}\n          >\n            Transaction Type\n          </th>\n          <th\n            onClick={() => {\n              sorting(\"fromAccount\");\n            }}\n          >\n            From Account\n          </th>\n          <th\n            onClick={() => {\n              sorting(\"toAccount\");\n            }}\n          >\n            To Account\n          </th>\n          <th\n            onClick={() => {\n              sorting(\"transactionAmount\");\n            }}\n          >\n            Amount\n          </th>\n          <th>Receipt</th>\n          <th\n            onClick={() => {\n              sorting(\"notes\");\n            }}\n          >\n            Notes\n          </th>\n          <th>Action</th>\n        </thead>\n        <tbody>\n          {paginationData.map((transaction, index) => (\n            \n            <tr>\n              <td>{transaction.transactionDate.value}</td>\n              <td>{transaction.monthYear.value}</td>\n              <td>{transaction.transactionType.value}</td>\n              <td>{transaction.fromAccount.value}</td>\n              <td>{transaction.toAccount.value}</td>\n              <td>\n                {Intl.NumberFormat(\"en-IN\", {\n                  style: \"currency\",\n                  currency: \"INR\",\n                }).format(transaction.transactionAmount.value)}\n              </td>\n              <td>\n                <img\n                  src={transaction.receipt.value}\n                  width={50}\n                  height={50}\n                  alt=\"\"\n                />\n              </td>\n              <td>{transaction.notes.value}</td>\n              <td>\n                <a href=\"#\" key={index}>\n                  View\n                </a>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"pagination\">\n        <button\n          className=\"page\"\n          onClick={() => {\n            if (currentPage !== 1) {\n              setCurrentPage(currentPage - 1);\n            }\n          }}\n        >\n          Prev\n        </button>\n\n        {pages.map((page, index) => {\n          return (\n            <button\n              key={index}\n              className={page === currentPage ? \"active\" : \"page\"}\n              onClick={() => {\n                setCurrentPage(page);\n              }}\n            >\n              {page}\n            </button>\n          );\n        })}\n\n        <button\n          className=\"page\"\n          onClick={() => {\n            if (currentPage !== nThPage) {\n              setCurrentPage(currentPage + 1);\n            }\n          }}\n        >\n          Next\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Table;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}