{"ast":null,"code":"var _jsxFileName = \"/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport \"./Form.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// const getTransactionDetails = () => {\n//   const storeDetails = localStorage.getItem(\"transactionForm\");\n//   if (!storeDetails)\n//     return {\n//       transactionDate: \"\",\n//       monthYear: \"\",\n//       transactionType: \"\",\n//       fromAccount: \"\",\n//       toAccount: \"\",\n//       transactionAmount: \"\",\n//       receipt: \"\",\n//       notes: \"\",\n//     };\n//   return JSON.stringify(storeDetails);\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransactonForm = () => {\n  _s();\n  // const [details, setDetails] = useState({\n  //   transactionDate: \"\",\n  //   monthYear: \"\",\n  //   transactionType: \"\",\n  //   fromAccount: \"\",\n  //   toAccount: \"\",\n  //   transactionAmount: \"\",\n  //   receipt: \"\",\n  //   notes: \"\",\n  // });\n\n  // const [error, setError] = useState({\n  //   transactionDate: \"\",\n  //   monthYear: \"\",\n  //   transactionType: \"\",\n  //   fromAccount: \"\",\n  //   toAccount: \"\",\n  //   transactionAmount: \"\",\n  //   receipt: \"\",\n  //   notes: \"\",\n  // });\n\n  const formDetails = {\n    monthYear: {\n      value: \"\",\n      error: \"\"\n    },\n    transactionDate: {\n      value: \"\",\n      error: \"\"\n    },\n    transactionType: {\n      value: \"\",\n      error: \"\"\n    },\n    fromAccount: {\n      value: \"\",\n      error: \"\"\n    },\n    toAccount: {\n      value: \"\",\n      error: \"\"\n    },\n    transactionAmount: {\n      value: \"\",\n      error: \"\"\n    },\n    receipt: {\n      value: \"\",\n      error: \"\"\n    },\n    notes: {\n      value: \"\",\n      error: \"\"\n    }\n  };\n  const [data, setData] = useState(formDetails);\n  const [isValidate, setValidate] = useState(true);\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"transactionForm\", JSON.stringify(data));\n  // }, [data]);\n\n  // useEffect(()=>{\n\n  // })\n\n  //   const hasChange = (e) => {\n  //     const { name, value } = e.target;\n  //     console.log(name, value);\n  //     setDetails(\n  //       { ...details, [name]: value }\n  // //       (prev)=>{\n  // // return( {...prev,[name]:value})\n  // //     }\n  //     );\n  //   };\n\n  // const hasChange =(e)=>{\n  //   const {name,value} = e.target;\n  //   setDetails((prev)=>{\n  //   return {...prev, [name]:value}\n  // })\n  // }\n  // onchange functions\n  const DateHandler = e => {\n    const date = e;\n    console.log(date, \"date\");\n    // console.log(date);\n    // setData((prev) => ({\n    //   ...prev,\n    //   transactionDate: {\n    //     ...prev.transactionDate,\n    //     value: date,\n    //   },\n    // }));\n\n    if (date) {\n      setData(prev => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          value: date,\n          error: \"\"\n        }\n      }));\n    } else {\n      setData(prev => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          error: \"date is Requierd!!\"\n        }\n      }));\n      setValidate(true);\n    }\n  };\n  const MonthHandler = e => {\n    const month = e;\n    if (month) {\n      if (month === \"Select\") {\n        setData(prev => ({\n          ...prev,\n          monthYear: {\n            ...prev.monthYear,\n            error: \"Month is Required!!\"\n          }\n        }));\n        setValidate(true);\n      } else {\n        setData(prev => ({\n          ...prev,\n          monthYear: {\n            ...prev.monthYear,\n            value: month,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        monthYear: {\n          ...prev.monthYear,\n          error: \"Month is Required!!\"\n        }\n      }));\n      setValidate(true);\n    }\n  };\n  const TypeHandler = e => {\n    const type = e;\n    // setData((prev) => ({\n    //   ...prev,\n    //   transactionType: {\n    //     ...prev.transactionType,\n    //     value: type,\n    //   },\n    // }));\n    if (type) {\n      if (type === \"Select\") {\n        setData(prev => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            error: \"type is Required!!\"\n          }\n        }));\n        setValidate(true);\n      } else {\n        setData(prev => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            value: type,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        transactionType: {\n          ...prev.transactionType,\n          error: \"type is Required!!\"\n        }\n      }));\n      setValidate(false);\n    }\n  };\n  const FromActHandler = e => {\n    const FromAcc = e;\n    // setData((prev) => ({\n    //   ...prev,\n    //   fromAccount: {\n    //     ...prev.fromAccount,\n    //     value: FromAcc,\n    //   },\n    // }));\n    if (FromAcc) {\n      if (FromAcc === \"Select\") {\n        setData(prev => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            error: \"Account is Required!!\"\n          }\n        }));\n        setValidate(true);\n      } else {\n        setData(prev => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            value: FromAcc,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        fromAccount: {\n          ...prev.fromAccount,\n          error: \"Account is Required\"\n        }\n      }));\n      setValidate(true);\n    }\n  };\n  const toActHandler = e => {\n    const ToAcc = e;\n\n    // setData((prev) => ({\n    //   ...prev,\n    //   toAccount: {\n    //     ...prev.toAccount,\n    //     value: ToAcc,\n    //   },\n    // }));\n    if (ToAcc) {\n      if (ToAcc === \"Select\") {\n        setData(prev => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            error: \"Account is Required!!\"\n          }\n        }));\n        setValidate(true);\n      } else {\n        setData(prev => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            value: ToAcc,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        toAccount: {\n          ...prev.toAccount,\n          error: \"Account is Required!!\"\n        }\n      }));\n      setValidate(true);\n    }\n  };\n  const AmountHandler = e => {\n    const value = e;\n    setData(prev => ({\n      ...prev,\n      transactionAmount: {\n        ...prev.transactionAmount,\n        value: value\n      }\n    }));\n    if (value) {\n      if (value.length < 2) {\n        setData(prev => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            error: \"Amount is too short!!\"\n          }\n        }));\n        setValidate(true);\n      } else {\n        setData(prev => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            value: value,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        transactionAmount: {\n          ...prev.transactionAmount,\n          error: \"amount is Required!!\"\n        }\n      }));\n      setValidate(true);\n    }\n    console.log(value);\n  };\n  const ReceiptHandler = e => {\n    if (e) {\n      var _e$target;\n      if ((e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.type) === \"file\") {\n        var _e$target2;\n        if ((e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.files[0].size) > 10000) {\n          setData(prev => ({\n            ...prev,\n            receipt: {\n              ...prev.receipt,\n              error: \"Image is too large\"\n            }\n          }));\n          setValidate(true);\n        } else {\n          let freader = new FileReader();\n          freader.readAsDataURL(e.target.files[0]);\n          freader.addEventListener(\"load\", () => {\n            const receiptPhoto = freader.result;\n            setData(prev => ({\n              ...prev,\n              receipt: {\n                ...prev.receipt,\n                value: receiptPhoto,\n                error: \"\"\n              }\n            }));\n\n            // setData((prev) => ({\n            //   ...prev,\n            //   receipt: {\n            //     ...prev.receipt,\n            //     error: \"\",\n            //   },\n            // }));\n          });\n        }\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        receipt: {\n          ...prev.receipt,\n          error: \"Receipt is Required!!\"\n        }\n      }));\n      setValidate(true);\n    }\n  };\n  const NotesHandler = e => {\n    const notes = e;\n    console.log(notes);\n    setData(prev => ({\n      ...prev,\n      notes: {\n        ...prev.notes,\n        value: notes\n      }\n    }));\n    if (notes.trim()) {\n      if (notes.trim().length > 250 || notes.trim().length < 3) {\n        setData(prev => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"Notes is Required!!\"\n          }\n        }));\n        setValidate(true);\n      } else {\n        setData(prev => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        notes: {\n          ...prev.notes,\n          error: \"Notes is Required!!\"\n        }\n      }));\n      setValidate(true);\n    }\n  };\n  console.log(\"data.....\");\n  console.log(data, \"initial value\");\n  const submitHandler = e => {\n    e.preventDefault();\n    AmountHandler(data.transactionAmount.value);\n    DateHandler(data.transactionDate.value);\n    TypeHandler(data.transactionType.value);\n    FromActHandler(data.fromAccount.value);\n    toActHandler(data.toAccount.value);\n    NotesHandler(data.notes.value);\n    MonthHandler(data.monthYear.value);\n    ReceiptHandler(data.receipt.value);\n    console.log(data.fromAccount.error, \"error of account\");\n    console.log(isValidate, \"error\");\n    if (!isValidate) {\n      if (localStorage.getItem(\"transactionForm\")) {\n        const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n        retrivedata.push(data);\n        localStorage.setItem(\"transactionForm\", JSON.stringify(retrivedata));\n      } else {\n        localStorage.setItem(\"transactionForm\", JSON.stringify([data]));\n      }\n      navigate(\"/transaction\");\n    } else {\n      console.log(\"error existed\");\n    }\n  };\n  const MonthArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const TransactionTypeArr = [\"Home Expense\", \"Personal Expense\", \"Income\"];\n  const AccountArr = [\"Personal Account\", \"Real Living\", \"My Dream Home\", \"Full Circle\", \"Core Realtors\", \"Big Block\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Transaction Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"transactionDate\",\n            value: data.transactionDate.value,\n            onChange: e => {\n              DateHandler(e.target.value);\n            },\n            onClick: () => {\n              const newdate = new Date();\n              var year = newdate.getFullYear();\n              var month = newdate.getMonth() + 1;\n              var day = newdate.getDate();\n              if (month < 10) {\n                month = \"0\" + month;\n              }\n              if (day < 10) {\n                day = \"0\" + day;\n              }\n              var limit = `${year}-${month}-${day}`;\n              document.getElementById(\"date\").setAttribute(\"max\", limit);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.transactionDate.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Month Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"monthYear\",\n            value: data.monthYear.value,\n            id: \"\",\n            onChange: e => {\n              MonthHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this), MonthArr.map(month => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `${month} 2023`,\n                children: `${month} 2023`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.monthYear.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Transaction Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"transactionType\",\n            value: data.transactionType.value,\n            onChange: e => {\n              TypeHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this), TransactionTypeArr.map(type => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `${type}`,\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.transactionType.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"From Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"fromAccount\",\n            value: data.fromAccount.value,\n            onChange: e => {\n              FromActHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 15\n            }, this), AccountArr.map(account => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: account,\n                children: account\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.fromAccount.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"To Account: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"toAccount\",\n            value: data.toAccount.value,\n            onChange: e => {\n              toActHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this), AccountArr.map(account => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: account,\n                children: account\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.toAccount.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"transactionAmount\",\n            value: data.transactionAmount.value,\n            onChange: e => {\n              AmountHandler(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.transactionAmount.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Receipt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"receipt\",\n            alt: \"Receipt is not found\",\n            onChange: e => {\n              ReceiptHandler(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.receipt.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: \"30\",\n            rows: \"6\",\n            name: \"notes\",\n            value: data.notes.value,\n            onChange: e => {\n              NotesHandler(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.notes.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submitBtn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TransactonForm, \"aR1P+xCE+UQIrVGLh/fk9P0brSM=\", false, function () {\n  return [useNavigate];\n});\n_c = TransactonForm;\nexport default TransactonForm;\nvar _c;\n$RefreshReg$(_c, \"TransactonForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactonForm","_s","formDetails","monthYear","value","error","transactionDate","transactionType","fromAccount","toAccount","transactionAmount","receipt","notes","data","setData","isValidate","setValidate","navigate","DateHandler","e","date","console","log","prev","MonthHandler","month","TypeHandler","type","FromActHandler","FromAcc","toActHandler","ToAcc","AmountHandler","length","ReceiptHandler","_e$target","target","_e$target2","files","size","freader","FileReader","readAsDataURL","addEventListener","receiptPhoto","result","NotesHandler","trim","submitHandler","preventDefault","localStorage","getItem","retrivedata","JSON","parse","push","setItem","stringify","MonthArr","TransactionTypeArr","AccountArr","children","className","onSubmit","method","fileName","_jsxFileName","lineNumber","columnNumber","id","name","onChange","onClick","newdate","Date","year","getFullYear","getMonth","day","getDate","limit","document","getElementById","setAttribute","selected","map","account","alt","cols","rows","_c","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx"],"sourcesContent":["import \"./Form.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// const getTransactionDetails = () => {\n//   const storeDetails = localStorage.getItem(\"transactionForm\");\n//   if (!storeDetails)\n//     return {\n//       transactionDate: \"\",\n//       monthYear: \"\",\n//       transactionType: \"\",\n//       fromAccount: \"\",\n//       toAccount: \"\",\n//       transactionAmount: \"\",\n//       receipt: \"\",\n//       notes: \"\",\n//     };\n//   return JSON.stringify(storeDetails);\n// };\nconst TransactonForm = () => {\n  // const [details, setDetails] = useState({\n  //   transactionDate: \"\",\n  //   monthYear: \"\",\n  //   transactionType: \"\",\n  //   fromAccount: \"\",\n  //   toAccount: \"\",\n  //   transactionAmount: \"\",\n  //   receipt: \"\",\n  //   notes: \"\",\n  // });\n\n  // const [error, setError] = useState({\n  //   transactionDate: \"\",\n  //   monthYear: \"\",\n  //   transactionType: \"\",\n  //   fromAccount: \"\",\n  //   toAccount: \"\",\n  //   transactionAmount: \"\",\n  //   receipt: \"\",\n  //   notes: \"\",\n  // });\n\n  const formDetails = {\n    monthYear: {\n      value: \"\",\n      error: \"\",\n    },\n    transactionDate: {\n      value: \"\",\n      error: \"\",\n    },\n    transactionType: {\n      value: \"\",\n      error: \"\",\n    },\n    fromAccount: {\n      value: \"\",\n      error: \"\",\n    },\n    toAccount: {\n      value: \"\",\n      error: \"\",\n    },\n    transactionAmount: {\n      value: \"\",\n      error: \"\",\n    },\n    receipt: {\n      value: \"\",\n      error: \"\",\n    },\n    notes: {\n      value: \"\",\n      error: \"\",\n    },\n  };\n\n  const [data, setData] = useState(formDetails);\n  const [isValidate, setValidate] = useState(true);\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"transactionForm\", JSON.stringify(data));\n  // }, [data]);\n\n  // useEffect(()=>{\n\n  // })\n\n  //   const hasChange = (e) => {\n  //     const { name, value } = e.target;\n  //     console.log(name, value);\n  //     setDetails(\n  //       { ...details, [name]: value }\n  // //       (prev)=>{\n  // // return( {...prev,[name]:value})\n  // //     }\n  //     );\n  //   };\n\n  // const hasChange =(e)=>{\n  //   const {name,value} = e.target;\n  //   setDetails((prev)=>{\n  //   return {...prev, [name]:value}\n  // })\n  // }\n  // onchange functions\n  const DateHandler = (e) => {\n    const date = e;\n    console.log(date, \"date\");\n    // console.log(date);\n    // setData((prev) => ({\n    //   ...prev,\n    //   transactionDate: {\n    //     ...prev.transactionDate,\n    //     value: date,\n    //   },\n    // }));\n\n    if (date) {\n      setData((prev) => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          value: date,\n          error: \"\",\n        },\n      }));\n    } else {\n      setData((prev) => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          error: \"date is Requierd!!\",\n        },\n      }));\n      setValidate(true);\n    }\n  };\n\n  const MonthHandler = (e) => {\n    const month = e;\n    if (month) {\n      if (month === \"Select\") {\n        setData((prev) => ({\n          ...prev,\n          monthYear: {\n            ...prev.monthYear,\n            error: \"Month is Required!!\",\n          },\n        }));\n        setValidate(true);\n      } else {\n        setData((prev) => ({\n          ...prev,\n          monthYear: {\n            ...prev.monthYear,\n            value: month,\n            error: \"\",\n          },\n        }));\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        monthYear: {\n          ...prev.monthYear,\n          error: \"Month is Required!!\",\n        },\n      }));\n      setValidate(true);\n    }\n  };\n\n  const TypeHandler = (e) => {\n    const type = e;\n    // setData((prev) => ({\n    //   ...prev,\n    //   transactionType: {\n    //     ...prev.transactionType,\n    //     value: type,\n    //   },\n    // }));\n    if (type) {\n      if (type === \"Select\") {\n        setData((prev) => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            error: \"type is Required!!\",\n          },\n        }));\n        setValidate(true);\n      } else {\n        setData((prev) => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            value: type,\n            error: \"\",\n          },\n        }));\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        transactionType: {\n          ...prev.transactionType,\n          error: \"type is Required!!\",\n        },\n      }));\n      setValidate(false);\n    }\n  };\n\n  const FromActHandler = (e) => {\n    const FromAcc = e;\n    // setData((prev) => ({\n    //   ...prev,\n    //   fromAccount: {\n    //     ...prev.fromAccount,\n    //     value: FromAcc,\n    //   },\n    // }));\n    if (FromAcc) {\n      if (FromAcc === \"Select\") {\n        setData((prev) => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            error: \"Account is Required!!\",\n          },\n        }));\n        setValidate(true);\n      } else {\n        setData((prev) => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            value: FromAcc,\n            error: \"\",\n          },\n        }));\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        fromAccount: {\n          ...prev.fromAccount,\n          error: \"Account is Required\",\n        },\n      }));\n      setValidate(true);\n    }\n  };\n\n  const toActHandler = (e) => {\n    const ToAcc = e;\n\n    // setData((prev) => ({\n    //   ...prev,\n    //   toAccount: {\n    //     ...prev.toAccount,\n    //     value: ToAcc,\n    //   },\n    // }));\n    if (ToAcc) {\n      if (ToAcc === \"Select\") {\n        setData((prev) => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            error: \"Account is Required!!\",\n          },\n        }));\n        setValidate(true);\n      } else {\n        setData((prev) => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            value: ToAcc,\n            error: \"\",\n          },\n        }));\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        toAccount: {\n          ...prev.toAccount,\n          error: \"Account is Required!!\",\n        },\n      }));\n      setValidate(true);\n    }\n  };\n\n  const AmountHandler = (e) => {\n    const value = e;\n    setData((prev) => ({\n      ...prev,\n      transactionAmount: {\n        ...prev.transactionAmount,\n        value: value,\n      },\n    }));\n\n    if (value) {\n      if (value.length < 2) {\n        setData((prev) => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            error: \"Amount is too short!!\",\n          },\n        }));\n        setValidate(true);\n      } else {\n        setData((prev) => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            value: value,\n            error: \"\",\n          },\n        }));\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        transactionAmount: {\n          ...prev.transactionAmount,\n          error: \"amount is Required!!\",\n        },\n      }));\n      setValidate(true);\n    }\n\n    console.log(value);\n  };\n\n  const ReceiptHandler = (e) => {\n    if (e) {\n      if (e?.target?.type === \"file\") {\n        if (e?.target?.files[0].size > 10000) {\n          setData((prev) => ({\n            ...prev,\n            receipt: {\n              ...prev.receipt,\n              error: \"Image is too large\",\n            },\n          }));\n          setValidate(true);\n        } else {\n          let freader = new FileReader();\n\n          freader.readAsDataURL(e.target.files[0]);\n\n          freader.addEventListener(\"load\", () => {\n            const receiptPhoto = freader.result;\n            setData((prev) => ({\n              ...prev,\n              receipt: {\n                ...prev.receipt,\n                value: receiptPhoto,\n                error: \"\",\n              },\n            }));\n\n            // setData((prev) => ({\n            //   ...prev,\n            //   receipt: {\n            //     ...prev.receipt,\n            //     error: \"\",\n            //   },\n            // }));\n          });\n        }\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        receipt: {\n          ...prev.receipt,\n          error: \"Receipt is Required!!\",\n        },\n      }));\n      setValidate(true);\n    }\n  };\n\n  const NotesHandler = (e) => {\n    const notes = e;\n    console.log(notes);\n    setData((prev) => ({\n      ...prev,\n      notes: {\n        ...prev.notes,\n        value: notes,\n      },\n    }));\n\n    if (notes.trim()) {\n      if (notes.trim().length > 250 || notes.trim().length < 3) {\n        setData((prev) => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"Notes is Required!!\",\n          },\n        }));\n        setValidate(true);\n      } else {\n        setData((prev) => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"\",\n          },\n        }));\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        notes: {\n          ...prev.notes,\n          error: \"Notes is Required!!\",\n        },\n      }));\n      setValidate(true);\n    }\n  };\n\n  console.log(\"data.....\");\n  console.log(data, \"initial value\");\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    AmountHandler(data.transactionAmount.value);\n    DateHandler(data.transactionDate.value);\n    TypeHandler(data.transactionType.value);\n    FromActHandler(data.fromAccount.value);\n    toActHandler(data.toAccount.value);\n    NotesHandler(data.notes.value);\n    MonthHandler(data.monthYear.value);\n    ReceiptHandler(data.receipt.value);\n    console.log(data.fromAccount.error, \"error of account\");\n\n    console.log(isValidate, \"error\");\n\n    if (!isValidate) {\n      if (localStorage.getItem(\"transactionForm\")) {\n        const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n        retrivedata.push(data);\n\n        localStorage.setItem(\"transactionForm\", JSON.stringify(retrivedata));\n      } else {\n        localStorage.setItem(\"transactionForm\", JSON.stringify([data]));\n      }\n      navigate(\"/transaction\");\n    }else{\n      console.log(\"error existed\")\n    }\n  };\n\n  const MonthArr = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const TransactionTypeArr = [\"Home Expense\", \"Personal Expense\", \"Income\"];\n  const AccountArr = [\n    \"Personal Account\",\n    \"Real Living\",\n    \"My Dream Home\",\n    \"Full Circle\",\n    \"Core Realtors\",\n    \"Big Block\",\n  ];\n\n  return (\n    <>\n      <div className=\"form\">\n        <form onSubmit={submitHandler} method=\"POST\">\n          <label className=\"label\">Transaction Date:</label>\n          <div className=\"input\">\n            <input\n              type=\"date\"\n              id=\"date\"\n              name=\"transactionDate\"\n              value={data.transactionDate.value}\n              onChange={(e) => {\n                DateHandler(e.target.value);\n              }}\n              onClick={() => {\n                const newdate = new Date();\n                var year = newdate.getFullYear();\n                var month = newdate.getMonth() + 1;\n                var day = newdate.getDate();\n                if (month < 10) {\n                  month = \"0\" + month;\n                }\n                if (day < 10) {\n                  day = \"0\" + day;\n                }\n\n                var limit = `${year}-${month}-${day}`;\n\n                document.getElementById(\"date\").setAttribute(\"max\", limit);\n              }}\n            ></input>\n            <span>{data.transactionDate.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Month Year:</label>\n\n          <div className=\"input\">\n            <select\n              name=\"monthYear\"\n              value={data.monthYear.value}\n              id=\"\"\n              onChange={(e) => {\n                MonthHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" selected>\n                Select\n              </option>\n\n              {MonthArr.map((month) => {\n                return (\n                  <option value={`${month} 2023`}>{`${month} 2023`}</option>\n                );\n              })}\n\n              {/* <option value=\"Jan 2023\">Jan 2023</option>\n                <option value=\"Feb 2023\">Feb 2023</option>\n                */}\n            </select>\n            <span>{data.monthYear.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Transaction Type:</label>\n          <div className=\"input\">\n            <select\n              name=\"transactionType\"\n              value={data.transactionType.value}\n              onChange={(e) => {\n                TypeHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" selected>\n                Select\n              </option>\n              {TransactionTypeArr.map((type) => {\n                return <option value={`${type}`}>{type}</option>;\n              })}\n            </select>\n            <span>{data.transactionType.error}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">From Account:</label>\n          <div className=\"input\">\n            <select\n              name=\"fromAccount\"\n              value={data.fromAccount.value}\n              onChange={(e) => {\n                FromActHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" selected>\n                Select\n              </option>\n              {AccountArr.map((account) => {\n                return <option value={account}>{account}</option>;\n              })}\n            </select>\n            <span>{data.fromAccount.error}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">To Account: </label>\n          <div className=\"input\">\n            <select\n              name=\"toAccount\"\n              value={data.toAccount.value}\n              onChange={(e) => {\n                toActHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" selected>\n                Select\n              </option>\n\n              {AccountArr.map((account) => {\n                return <option value={account}>{account}</option>;\n              })}\n            </select>\n            <span>{data.toAccount.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Amount:</label>\n          <div className=\"input\">\n            <input\n              type=\"text\"\n              name=\"transactionAmount\"\n              value={data.transactionAmount.value}\n              onChange={(e) => {\n                AmountHandler(e.target.value);\n              }}\n            ></input>\n            <span>{data.transactionAmount.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Receipt:</label>\n          <div className=\"input\">\n            <input\n              type=\"file\"\n              name=\"receipt\"\n              alt=\"Receipt is not found\"\n              onChange={(e) => {\n                ReceiptHandler(e);\n              }}\n            ></input>\n            <span>{data.receipt.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Notes:</label>\n          <div className=\"input\">\n            <textarea\n              cols=\"30\"\n              rows=\"6\"\n              name=\"notes\"\n              value={data.notes.value}\n              onChange={(e) => {\n                NotesHandler(e.target.value);\n              }}\n            ></textarea>\n            <span>{data.notes.error}</span>\n          </div>\n\n          <button type=\"submit\" className=\"submitBtn\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default TransactonForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}