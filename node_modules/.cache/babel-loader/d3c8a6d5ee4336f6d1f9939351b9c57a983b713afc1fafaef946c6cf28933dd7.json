{"ast":null,"code":"\n// import React from 'react'\n// import { useState } from 'react';\n\n// const Pagination = (props) => {\n\n//  const  sortedData = props.paginationRecords;\n\n//   // pagination.........\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [postPerPage, setPostPerPage] = useState(2);\n\n//  const lastPostIndex = currentPage * postPerPage;\n//  const firstPostIndex = lastPostIndex - postPerPage;\n//  let pagiData = [...sortedData];\n//  const paginationData = pagiData.slice(firstPostIndex, lastPostIndex);\n\n//  let totalPosts = pagiData.length;\n// let pages = [];\n//  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\n//    pages.push(i);\n//  }\n\n// let nThPage = pages.length;\n\n//   return (\n//     <div>\n//       <div className=\"pagination\">\n//         <button\n//           className=\"page\"\n//           onClick={() => {\n//             if (currentPage !== 1) {\n//               setCurrentPage(currentPage - 1);\n//             }\n//           }}\n//         >\n//           Prev\n//         </button>\n\n//         {pages.map((page, index) => {\n//           return (\n//             <button\n//               key={index}\n//               className={page === currentPage ? \"active\" : \"page\"}\n//               onClick={() => {\n//                 setCurrentPage(page);\n//               }}\n//             >\n//               {page}\n//             </button>\n//           );\n//         })}\n\n//         <button\n//           className=\"page\"\n//           onClick={() => {\n//             if (currentPage !== nThPage) {\n//               setCurrentPage(currentPage + 1);\n//             }\n//           }}\n//         >\n//           Next\n//         </button>\n//       </div>\n//       ;\n//     </div>\n//   );\n// }\n\n// export default Pagination;","map":{"version":3,"names":[],"sources":["/home/meet-vaghasiya/reactPractice/khatabook/src/components/Pagination.jsx"],"sourcesContent":["\n// import React from 'react'\n// import { useState } from 'react';\n\n// const Pagination = (props) => {\n\n//  const  sortedData = props.paginationRecords;\n\n//   // pagination.........\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [postPerPage, setPostPerPage] = useState(2);\n\n\n//  const lastPostIndex = currentPage * postPerPage;\n//  const firstPostIndex = lastPostIndex - postPerPage;\n//  let pagiData = [...sortedData];\n//  const paginationData = pagiData.slice(firstPostIndex, lastPostIndex);\n\n//  let totalPosts = pagiData.length;\n// let pages = [];\n//  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\n//    pages.push(i);\n//  }\n\n// let nThPage = pages.length;\n\n//   return (\n//     <div>\n//       <div className=\"pagination\">\n//         <button\n//           className=\"page\"\n//           onClick={() => {\n//             if (currentPage !== 1) {\n//               setCurrentPage(currentPage - 1);\n//             }\n//           }}\n//         >\n//           Prev\n//         </button>\n\n//         {pages.map((page, index) => {\n//           return (\n//             <button\n//               key={index}\n//               className={page === currentPage ? \"active\" : \"page\"}\n//               onClick={() => {\n//                 setCurrentPage(page);\n//               }}\n//             >\n//               {page}\n//             </button>\n//           );\n//         })}\n\n//         <button\n//           className=\"page\"\n//           onClick={() => {\n//             if (currentPage !== nThPage) {\n//               setCurrentPage(currentPage + 1);\n//             }\n//           }}\n//         >\n//           Next\n//         </button>\n//       </div>\n//       ;\n//     </div>\n//   );\n// }\n\n// export default Pagination;\n"],"mappings":";AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}