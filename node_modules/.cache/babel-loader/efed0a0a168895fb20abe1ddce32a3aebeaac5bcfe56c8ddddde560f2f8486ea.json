{"ast":null,"code":"var _jsxFileName = \"/home/meet-vaghasiya/reactPractice/khatabook/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport \"../assets/styles/login.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect, React } from \"react\";\nimport { result } from \"../utils/helper\";\nimport * as yup from \"yup\";\nimport formSchema from \"./../Validations/UserValidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const registrationData = JSON.parse(localStorage.getItem(\"registration\"));\n  const navigate = useNavigate();\n  const [loginData, setRegData] = useState({\n    // email: \"\",\n    // password: \"\",\n  });\n\n  // YUP VALIDATIONS...\n\n  const formSchema = yup.object().shape({\n    name: yup.string().required(\"Your name is required!!\"),\n    email: yup.string().email().required(),\n    password: yup.string().min(5).max(12).required(),\n    cpassword: yup.string().oneOf([yup.ref(\"password\"), null], \"Password is not matched!!\").required()\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(formSchema)\n  });\n\n  // ......\n\n  const [error, setError] = useState({});\n  // const [issubmit, setIsSubmit] = useState(false);\n\n  const hasChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRegData(prev => {\n      return {\n        ...prev,\n        [name]: value\n      };\n    });\n    setError(validate(loginData));\n  };\n  const validate = loginData => {\n    const error = {};\n    const regex = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/;\n    if (registrationData) {\n      var _loginData$password;\n      if (!(regex !== null && regex !== void 0 && regex.test(loginData[\"email\"]))) {\n        error.email = \"email is required\";\n      }\n      if (((_loginData$password = loginData[\"password\"]) === null || _loginData$password === void 0 ? void 0 : _loginData$password.length) <= 4) {\n        error.password = \"password is required\";\n      } else {\n        for (const key in registrationData) {\n          if (registrationData[key].email !== loginData.email || registrationData[key].password !== loginData.password) {\n            error.login = \"email & password is not correct\";\n            break;\n          } else {\n            // error.login = \"\"\n            setError(prev => {\n              return {\n                ...prev,\n                login: \"\"\n              };\n            });\n            break;\n          }\n        }\n      }\n      return error;\n    } else {\n      error.login = \"first register your self\";\n      return error;\n    }\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    hasChange(e);\n    // console.log(e.target[0].value,\"name\");\n    // console.log(e.target[1].value );\n    // let userData={\n    //   email:e.target[0].value,\n    //   password:e.target[1].value\n    // }\n    // //  setError(validate(loginData));\n    // const isValidate = await formSchema.isValid(userData);\n    // // setIsSubmit(true);\n    // console.log(isValidate,\"massege\");\n  };\n\n  useEffect(() => {\n    if (Object.keys(error).length === 0) {\n      let flag = false;\n      for (const key in registrationData) {\n        if (registrationData[key].email === loginData.email || registrationData[key].password === loginData.password) {\n          flag = true;\n          break;\n        }\n      }\n      if (flag === true) {\n        loginData[\"token\"] = result;\n        localStorage.setItem(\"logindata\", JSON.stringify(loginData));\n        navigate(\"/transaction\");\n      }\n    }\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          className: \"inputFields\",\n          value: loginData.email,\n          onChange: e => hasChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          className: \"pswFields\",\n          value: loginData.password,\n          onChange: e => hasChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"submit\",\n          className: \"ViewBtn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/public/registration\",\n        className: \"loginBtn\",\n        children: \"Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"aWdPs/Iae3FNMPH967noWjIAbM4=\", true, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Link","useNavigate","useState","useEffect","React","result","yup","formSchema","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","registrationData","JSON","parse","localStorage","getItem","navigate","loginData","setRegData","object","shape","name","string","required","email","password","min","max","cpassword","oneOf","ref","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","error","setError","hasChange","e","value","target","prev","validate","regex","_loginData$password","test","length","key","login","submitHandler","preventDefault","Object","keys","flag","setItem","stringify","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","method","type","onChange","id","to","_c","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/khatabook/src/components/Login.jsx"],"sourcesContent":["import \"../assets/styles/login.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect, React } from \"react\";\nimport { result } from \"../utils/helper\";\nimport * as yup from \"yup\";\nimport formSchema from \"./../Validations/UserValidation\";\n\nconst Login = () => {\n  const registrationData = JSON.parse(localStorage.getItem(\"registration\"));\n\n  const navigate = useNavigate();\n  const [loginData, setRegData] = useState({\n    // email: \"\",\n    // password: \"\",\n  });\n\n  // YUP VALIDATIONS...\n\n  const formSchema = yup.object().shape({\n    name: yup.string().required(\"Your name is required!!\"),\n    email: yup.string().email().required(),\n    password: yup.string().min(5).max(12).required(),\n    cpassword: yup\n      .string()\n      .oneOf([yup.ref(\"password\"), null], \"Password is not matched!!\")\n      .required(),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(formSchema),\n  });\n\n  // ......\n\n  const [error, setError] = useState({});\n  // const [issubmit, setIsSubmit] = useState(false);\n\n  const hasChange = (e) => {\n    const { name, value } = e.target;\n\n    setRegData((prev) => {\n      return { ...prev, [name]: value };\n    });\n    setError(validate(loginData));\n  };\n\n  const validate = (loginData) => {\n    const error = {};\n\n    const regex = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/;\n    if (registrationData) {\n      if (!regex?.test(loginData[\"email\"])) {\n        error.email = \"email is required\";\n      }\n\n      if (loginData[\"password\"]?.length <= 4) {\n        error.password = \"password is required\";\n      } else {\n        for (const key in registrationData) {\n          if (\n            registrationData[key].email !== loginData.email ||\n            registrationData[key].password !== loginData.password\n          ) {\n            error.login = \"email & password is not correct\";\n            break;\n          } else {\n            // error.login = \"\"\n            setError((prev) => {\n              return {\n                ...prev,\n                login: \"\",\n              };\n            });\n            break;\n          }\n        }\n      }\n      return error;\n    } else {\n      error.login = \"first register your self\";\n      return error;\n    }\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    hasChange(e);\n    // console.log(e.target[0].value,\"name\");\n    // console.log(e.target[1].value );\n    // let userData={\n    //   email:e.target[0].value,\n    //   password:e.target[1].value\n    // }\n    // //  setError(validate(loginData));\n    // const isValidate = await formSchema.isValid(userData);\n    // // setIsSubmit(true);\n    // console.log(isValidate,\"massege\");\n  };\n\n  useEffect(() => {\n    if (Object.keys(error).length === 0) {\n      let flag = false;\n      for (const key in registrationData) {\n        if (\n          registrationData[key].email === loginData.email ||\n          registrationData[key].password === loginData.password\n        ) {\n          flag = true;\n          break;\n        }\n      }\n\n      if (flag === true) {\n        loginData[\"token\"] = result;\n        localStorage.setItem(\"logindata\", JSON.stringify(loginData));\n        navigate(\"/transaction\");\n      }\n    }\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n  return (\n    <>\n      <div className=\"form\">\n        <h2>Login Form</h2>\n        <form onSubmit={submitHandler} method=\"POST\">\n          <label className=\"label\">Email:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            className=\"inputFields\"\n            value={loginData.email}\n            onChange={(e) => hasChange(e)}\n          ></input>\n          <span>{error.email}</span>\n          <br></br>\n          <label className=\"label\">Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"pswFields\"\n            value={loginData.password}\n            onChange={(e) => hasChange(e)}\n          ></input>\n          <span>{error.password}</span>\n          <span>{error.login}</span>\n          <br></br>\n          <button type=\"submit\" id=\"submit\" className=\"ViewBtn\">\n            Submit\n          </button>\n          <br></br>\n        </form>\n        <Link to={\"/public/registration\"} className=\"loginBtn\">\n          Registration\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}