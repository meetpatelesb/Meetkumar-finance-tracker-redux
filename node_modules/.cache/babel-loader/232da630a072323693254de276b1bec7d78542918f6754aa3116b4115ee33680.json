{"ast":null,"code":"var _jsxFileName = \"/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport \"./Form.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\n// const getTransactionDetails = () => {\n//   const storeDetails = localStorage.getItem(\"transactionForm\");\n//   if (!storeDetails)\n//     return {\n//       transactionDate: \"\",\n//       monthYear: \"\",\n//       transactionType: \"\",\n//       fromAccount: \"\",\n//       toAccount: \"\",\n//       transactionAmount: \"\",\n//       receipt: \"\",\n//       notes: \"\",\n//     };\n//   return JSON.stringify(storeDetails);\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransactonForm = () => {\n  _s();\n  // const [details, setDetails] = useState({\n  //   transactionDate: \"\",\n  //   monthYear: \"\",\n  //   transactionType: \"\",\n  //   fromAccount: \"\",\n  //   toAccount: \"\",\n  //   transactionAmount: \"\",\n  //   receipt: \"\",\n  //   notes: \"\",\n  // });\n\n  // const [error, setError] = useState({\n  //   transactionDate: \"\",\n  //   monthYear: \"\",\n  //   transactionType: \"\",\n  //   fromAccount: \"\",\n  //   toAccount: \"\",\n  //   transactionAmount: \"\",\n  //   receipt: \"\",\n  //   notes: \"\",\n  // });\n\n  const formDetails = {\n    monthYear: {\n      value: \"\",\n      error: \"\"\n    },\n    transactionDate: {\n      value: \"\",\n      error: \"\"\n    },\n    transactionType: {\n      value: \"\",\n      error: \"\"\n    },\n    fromAccount: {\n      value: \"\",\n      error: \"\"\n    },\n    toAccount: {\n      value: \"\",\n      error: \"\"\n    },\n    transactionAmount: {\n      value: \"\",\n      error: \"\"\n    },\n    receipt: {\n      value: \"\",\n      error: \"\"\n    },\n    notes: {\n      value: \"\",\n      error: \"\"\n    }\n  };\n  const [data, setData] = useState(formDetails);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"transactionForm\", JSON.stringify(data));\n  // }, [data]);\n\n  // useEffect(()=>{\n\n  // })\n\n  //   const hasChange = (e) => {\n  //     const { name, value } = e.target;\n  //     console.log(name, value);\n  //     setDetails(\n  //       { ...details, [name]: value }\n  // //       (prev)=>{\n  // // return( {...prev,[name]:value})\n  // //     }\n  //     );\n  //   };\n\n  // const hasChange =(e)=>{\n  //   const {name,value} = e.target;\n  //   setDetails((prev)=>{\n  //   return {...prev, [name]:value}\n  // })\n  // }\n  // onchange functions\n  const DateHandler = e => {\n    const date = e;\n    // console.log(date);\n    setData(prev => ({\n      ...prev,\n      transactionDate: {\n        ...prev.transactionDate,\n        value: date\n      }\n    }));\n    if (date) {\n      setData(prev => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          error: \"\"\n        }\n      }));\n    } else {\n      setData(prev => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          error: \"date is Requierd!!\"\n        }\n      }));\n    }\n  };\n  const MonthHandler = e => {\n    const month = e;\n    setData(prev => ({\n      ...prev,\n      monthYear: {\n        ...prev.monthYear,\n        value: month\n      }\n    }));\n    if (month) {\n      setData(prev => ({\n        ...prev,\n        monthYear: {\n          ...prev.monthYear,\n          error: \"\"\n        }\n      }));\n    } else {\n      setData(prev => ({\n        ...prev,\n        monthYear: {\n          ...prev.monthYear,\n          error: \"Month is Requierd!!\"\n        }\n      }));\n    }\n  };\n  const TypeHandler = e => {\n    const type = e;\n    setData(prev => ({\n      ...prev,\n      transactionType: {\n        ...prev.transactionType,\n        value: type\n      }\n    }));\n    if (type) {\n      if (type === \"Select\") {\n        setData(prev => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            error: \"type is Required!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        transactionType: {\n          ...prev.transactionType,\n          error: \"type is Required!!\"\n        }\n      }));\n    }\n  };\n  const FromActHandler = e => {\n    const FromAcc = e;\n    setData(prev => ({\n      ...prev,\n      fromAccount: {\n        ...prev.fromAccount,\n        value: FromAcc\n      }\n    }));\n    if (FromAcc) {\n      if (FromAcc === \"Select\") {\n        setData(prev => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            error: \"Account is Required!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        fromAccount: {\n          ...prev.fromAccount,\n          error: \"Account is Required\"\n        }\n      }));\n    }\n  };\n  const toActHandler = e => {\n    const ToAcc = e;\n    setData(prev => ({\n      ...prev,\n      toAccount: {\n        ...prev.toAccount,\n        value: ToAcc\n      }\n    }));\n    if (ToAcc) {\n      if (ToAcc === \"Select\") {\n        setData(prev => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            error: \"Account is Required!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        toAccount: {\n          ...prev.toAccount,\n          error: \"Account is Required!!\"\n        }\n      }));\n    }\n  };\n  const AmountHandler = e => {\n    const value = e;\n    setData(prev => ({\n      ...prev,\n      transactionAmount: {\n        ...prev.transactionAmount,\n        value: value\n      }\n    }));\n    if (value) {\n      if (value.length < 2) {\n        setData(prev => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            error: \"Amount is too short!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        transactionAmount: {\n          ...prev.transactionAmount,\n          error: \"amount is Required!!\"\n        }\n      }));\n    }\n    console.log(value);\n  };\n  const ReceiptHandler = e => {\n    // if (e.target.type === \"file\") {\n    //   if (e.target.files[0].size > 10000) {\n    //     alert(\"File size is too large\");\n    //   } else {\n    //     let freader = new FileReader();\n    //     console.log(\"freader\");\n    //     console.log(freader);\n    //     freader.readAsDataURL(e.target.files[0]);\n    //     console.log(\"image\");\n    //     console.log(freader);\n\n    //     freader.addEventListener(\"load\",  ()=> {\n    //       const receiptPhoto = freader.result;\n    //       console.log(\"photo url\");\n    //       // console.log(freader.result)\n    //       console.log(receiptPhoto);\n    //       setData((prev) => ({\n    //         ...prev,\n    //         receipt: {\n    //           ...prev.receipt,\n    //           value: receiptPhoto,\n    //         },\n    //       }));\n    //     });\n\n    //   }\n    // }\n\n    if (e) {\n      if (e.target.type === \"file\") {\n        if (e.target.files[0].size > 10000) {\n          setData(prev => ({\n            ...prev,\n            receipt: {\n              ...prev.receipt,\n              error: \"Image is too large\"\n            }\n          }));\n        } else {\n          let freader = new FileReader();\n          freader.readAsDataURL(e.target.files[0]);\n          freader.addEventListener(\"load\", () => {\n            const receiptPhoto = freader.result;\n            setData(prev => ({\n              ...prev,\n              receipt: {\n                ...prev.receipt,\n                value: receiptPhoto\n              }\n            }));\n            setData(prev => ({\n              ...prev,\n              receipt: {\n                ...prev.receipt,\n                error: \"\"\n              }\n            }));\n          });\n        }\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        receipt: {\n          ...prev.receipt,\n          error: \"Receipt is Required!!\"\n        }\n      }));\n    }\n  };\n  const NotesHandler = e => {\n    const notes = e;\n    setData(prev => ({\n      ...prev,\n      notes: {\n        ...prev.notes,\n        value: notes\n      }\n    }));\n    if (notes.trim()) {\n      if (notes.trim().length > 250 || notes.trim().length < 3) {\n        setData(prev => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"Notes is Required!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        notes: {\n          ...prev.notes,\n          error: \"Notes is Required!!\"\n        }\n      }));\n    }\n  };\n  console.log(\"data.....\");\n  console.log(data);\n  const submitHandler = e => {\n    e.preventDefault();\n    AmountHandler(data.transactionAmount.value);\n    DateHandler(data.transactionDate.value);\n    TypeHandler(data.transactionType.value);\n    FromActHandler(data.fromAccount.value);\n    toActHandler(data.toAccount.value);\n    NotesHandler(data.notes.value);\n    MonthHandler(data.monthYear.value);\n    ReceiptHandler(e);\n\n    // console.log(Object.values(data))\n    // const errorArr = [];\n    // Object.values(data).map((field)=>{\n    //  if(field.error === \"\"){\n    //     errorArr.push(field);\n    //   }else{\n\n    //   }\n    // })\n\n    // console.log(\"error arr\")\n    // console.log(errorArr)\n    //     data.map((filed)=>{\n    // // Object.values(filed);\n    // return console.log(Object.values(filed))\n    //     })\n\n    console.log(JSON.stringify([data]));\n    if (localStorage.getItem(\"transactionForm\")) {\n      const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n      console.log([retrivedata]);\n      console.log(\"retrive\");\n      [retrivedata].push(data);\n      console.log([retrivedata]);\n      localStorage.setItem(\"transactionForm\", JSON.stringify([retrivedata]));\n    } else {\n      // console.log(\"data stored\");\n      // console.log(data);\n      localStorage.setItem(\"transactionForm\", JSON.stringify(data));\n    }\n  };\n  const MonthArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const TransactionTypeArr = [\"Home Expense\", \"Personal Expense\", \"Income\"];\n  const AccountArr = [\"Personal Account\", \"Real Living\", \"My Dream Home\", \"Full Circle\", \"Core Realtors\", \"Big Block\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Transaction Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"transactionDate\",\n            value: data.transactionDate.value,\n            onChange: e => {\n              DateHandler(e.target.value);\n            },\n            onClick: () => {\n              const newdate = new Date();\n              var year = newdate.getFullYear();\n              var month = newdate.getMonth() + 1;\n              var day = newdate.getDate();\n              if (month < 10) {\n                month = \"0\" + month;\n              }\n              if (day < 10) {\n                day = \"0\" + day;\n              }\n              var limit = `${year}-${month}-${day}`;\n              document.getElementById(\"date\").setAttribute(\"max\", limit);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.transactionDate.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Month Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"monthYear\",\n            value: data.monthYear.value,\n            id: \"\",\n            onChange: e => {\n              MonthHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              disabled: true,\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 15\n            }, this), MonthArr.map(month => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `${month} 2023`,\n                children: `${month} 2023`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.monthYear.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Transaction Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"transactionType\",\n            value: data.transactionType.value,\n            onChange: e => {\n              TypeHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this), TransactionTypeArr.map(type => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `${type}`,\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.transactionType.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"From Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"fromAccount\",\n            value: data.fromAccount.value,\n            onChange: e => {\n              FromActHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this), AccountArr.map(account => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: account,\n                children: account\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.fromAccount.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"To Account: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"toAccount\",\n            value: data.toAccount.value,\n            onChange: e => {\n              toActHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 15\n            }, this), AccountArr.map(account => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: account,\n                children: account\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.toAccount.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"transactionAmount\",\n            value: data.transactionAmount.value,\n            onChange: e => {\n              AmountHandler(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.transactionAmount.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Receipt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"receipt\",\n            alt: \"Receipt is not found\",\n            onChange: e => {\n              ReceiptHandler(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.receipt.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: \"30\",\n            rows: \"6\",\n            name: \"notes\",\n            value: data.notes.value,\n            onChange: e => {\n              NotesHandler(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.notes.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submitBtn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TransactonForm, \"Q9H/oXUdEODnK29WKpVQVAtLOWU=\");\n_c = TransactonForm;\nexport default TransactonForm;\nvar _c;\n$RefreshReg$(_c, \"TransactonForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactonForm","_s","formDetails","monthYear","value","error","transactionDate","transactionType","fromAccount","toAccount","transactionAmount","receipt","notes","data","setData","DateHandler","e","date","prev","MonthHandler","month","TypeHandler","type","FromActHandler","FromAcc","toActHandler","ToAcc","AmountHandler","length","console","log","ReceiptHandler","target","files","size","freader","FileReader","readAsDataURL","addEventListener","receiptPhoto","result","NotesHandler","trim","submitHandler","preventDefault","JSON","stringify","localStorage","getItem","retrivedata","parse","push","setItem","MonthArr","TransactionTypeArr","AccountArr","children","className","onSubmit","method","fileName","_jsxFileName","lineNumber","columnNumber","id","name","onChange","onClick","newdate","Date","year","getFullYear","getMonth","day","getDate","limit","document","getElementById","setAttribute","disabled","selected","map","account","alt","cols","rows","_c","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx"],"sourcesContent":["import \"./Form.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\n// const getTransactionDetails = () => {\n//   const storeDetails = localStorage.getItem(\"transactionForm\");\n//   if (!storeDetails)\n//     return {\n//       transactionDate: \"\",\n//       monthYear: \"\",\n//       transactionType: \"\",\n//       fromAccount: \"\",\n//       toAccount: \"\",\n//       transactionAmount: \"\",\n//       receipt: \"\",\n//       notes: \"\",\n//     };\n//   return JSON.stringify(storeDetails);\n// };\nconst TransactonForm = () => {\n  // const [details, setDetails] = useState({\n  //   transactionDate: \"\",\n  //   monthYear: \"\",\n  //   transactionType: \"\",\n  //   fromAccount: \"\",\n  //   toAccount: \"\",\n  //   transactionAmount: \"\",\n  //   receipt: \"\",\n  //   notes: \"\",\n  // });\n\n  // const [error, setError] = useState({\n  //   transactionDate: \"\",\n  //   monthYear: \"\",\n  //   transactionType: \"\",\n  //   fromAccount: \"\",\n  //   toAccount: \"\",\n  //   transactionAmount: \"\",\n  //   receipt: \"\",\n  //   notes: \"\",\n  // });\n\n  const formDetails = {\n    monthYear: {\n      value: \"\",\n      error: \"\",\n    },\n    transactionDate: {\n      value: \"\",\n      error: \"\",\n    },\n    transactionType: {\n      value: \"\",\n      error: \"\",\n    },\n    fromAccount: {\n      value: \"\",\n      error: \"\",\n    },\n    toAccount: {\n      value: \"\",\n      error: \"\",\n    },\n    transactionAmount: {\n      value: \"\",\n      error: \"\",\n    },\n    receipt: {\n      value: \"\",\n      error: \"\",\n    },\n    notes: {\n      value: \"\",\n      error: \"\",\n    },\n  };\n\n  const [data, setData] = useState(formDetails);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"transactionForm\", JSON.stringify(data));\n  // }, [data]);\n\n  // useEffect(()=>{\n    \n  // })\n\n  //   const hasChange = (e) => {\n  //     const { name, value } = e.target;\n  //     console.log(name, value);\n  //     setDetails(\n  //       { ...details, [name]: value }\n  // //       (prev)=>{\n  // // return( {...prev,[name]:value})\n  // //     }\n  //     );\n  //   };\n\n  // const hasChange =(e)=>{\n  //   const {name,value} = e.target;\n  //   setDetails((prev)=>{\n  //   return {...prev, [name]:value}\n  // })\n  // }\n  // onchange functions\n  const DateHandler = (e) => {\n    const date = e;\n    // console.log(date);\n    setData((prev) => ({\n      ...prev,\n      transactionDate: {\n        ...prev.transactionDate,\n        value: date,\n      },\n    }));\n    if (date) {\n      setData((prev) => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          error: \"\",\n        },\n      }));\n    } else {\n      setData((prev) => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          error: \"date is Requierd!!\",\n        },\n      }));\n    }\n  };\n\n  const MonthHandler = (e) => {\n    const month = e;\n    setData((prev) => ({\n      ...prev,\n      monthYear: {\n        ...prev.monthYear,\n        value: month,\n      },\n    }));\n    if (month) {\n      setData((prev) => ({\n        ...prev,\n        monthYear: {\n          ...prev.monthYear,\n          error: \"\",\n        },\n      }));\n    } else {\n      setData((prev) => ({\n        ...prev,\n        monthYear: {\n          ...prev.monthYear,\n          error: \"Month is Requierd!!\",\n        },\n      }));\n    }\n \n  };\n\n  const TypeHandler = (e) => {\n    const type = e;\n    setData((prev) => ({\n      ...prev,\n      transactionType: {\n        ...prev.transactionType,\n        value: type,\n      },\n    }));\n    if (type) {\n      if (type === \"Select\") {\n        setData((prev) => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            error: \"type is Required!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            error: \"\",\n          },\n        }));\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        transactionType: {\n          ...prev.transactionType,\n          error: \"type is Required!!\",\n        },\n      }));\n    }\n  };\n\n  const FromActHandler = (e) => {\n    const FromAcc = e;\n    setData((prev) => ({\n      ...prev,\n      fromAccount: {\n        ...prev.fromAccount,\n        value: FromAcc,\n      },\n    }));\n    if (FromAcc) {\n      if (FromAcc === \"Select\") {\n        setData((prev) => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            error: \"Account is Required!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            error: \"\",\n          },\n        }));\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        fromAccount: {\n          ...prev.fromAccount,\n          error: \"Account is Required\",\n        },\n      }));\n    }\n  };\n\n  const toActHandler = (e) => {\n    const ToAcc = e;\n\n    setData((prev) => ({\n      ...prev,\n      toAccount: {\n        ...prev.toAccount,\n        value: ToAcc,\n      },\n    }));\n    if (ToAcc) {\n      if (ToAcc === \"Select\") {\n        setData((prev) => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            error: \"Account is Required!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            error: \"\",\n          },\n        }));\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        toAccount: {\n          ...prev.toAccount,\n          error: \"Account is Required!!\",\n        },\n      }));\n    }\n  };\n\n  const AmountHandler = (e) => {\n    const value = e;\n    setData((prev) => ({\n      ...prev,\n      transactionAmount: {\n        ...prev.transactionAmount,\n        value: value,\n      },\n    }));\n    if (value) {\n      if (value.length < 2) {\n        setData((prev) => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            error: \"Amount is too short!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            error: \"\",\n          },\n        }));\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        transactionAmount: {\n          ...prev.transactionAmount,\n          error: \"amount is Required!!\",\n        },\n      }));\n    }\n\n    console.log(value);\n  };\n\n  const ReceiptHandler = (e) => {\n    // if (e.target.type === \"file\") {\n    //   if (e.target.files[0].size > 10000) {\n    //     alert(\"File size is too large\");\n    //   } else {\n    //     let freader = new FileReader();\n    //     console.log(\"freader\");\n    //     console.log(freader);\n    //     freader.readAsDataURL(e.target.files[0]);\n    //     console.log(\"image\");\n    //     console.log(freader);\n\n    //     freader.addEventListener(\"load\",  ()=> {\n    //       const receiptPhoto = freader.result;\n    //       console.log(\"photo url\");\n    //       // console.log(freader.result)\n    //       console.log(receiptPhoto);\n    //       setData((prev) => ({\n    //         ...prev,\n    //         receipt: {\n    //           ...prev.receipt,\n    //           value: receiptPhoto,\n    //         },\n    //       }));\n    //     });\n\n    //   }\n    // }\n\n    if (e) {\n      if (e.target.type === \"file\") {\n        if (e.target.files[0].size > 10000) {\n          setData((prev) => ({\n            ...prev,\n            receipt: {\n              ...prev.receipt,\n              error: \"Image is too large\",\n            },\n          }));\n        } else {\n          let freader = new FileReader();\n          \n          freader.readAsDataURL(e.target.files[0]);\n         \n          freader.addEventListener(\"load\", () => {\n            const receiptPhoto = freader.result;\n            setData((prev) => ({\n              ...prev,\n              receipt: {\n                ...prev.receipt,\n                value: receiptPhoto,\n              },\n            }));\n            setData((prev) => ({\n              ...prev,\n              receipt: {\n                ...prev.receipt,\n                error: \"\",\n              },\n            }));\n          });\n        }\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        receipt: {\n          ...prev.receipt,\n          error: \"Receipt is Required!!\",\n        },\n      }));\n    }\n  };\n\n  const NotesHandler = (e) => {\n    const notes = e;\n    setData((prev) => ({\n      ...prev,\n      notes: {\n        ...prev.notes,\n        value: notes,\n      },\n    }));\n    if (notes.trim()) {\n      if (notes.trim().length > 250 || notes.trim().length < 3) {\n        setData((prev) => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"Notes is Required!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"\",\n          },\n        }));\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        notes: {\n          ...prev.notes,\n          error: \"Notes is Required!!\",\n        },\n      }));\n    }\n  };\n  console.log(\"data.....\");\n  console.log(data);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    AmountHandler(data.transactionAmount.value);\n    DateHandler(data.transactionDate.value);\n    TypeHandler(data.transactionType.value);\n    FromActHandler(data.fromAccount.value);\n    toActHandler(data.toAccount.value);\n    NotesHandler(data.notes.value);\n    MonthHandler(data.monthYear.value)\n    ReceiptHandler(e);\n    \n// console.log(Object.values(data))\n// const errorArr = [];\n// Object.values(data).map((field)=>{\n//  if(field.error === \"\"){\n//     errorArr.push(field);\n//   }else{\n\n//   }\n// })\n\n// console.log(\"error arr\")\n// console.log(errorArr)\n//     data.map((filed)=>{\n// // Object.values(filed);\n// return console.log(Object.values(filed))\n//     })\n    \nconsole.log(JSON.stringify([data]))\n\n         if (localStorage.getItem(\"transactionForm\")) {\n        const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n    console.log([retrivedata])\n    console.log(\"retrive\");\n        [retrivedata].push(data);\n        console.log([retrivedata])\n\n        localStorage.setItem(\"transactionForm\", JSON.stringify([retrivedata]));\n      } else {\n        // console.log(\"data stored\");\n        // console.log(data);\n        localStorage.setItem(\"transactionForm\", JSON.stringify(data));\n      }\n    \n  };\n\n  const MonthArr = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const TransactionTypeArr = [\"Home Expense\", \"Personal Expense\", \"Income\"];\n  const AccountArr = [\n    \"Personal Account\",\n    \"Real Living\",\n    \"My Dream Home\",\n    \"Full Circle\",\n    \"Core Realtors\",\n    \"Big Block\",\n  ];\n\n  return (\n    <>\n      <div className=\"form\">\n        <form onSubmit={submitHandler} method=\"POST\">\n          <label className=\"label\">Transaction Date:</label>\n          <div className=\"input\">\n            <input\n              type=\"date\"\n              id=\"date\"\n              name=\"transactionDate\"\n              value={data.transactionDate.value}\n              onChange={(e) => {\n                DateHandler(e.target.value);\n              }}\n              onClick={() => {\n                const newdate = new Date();\n                var year = newdate.getFullYear();\n                var month = newdate.getMonth() + 1;\n                var day = newdate.getDate();\n                if (month < 10) {\n                  month = \"0\" + month;\n                }\n                if (day < 10) {\n                  day = \"0\" + day;\n                }\n\n                var limit = `${year}-${month}-${day}`;\n           \n                document.getElementById(\"date\").setAttribute(\"max\", limit);\n              }}\n            ></input>\n            <span>{data.transactionDate.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Month Year:</label>\n\n          <div className=\"input\">\n            <select\n              name=\"monthYear\"\n              value={data.monthYear.value}\n              id=\"\"\n              onChange={(e) => {\n                MonthHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" disabled selected>\n                Select\n              </option>\n\n              {MonthArr.map((month) => {\n                return (\n                  <option value={`${month} 2023`}>{`${month} 2023`}</option>\n                );\n              })}\n\n              {/* <option value=\"Jan 2023\">Jan 2023</option>\n                <option value=\"Feb 2023\">Feb 2023</option>\n                */}\n            </select>\n            <span>{data.monthYear.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Transaction Type:</label>\n          <div className=\"input\">\n            <select\n              name=\"transactionType\"\n              value={data.transactionType.value}\n              onChange={(e) => {\n                TypeHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" selected>\n                Select\n              </option>\n              {TransactionTypeArr.map((type) => {\n                return <option value={`${type}`}>{type}</option>;\n              })}\n            </select>\n            <span>{data.transactionType.error}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">From Account:</label>\n          <div className=\"input\">\n            <select\n              name=\"fromAccount\"\n              value={data.fromAccount.value}\n              onChange={(e) => {\n                FromActHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" selected>\n                Select\n              </option>\n              {AccountArr.map((account) => {\n                return <option value={account}>{account}</option>;\n              })}\n            </select>\n            <span>{data.fromAccount.error}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">To Account: </label>\n          <div className=\"input\">\n            <select\n              name=\"toAccount\"\n              value={data.toAccount.value}\n              onChange={(e) => {\n                toActHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" selected>\n                Select\n              </option>\n\n              {AccountArr.map((account) => {\n                return <option value={account}>{account}</option>;\n              })}\n            </select>\n            <span>{data.toAccount.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Amount:</label>\n          <div className=\"input\">\n            <input\n              type=\"text\"\n              name=\"transactionAmount\"\n              value={data.transactionAmount.value}\n              onChange={(e) => {\n                AmountHandler(e.target.value);\n              }}\n            ></input>\n            <span>{data.transactionAmount.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Receipt:</label>\n          <div className=\"input\">\n            <input\n              type=\"file\"\n              name=\"receipt\"\n              alt=\"Receipt is not found\"\n              onChange={(e) => {\n                ReceiptHandler(e);\n              }}\n            ></input>\n            <span>{data.receipt.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Notes:</label>\n          <div className=\"input\">\n            <textarea\n              cols=\"30\"\n              rows=\"6\"\n              name=\"notes\"\n              value={data.notes.value}\n              onChange={(e) => {\n                NotesHandler(e.target.value);\n              }}\n            ></textarea>\n            <span>{data.notes.error}</span>\n          </div>\n\n          <button type=\"submit\" className=\"submitBtn\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default TransactonForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}