{"ast":null,"code":"var _jsxFileName = \"/home/meet-vaghasiya/reactPractice/khatabook/src/App.js\";\n// import  Auth from './auth/Auth';\n// import Unauth from './auth/Unauth';\n// import \"./assets/styles/transaction.css\";\n// import { BrowserRouter, Route, Routes,Navigate } from \"react-router-dom\";\n\n// const  App = ()=> {\n\n//   return (\n//     <BrowserRouter>\n//       <Routes>\n//         <Route path=\"/public/*\" element={<Unauth />} />\n//         <Route path=\"/*\" element={<Auth />} />\n//         <Route path=\"/*\" element={<Navigate to=\"/public/login\" replace />} />\n//       </Routes>\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;\n\n//  <Route path=\"/registration\" element={<Registration />} />\n//           <Route path=\"/login\" element={<Login />} />\n//           <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\n// <Route path=\"/create\" element={<TransactionForm />} />\n//           <Route path=\"/create/:id\" element={<TransactionForm />} />\n//           <Route path=\"/transaction\" element={<Transaction />} />\n//           <Route path=\"/transaction/:id\" element={<View />} />\n//           <Route path=\"/*\" element={<Navigate to=\"/transaction\" replace />} />\n\nimport \"./assets/styles/transaction.css\";\nimport \"./assets/styles/common.css\";\nimport { createBrowserRouter, RouterProvider, Route, Navigate, createRoutesFromElements } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport TransactionForm from \"./components/Form\";\nimport Registration from \"./components/Registration\";\nimport View from \"./components/View\";\nimport Transaction from \"./components/Transaction\";\n\n// const token = '3r3fe4rfe4rffrexed4fed4xxge4dg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = JSON.parse(localStorage.getItem(\"logindata\"));\nconst FinalRoute = props => {\n  const {\n    isPublic,\n    cmp\n  } = props;\n  if (isPublic) {\n    if (!token) {\n      return cmp;\n    } else {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, this);\n    }\n  } else {\n    if (token) {\n      return cmp;\n    } else {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }, this);\n    }\n  }\n};\n_c = FinalRoute;\nconst router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n  path: \"/\",\n  children: [/*#__PURE__*/_jsxDEV(Route, {\n    path: \"login\",\n    element: /*#__PURE__*/_jsxDEV(FinalRoute, {\n      isPublic: true,\n      cmp: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"transactions\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(FinalRoute, {\n        cmp: /*#__PURE__*/_jsxDEV(Transaction, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/create/:id\",\n      element: /*#__PURE__*/_jsxDEV(FinalRoute, {\n        cmp: /*#__PURE__*/_jsxDEV(TransactionForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"\",\n    element: /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 31\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 74,\n  columnNumber: 5\n}, this)));\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 10\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FinalRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Route","Navigate","createRoutesFromElements","Login","TransactionForm","Registration","View","Transaction","jsxDEV","_jsxDEV","token","JSON","parse","localStorage","getItem","FinalRoute","props","isPublic","cmp","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","router","path","children","element","App","_c2","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/khatabook/src/App.js"],"sourcesContent":["// import  Auth from './auth/Auth';\n// import Unauth from './auth/Unauth';\n// import \"./assets/styles/transaction.css\";\n// import { BrowserRouter, Route, Routes,Navigate } from \"react-router-dom\";\n\n\n// const  App = ()=> {\n \n//   return (\n//     <BrowserRouter>\n//       <Routes>\n//         <Route path=\"/public/*\" element={<Unauth />} />\n//         <Route path=\"/*\" element={<Auth />} />\n//         <Route path=\"/*\" element={<Navigate to=\"/public/login\" replace />} />\n//       </Routes>\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;\n\n\n\n//  <Route path=\"/registration\" element={<Registration />} />\n//           <Route path=\"/login\" element={<Login />} />\n//           <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\n  // <Route path=\"/create\" element={<TransactionForm />} />\n//           <Route path=\"/create/:id\" element={<TransactionForm />} />\n//           <Route path=\"/transaction\" element={<Transaction />} />\n//           <Route path=\"/transaction/:id\" element={<View />} />\n//           <Route path=\"/*\" element={<Navigate to=\"/transaction\" replace />} />\n\n\nimport \"./assets/styles/transaction.css\";\nimport \"./assets/styles/common.css\";\n\nimport {\n  createBrowserRouter,\n  RouterProvider,\n  Route,\n  Navigate,\n  createRoutesFromElements,\n} from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport TransactionForm from \"./components/Form\"; \nimport Registration from \"./components/Registration\";\nimport View from \"./components/View\";\nimport Transaction from \"./components/Transaction\";\n\n\n// const token = '3r3fe4rfe4rffrexed4fed4xxge4dg';\n const token = JSON.parse(localStorage.getItem(\"logindata\"));\n\n\nconst FinalRoute = (props) => {\n  const { isPublic, cmp } = props;\n  if (isPublic) {\n    if (!token) {\n      return cmp;\n    } else {\n      return <Navigate to=\"/transaction\" />;\n    }\n  } else {\n    if (token) {\n      return cmp;\n    } else {\n      return <Navigate to=\"/login\" />;\n    }\n  }\n};\n\nconst router = createBrowserRouter(\n  createRoutesFromElements(\n    <Route path=\"/\">\n      <Route\n        path=\"login\"\n        element={<FinalRoute isPublic cmp={<Login/>} />}\n      />\n      <Route path=\"transactions\">\n        <Route path=\"/\" element={<FinalRoute cmp={<Transaction />} />} />\n        \n        <Route\n          path=\"/create/:id\"\n          element={<FinalRoute cmp={<TransactionForm />} />}\n        />\n      </Route>\n      <Route path=\"\" element={<Navigate to={\"/transactions\"} />} />\n    </Route>\n  )\n);\n\nconst App = () => {\n  return <RouterProvider router={router} />;\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}