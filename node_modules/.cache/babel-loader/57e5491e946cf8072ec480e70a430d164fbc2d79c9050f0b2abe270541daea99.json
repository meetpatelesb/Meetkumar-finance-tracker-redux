{"ast":null,"code":"var _jsxFileName = \"/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport \"./Form.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\n// const getTransactionDetails = () => {\n//   const storeDetails = localStorage.getItem(\"transactionForm\");\n//   if (!storeDetails)\n//     return {\n//       transactionDate: \"\",\n//       monthYear: \"\",\n//       transactionType: \"\",\n//       fromAccount: \"\",\n//       toAccount: \"\",\n//       transactionAmount: \"\",\n//       receipt: \"\",\n//       notes: \"\",\n//     };\n//   return JSON.stringify(storeDetails);\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransactonForm = () => {\n  _s();\n  const [details, setDetails] = useState({\n    transactionDate: \"\",\n    monthYear: \"\",\n    transactionType: \"\",\n    fromAccount: \"\",\n    toAccount: \"\",\n    transactionAmount: \"\",\n    receipt: \"\",\n    notes: \"\"\n  });\n  const [error, setError] = useState({\n    transactionDate: \"\",\n    monthYear: \"\",\n    transactionType: \"\",\n    fromAccount: \"\",\n    toAccount: \"\",\n    transactionAmount: \"\",\n    receipt: \"\",\n    notes: \"\"\n  });\n  const formDetails = {\n    monthYear: {\n      value: \"\",\n      error: \"\"\n    },\n    transactionDate: {\n      value: \"\",\n      error: \"\"\n    },\n    transactionType: {\n      value: \"\",\n      error: \"\"\n    },\n    fromAccount: {\n      value: \"\",\n      error: \"\"\n    },\n    toAccount: {\n      value: \"\",\n      error: \"\"\n    },\n    transactionAmount: {\n      value: \"\",\n      error: \"\"\n    },\n    receipt: {\n      value: \"\",\n      error: \"\"\n    },\n    notes: {\n      value: \"\",\n      error: \"\"\n    }\n  };\n  const [data, setData] = useState(formDetails);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"transactionForm\", JSON.stringify(details));\n  // }, [details]);\n\n  //   const hasChange = (e) => {\n  //     const { name, value } = e.target;\n  //     console.log(name, value);\n  //     setDetails(\n  //       { ...details, [name]: value }\n  // //       (prev)=>{\n  // // return( {...prev,[name]:value})\n  // //     }\n  //     );\n  //   };\n\n  // const hasChange =(e)=>{\n  //   const {name,value} = e.target;\n  //   setDetails((prev)=>{\n  //   return {...prev, [name]:value}\n  // })\n  // }\n  // onchange functions\n  const dateSet = () => {\n    const newdate = new Date();\n    var year = newdate.getFullYear();\n    var month = newdate.getMonth() + 1;\n    var day = newdate.getDate();\n    if (month < 10) {\n      month = '0' + month;\n    }\n    if (day < 10) {\n      day = '0' + day;\n    }\n    var limit = `${year}-${month}-${day}`;\n    console.log(limit);\n    document.getElementById('date').setAttribute('max', limit);\n  };\n  const DateHandler = e => {\n    const date = e;\n    console.log(date);\n    setData(prev => ({\n      ...prev,\n      transactionDate: {\n        ...prev.transactionDate,\n        value: date\n      }\n    }));\n    if (date) {\n      setData(prev => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          error: \"\"\n        }\n      }));\n    } else {\n      setData(prev => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          error: \"date is Requierd!!\"\n        }\n      }));\n    }\n  };\n  const MonthHandler = e => {\n    const month = e;\n    // const { name, value } = e.target;\n    // if (value === \"select\") {\n    //   console.log(\"no month\");\n    //   setError((prev) => {\n    //     return { ...prev, [name]: \"Month is Required!!\" };\n    //   });\n    // } else {\n    //   setError((prev) => {\n    //     return { ...prev, [name]: \" \" };\n    //   });\n    //   console.log(\"yes month\");\n    // }\n    // setDetails((prev) => {\n    //   return { ...prev, [name]: value };\n    // });\n  };\n\n  const TypeHandler = e => {\n    const type = e;\n    console.log(type, \":::::::::::::::::::::::::::::::::::::::::::::\");\n    setData(prev => ({\n      ...prev,\n      transactionType: {\n        ...prev.transactionType,\n        value: type\n      }\n    }));\n    if (type) {\n      if (type === \"Select\") {\n        setData(prev => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            error: \"type is Required!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        transactionType: {\n          ...prev.transactionType,\n          error: \"type is Required!!\"\n        }\n      }));\n    }\n    ;\n  };\n  const FromActHandler = e => {\n    const FromAcc = e;\n    setData(prev => ({\n      ...prev,\n      fromAccount: {\n        ...prev.fromAccount,\n        value: FromAcc\n      }\n    }));\n    if (FromAcc) {\n      if (FromAcc === \"Select\") {\n        setData(prev => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            error: \"Account is Required!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        fromAccount: {\n          ...prev.fromAccount,\n          error: \"Account is Required\"\n        }\n      }));\n    }\n  };\n  const toActHandler = e => {\n    const ToAcc = e;\n    console.log(ToAcc, \"::::::::::::::::::\");\n    setData(prev => ({\n      ...prev,\n      toAccount: {\n        ...prev.toAccount,\n        value: ToAcc\n      }\n    }));\n    if (ToAcc) {\n      if (ToAcc === \"Select\") {\n        setData(prev => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            error: \"Account is Required!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        toAccount: {\n          ...prev.toAccount,\n          error: \"Account is Required!!\"\n        }\n      }));\n    }\n  };\n  const AmountHandler = e => {\n    const value = e;\n    console.log(value, \"amount to\");\n    setData(prev => ({\n      ...prev,\n      transactionAmount: {\n        ...prev.transactionAmount,\n        value: value\n      }\n    }));\n    if (value) {\n      if (value.length < 2) {\n        setData(prev => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            error: \"Amount is too short!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        transactionAmount: {\n          ...prev.transactionAmount,\n          error: \"amount is Required!!\"\n        }\n      }));\n    }\n    console.log(value);\n  };\n  const ReceiptHnadler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDetails(prev => {\n      return {\n        ...prev,\n        [name]: value\n      };\n    });\n  };\n  const NotesHandler = e => {\n    const notes = e;\n    setData(prev => ({\n      ...prev,\n      notes: {\n        ...prev.notes,\n        value: notes\n      }\n    }));\n    if (notes.trim()) {\n      if (notes.trim().length < 250 && notes.trim().length > 3) {\n        setData(prev => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"Notes is Required!!\"\n          }\n        }));\n      } else {\n        setData(prev => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"\"\n          }\n        }));\n      }\n    } else {\n      setData(prev => ({\n        ...prev,\n        notes: {\n          ...prev.notes,\n          error: \"Notes is Required!!\"\n        }\n      }));\n    }\n  };\n  console.log(data);\n  const submitHandler = e => {\n    e.preventDefault();\n    AmountHandler(data.transactionAmount.value);\n    DateHandler(data.transactionDate.value);\n    TypeHandler(data.transactionType.value);\n    FromActHandler(data.fromAccount.value);\n    toActHandler(data.toAccount.value);\n    NotesHandler(data.notes.value);\n    if (localStorage.getItem(\"transactionForm\")) {\n      const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n      retrivedata.push(details);\n      localStorage.setItem(\"transactionForm\", JSON.stringify(retrivedata));\n    } else {\n      localStorage.setItem(\"transactionForm\", JSON.stringify([details]));\n    }\n  };\n  const MonthArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const TransactionTypeArr = [\"Home Expense\", \"Personal Expense\", \"Income\"];\n  const AccountArr = [\"Personal Account\", \"Real Living\", \"My Dream Home\", \"Full Circle\", \"Core Realtors\", \"Big Block\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Transaction Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"transactionDate\",\n            value: data.transactionDate.value,\n            onChange: e => {\n              DateHandler(e.target.value);\n            },\n            onClick: dateSet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.transactionDate.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Month Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"monthYear\",\n            value: data.monthYear.value,\n            id: \"\",\n            onChange: e => {\n              MonthHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              disabled: true,\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), MonthArr.map(month => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `${month} 2023`,\n                children: `${month} 2023`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.monthYear.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Transaction Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"transactionType\",\n            value: data.transactionType.value,\n            onChange: e => {\n              TypeHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this), TransactionTypeArr.map(type => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `${type}`,\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.transactionType.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"From Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"fromAccount\",\n            value: data.fromAccount.value,\n            onChange: e => {\n              FromActHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 15\n            }, this), AccountArr.map(account => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: account,\n                children: account\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.fromAccount.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"To Account: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"toAccount\",\n            value: data.toAccount.value,\n            onChange: e => {\n              toActHandler(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"select\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), AccountArr.map(account => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: account,\n                children: account\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.toAccount.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"transactionAmount\",\n            value: data.transactionAmount.value,\n            onChange: e => {\n              AmountHandler(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.transactionAmount.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Receipt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"receipt\",\n            alt: \"Receipt is not found\",\n            value: data.receipt.value,\n            onChange: e => {\n              ReceiptHnadler(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: \"30\",\n            rows: \"6\",\n            name: \"notes\",\n            value: data.notes.value,\n            onChange: e => {\n              NotesHandler(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.notes.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submitBtn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TransactonForm, \"9snQdtin560ofjIHNK5vi6JWmdw=\");\n_c = TransactonForm;\nexport default TransactonForm;\nvar _c;\n$RefreshReg$(_c, \"TransactonForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactonForm","_s","details","setDetails","transactionDate","monthYear","transactionType","fromAccount","toAccount","transactionAmount","receipt","notes","error","setError","formDetails","value","data","setData","dateSet","newdate","Date","year","getFullYear","month","getMonth","day","getDate","limit","console","log","document","getElementById","setAttribute","DateHandler","e","date","prev","MonthHandler","TypeHandler","type","FromActHandler","FromAcc","toActHandler","ToAcc","AmountHandler","length","ReceiptHnadler","name","target","NotesHandler","trim","submitHandler","preventDefault","localStorage","getItem","retrivedata","JSON","parse","push","setItem","stringify","MonthArr","TransactionTypeArr","AccountArr","children","className","onSubmit","method","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onClick","disabled","selected","map","account","alt","cols","rows","_c","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx"],"sourcesContent":["import \"./Form.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\n// const getTransactionDetails = () => {\n//   const storeDetails = localStorage.getItem(\"transactionForm\");\n//   if (!storeDetails)\n//     return {\n//       transactionDate: \"\",\n//       monthYear: \"\",\n//       transactionType: \"\",\n//       fromAccount: \"\",\n//       toAccount: \"\",\n//       transactionAmount: \"\",\n//       receipt: \"\",\n//       notes: \"\",\n//     };\n//   return JSON.stringify(storeDetails);\n// };\nconst TransactonForm = () => {\n  const [details, setDetails] = useState({\n    transactionDate: \"\",\n    monthYear: \"\",\n    transactionType: \"\",\n    fromAccount: \"\",\n    toAccount: \"\",\n    transactionAmount: \"\",\n    receipt: \"\",\n    notes: \"\",\n  });\n\n  const [error, setError] = useState({\n    transactionDate: \"\",\n    monthYear: \"\",\n    transactionType: \"\",\n    fromAccount: \"\",\n    toAccount: \"\",\n    transactionAmount: \"\",\n    receipt: \"\",\n    notes: \"\",\n  });\n\n  const formDetails = {\n    monthYear: {\n      value: \"\",\n      error: \"\",\n    },\n    transactionDate: {\n      value: \"\",\n      error: \"\",\n    },\n    transactionType: {\n      value: \"\",\n      error: \"\",\n    },\n    fromAccount: {\n      value: \"\",\n      error: \"\",\n    },\n    toAccount: {\n      value: \"\",\n      error: \"\",\n    },\n    transactionAmount: {\n      value: \"\",\n      error: \"\",\n    },\n    receipt: {\n      value: \"\",\n      error: \"\",\n    },\n    notes: {\n      value: \"\",\n      error: \"\",\n    },\n  };\n\n  const [data, setData] = useState(formDetails);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"transactionForm\", JSON.stringify(details));\n  // }, [details]);\n\n  //   const hasChange = (e) => {\n  //     const { name, value } = e.target;\n  //     console.log(name, value);\n  //     setDetails(\n  //       { ...details, [name]: value }\n  // //       (prev)=>{\n  // // return( {...prev,[name]:value})\n  // //     }\n  //     );\n  //   };\n\n  // const hasChange =(e)=>{\n  //   const {name,value} = e.target;\n  //   setDetails((prev)=>{\n  //   return {...prev, [name]:value}\n  // })\n  // }\n  // onchange functions\nconst dateSet = ()=>{\n  const newdate = new Date();\n      var year = newdate.getFullYear();\n      var month = newdate.getMonth() + 1\n      var day = newdate.getDate()\n      if (month < 10) {\n          month = '0' + month\n      }\n      if (day < 10) {\n          day = '0' + day\n      }\n  \n      var limit = `${year}-${month}-${day}`;\n      console.log(limit);\n      document.getElementById('date').setAttribute('max', limit);\n}\n  const DateHandler = (e) => {\n\n    const date = e;\n    console.log(date);\n    setData((prev) => ({\n      ...prev,\n      transactionDate: {\n        ...prev.transactionDate,\n        value: date,\n      },\n    }));\n    if (date) {\n      setData((prev) => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          error: \"\",\n        },\n      }));\n    } else {\n      setData((prev) => ({\n        ...prev,\n        transactionDate: {\n          ...prev.transactionDate,\n          error: \"date is Requierd!!\",\n        },\n      }));\n    }\n  };\n\n  const MonthHandler = (e) => {\n    const month = e;\n    // const { name, value } = e.target;\n    // if (value === \"select\") {\n    //   console.log(\"no month\");\n    //   setError((prev) => {\n    //     return { ...prev, [name]: \"Month is Required!!\" };\n    //   });\n    // } else {\n    //   setError((prev) => {\n    //     return { ...prev, [name]: \" \" };\n    //   });\n    //   console.log(\"yes month\");\n    // }\n    // setDetails((prev) => {\n    //   return { ...prev, [name]: value };\n    // });\n  };\n\n  const TypeHandler = (e) => {\n    const type = e;\n    console.log(type,\":::::::::::::::::::::::::::::::::::::::::::::\")\n    setData((prev) => ({\n      ...prev,\n      transactionType: {\n        ...prev.transactionType,\n        value: type,\n      },\n    }));\n    if (type) {\n      if (type === \"Select\") {\n        setData((prev) => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            error: \"type is Required!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n          transactionType: {\n            ...prev.transactionType,\n            error: \"\",\n          },\n        }));\n      }\n    } \n    else {\n      setData((prev) => ({\n        ...prev,\n        transactionType: {\n          ...prev.transactionType,\n          error: \"type is Required!!\",\n        },\n      }));\n    };\n  };\n\n  const FromActHandler = (e) => {\n   const FromAcc = e;\n   setData((prev) => ({\n      ...prev,\n      fromAccount: {\n        ...prev.fromAccount,\n        value: FromAcc,\n      },\n    }));\n    if (FromAcc) {\n      if (FromAcc === \"Select\") {\n        setData((prev) => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            error: \"Account is Required!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n          fromAccount: {\n            ...prev.fromAccount,\n            error: \"\",\n          },\n        }));\n      }\n    }\n     else {\n      setData((prev) => ({\n        ...prev,\n        fromAccount: {\n          ...prev.fromAccount,\n          error: \"Account is Required\",\n        },\n      }));\n    }\n\n  };\n\n  const toActHandler = (e) => {\n   const ToAcc = e;\n   console.log(ToAcc,\"::::::::::::::::::\")\n   setData((prev) => ({\n      ...prev,\n      toAccount: {\n        ...prev.toAccount,\n        value: ToAcc,\n      },\n    }));\n    if (ToAcc) {\n      if (ToAcc === \"Select\") {\n        setData((prev) => ({\n          ...prev,\n          toAccount: {\n            ...prev.toAccount,\n            error: \"Account is Required!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n       toAccount: {\n            ...prev.toAccount,\n            error: \"\",\n          },\n        }));\n      }\n    } \n    else {\n      setData((prev) => ({\n        ...prev,\n      toAccount: {\n          ...prev.toAccount,\n          error: \"Account is Required!!\",\n        },\n      }));\n    }\n\n  };\n\n  const AmountHandler = (e) => {\n    const value = e;\n    console.log(value, \"amount to\");\n    setData((prev) => ({\n      ...prev,\n      transactionAmount: {\n        ...prev.transactionAmount,\n        value: value,\n      },\n    }));\n    if (value) {\n      if (value.length < 2) {\n        setData((prev) => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            error: \"Amount is too short!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n          transactionAmount: {\n            ...prev.transactionAmount,\n            error: \"\",\n          },\n        }));\n      }\n    } else {\n      setData((prev) => ({\n        ...prev,\n        transactionAmount: {\n          ...prev.transactionAmount,\n          error: \"amount is Required!!\",\n        },\n      }));\n    }\n\n    console.log(value);\n  };\n\n  const ReceiptHnadler = (e) => {\n    const { name, value } = e.target;\n    setDetails((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const NotesHandler = (e) => {\n    const notes = e;\n    setData((prev) => ({\n      ...prev,\n      notes: {\n        ...prev.notes,\n        value: notes,\n      },\n    }));\n    if (notes.trim()) {\n      if ((notes.trim()).length < 250 && (notes.trim()).length > 3 ) {\n        setData((prev) => ({\n          ...prev,\n          notes: {\n            ...prev.notes,\n            error: \"Notes is Required!!\",\n          },\n        }));\n      } else {\n        setData((prev) => ({\n          ...prev,\n       notes: {\n            ...prev.notes,\n            error: \"\",\n          },\n        }));\n      }\n    } \n    else {\n      setData((prev) => ({\n        ...prev,\n      notes: {\n          ...prev.notes,\n          error: \"Notes is Required!!\",\n        },\n      }));\n    }\n  };\n\n  console.log(data);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    AmountHandler(data.transactionAmount.value);\n    DateHandler(data.transactionDate.value);\n    TypeHandler(data.transactionType.value);\n    FromActHandler(data.fromAccount.value)\n    toActHandler(data.toAccount.value)\n    NotesHandler(data.notes.value)\n\n    if (localStorage.getItem(\"transactionForm\")) {\n      const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n\n      retrivedata.push(details);\n\n      localStorage.setItem(\"transactionForm\", JSON.stringify(retrivedata));\n    } else {\n      localStorage.setItem(\"transactionForm\", JSON.stringify([details]));\n    }\n  };\n\n  const MonthArr = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const TransactionTypeArr = [\"Home Expense\", \"Personal Expense\", \"Income\"];\n  const AccountArr = [\n    \"Personal Account\",\n    \"Real Living\",\n    \"My Dream Home\",\n    \"Full Circle\",\n    \"Core Realtors\",\n    \"Big Block\",\n  ];\n\n  return (\n    <>\n      <div className=\"form\">\n        <form onSubmit={submitHandler} method=\"POST\">\n          <label className=\"label\">Transaction Date:</label>\n          <div className=\"input\">\n            <input\n              type=\"date\"\n              id=\"date\"\n              name=\"transactionDate\"\n              value={data.transactionDate.value}\n              onChange={(e) => {\n                DateHandler(e.target.value);\n              }}\n              onClick={dateSet}\n            ></input>\n             <span>{data.transactionDate.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Month Year:</label>\n\n          <div className=\"input\">\n            <select\n              name=\"monthYear\"\n              value={data.monthYear.value}\n              id=\"\"\n              onChange={(e) => {\n                MonthHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" disabled selected>\n                Select\n              </option>\n\n              {MonthArr.map((month) => {\n                return (\n                  <option value={`${month} 2023`}>{`${month} 2023`}</option>\n                );\n              })}\n\n              {/* <option value=\"Jan 2023\">Jan 2023</option>\n                <option value=\"Feb 2023\">Feb 2023</option>\n                */}\n            </select>\n             <span>{data.monthYear.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Transaction Type:</label>\n          <div className=\"input\">\n            <select\n              name=\"transactionType\"\n              value={data.transactionType.value}\n              onChange={(e) => {\n                TypeHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\"  selected>\n                Select\n              </option>\n              {TransactionTypeArr.map((type) => {\n                return <option value={`${type}`}>{type}</option>;\n              })}\n            </select>\n             <span>{data.transactionType.error}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">From Account:</label>\n          <div className=\"input\">\n            <select\n              name=\"fromAccount\"\n              value={data.fromAccount.value}\n              onChange={(e) => {\n                FromActHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\"  selected>\n                Select\n              </option>\n              {AccountArr.map((account) => {\n                return <option value={account}>{account}</option>;\n              })}\n            </select>\n            <span>{data.fromAccount.error}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">To Account: </label>\n          <div className=\"input\">\n            <select\n              name=\"toAccount\"\n              value={data.toAccount.value}\n              onChange={(e) => {\n                toActHandler(e.target.value);\n              }}\n            >\n              <option value=\"select\" selected>\n                Select\n              </option>\n\n              {AccountArr.map((account) => {\n                return <option value={account}>{account}</option>;\n              })}\n            </select>\n            <span>{data.toAccount.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Amount:</label>\n          <div className=\"input\">\n            <input\n              type=\"text\"\n              name=\"transactionAmount\"\n              value={data.transactionAmount.value}\n              onChange={(e) => {\n                AmountHandler(e.target.value);\n              }}\n            ></input>\n            <span>{data.transactionAmount.error}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Receipt:</label>\n          <div className=\"input\">\n            <input\n              type=\"file\"\n              name=\"receipt\"\n              alt=\"Receipt is not found\"\n              value={data.receipt.value}\n              onChange={(e) => {\n                ReceiptHnadler(e.target.value);\n              }}\n            ></input>\n          </div>\n          <br></br>\n          <label className=\"label\">Notes:</label>\n          <div className=\"input\">\n            <textarea\n              cols=\"30\"\n              rows=\"6\"\n              name=\"notes\"\n              value={data.notes.value}\n              onChange={(e) => {\n                NotesHandler(e.target.value);\n              }}\n            ></textarea>\n            <span>{data.notes.error}</span>\n          </div>\n\n          <button type=\"submit\" className=\"submitBtn\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default TransactonForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}