{"ast":null,"code":"var _jsxFileName = \"/home/meet-vaghasiya/reactPractice/khatabook/src/components/Transaction.jsx\",\n  _s = $RefreshSig$();\nimport \"./Transaction.css\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Table from \"./Table\";\nimport { Dropdown } from \"./Dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Transaction = () => {\n  _s();\n  const navigate = useNavigate();\n  const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n  const [groupby, setGroupby] = useState({});\n  const [search, setSearch] = useState();\n  // const [sortedField, setSortedField] = useState({});\n  // let [sortedData,setSortedData]=useState(retrivedata)\n\n  // // pagination.........\n  // const [currentPage,setCurrentPage]=useState(1);\n  // const [postPerPage,setPostPerPage]=useState(3);\n  // const lastPostIndex = currentPage*postPerPage;\n  // const firstPostIndex = lastPostIndex - postPerPage;\n  // const paginationData = sortedData.slice(firstPostIndex,lastPostIndex)\n  // setSortedData(paginationData)\n\n  // const months = [\n  //   \"January 2023\",\n  //   \"February 2023\",\n  //   \"March 2023\",\n  //   \"April 2023\",\n  //   \"May 2023\",\n  //   \"June 2023\",\n  //   \"July 2023\",\n  //   \"August 2023\",\n  //   \"September 2023\",\n  //   \"October 2023\",\n  //   \"November 2023\",\n  //   \"December 2023\",\n  // ];\n\n  // const sorting = (key) => {\n  //   let direction = \"ascending\";\n\n  //   if (sortedField.key === key && sortedField.direction === \"ascending\") {\n  //     direction = \"descending\";\n  //   } else if (\n  //     sortedField.key === key &&\n  //     sortedField.direction === \"descending\"\n  //   ) {\n  //     direction = \"normal\";\n  //   }\n  //   setSortedField({ key, direction });\n  // };\n\n  // if (sortedField.direction === \"normal\") {\n  //   sortedData = [...retrivedata];\n\n  // } else if (sortedField.key === \"transactionAmount\") {\n  //   if (sortedField.direction === \"ascending\") {\n  //     sortedData.sort((a, b) => {\n  //       return a[sortedField?.key]?.value - b[sortedField?.key]?.value;\n  //     });\n  //   } else if (sortedField.direction === \"descending\") {\n  //     sortedData.sort((a, b) => {\n  //       return b[sortedField?.key]?.value - a[sortedField?.key]?.value;\n  //     });\n  //   }\n  // } else if (sortedField.key === \"transactionDate\") {\n  //   if (sortedField.direction === \"ascending\") {\n  //     sortedData.sort((a, b) => {\n  //       return (\n  //         new Date(a[sortedField?.key]?.value) -\n  //         new Date(b[sortedField?.key]?.value)\n  //       );\n  //     });\n  //   } else if (sortedField.direction === \"descending\") {\n  //     sortedData.sort((a, b) => {\n  //       return (\n  //         new Date(b[sortedField?.key]?.value) -\n  //         new Date(a[sortedField?.key]?.value)\n  //       );\n  //     });\n  //   }\n  // } else if (sortedField.key === \"monthYear\") {\n  //   if (sortedField.direction === \"ascending\") {\n  //     console.log(months.indexOf(\"January 2023\"));\n  //     sortedData.sort((a, b) => {\n  //       return (\n  //         months.indexOf(a[sortedField?.key]?.value) -\n  //         months.indexOf(b[sortedField?.key]?.value)\n  //       );\n  //     });\n  //   } else if (sortedField.direction === \"descending\") {\n  //     sortedData.sort((a, b) => {\n  //       return (\n  //         months.indexOf(b[sortedField?.key]?.value) -\n  //         months.indexOf(a[sortedField?.key]?.value)\n  //       );\n  //     });\n  //   }\n  // } else {\n  //   sortedData.sort((a, b) => {\n  //     // console.log(a[sortedField?.key].value < b[sortedField?.key].value);\n  //     if (\n  //       a[sortedField?.key]?.value?.toLowerCase() <\n  //       b[sortedField?.key]?.value?.toLowerCase()\n  //     ) {\n  //       return sortedField.direction === \"ascending\" ? -1 : 1;\n  //     }\n\n  //     if (\n  //       a[sortedField?.key]?.value?.toLowerCase() >\n  //       b[sortedField?.key]?.value?.toLowerCase()\n  //     ) {\n  //       return sortedField.direction === \"ascending\" ? 1 : -1;\n  //     }\n  //     return 0;\n  //   });\n  // }\n  // for group by\n  const groupBy = e => {\n    let field = e.target.value;\n    console.log(\"filed\", field);\n    const gData = [...retrivedata];\n    const search = [...retrivedata];\n    let groupData = {};\n    if (field === \"none\") {\n      setGroupby(groupData);\n    } else {\n      gData.forEach(items => {\n        var _items$field, _items$field2, _groupData$item;\n        console.log(\"value\");\n        console.log((_items$field = items[field]) === null || _items$field === void 0 ? void 0 : _items$field.value);\n        const item = (_items$field2 = items[field]) === null || _items$field2 === void 0 ? void 0 : _items$field2.value;\n        groupData[item] = (_groupData$item = groupData[item]) !== null && _groupData$item !== void 0 ? _groupData$item : [];\n        groupData[item].push(items);\n        setGroupby(groupData);\n      });\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"logindata\");\n    navigate('/public/login');\n  };\n  const groupArr = [\"none\", \"monthYear\", \"transactionType\", \"fromAccount\", \"toAccount\"];\n  const groupFun = e => {\n    console.log(e);\n    groupBy(e);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          for: groupArr,\n          funtion: groupFun,\n          label: 'Group By:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Table, {\n        records: retrivedata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"createBtn\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/create\",\n          children: \"Create Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logoutBtn\",\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"groupDetails\",\n        children: Object.keys(groupby).map((d, index) => {\n          if (d !== undefined) {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: d\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Table, {\n                records: groupby[d]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true);\n          } else {\n            /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Transaction, \"WRpG5pUURMCTG7mGLMcoSL6MKDg=\", false, function () {\n  return [useNavigate];\n});\n_c = Transaction;\nexport default Transaction;\nvar _c;\n$RefreshReg$(_c, \"Transaction\");","map":{"version":3,"names":["Link","useLocation","useNavigate","useState","Table","Dropdown","jsxDEV","_jsxDEV","Fragment","_Fragment","Transaction","_s","navigate","retrivedata","JSON","parse","localStorage","getItem","groupby","setGroupby","search","setSearch","groupBy","e","field","target","value","console","log","gData","groupData","forEach","items","_items$field","_items$field2","_groupData$item","item","push","logout","removeItem","groupArr","groupFun","children","className","for","funtion","label","fileName","_jsxFileName","lineNumber","columnNumber","records","to","onClick","Object","keys","map","d","index","undefined","_c","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/khatabook/src/components/Transaction.jsx"],"sourcesContent":["import \"./Transaction.css\";\nimport { Link,  useLocation, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Table from \"./Table\";\nimport { Dropdown } from \"./Dropdown\";\n\n\nconst Transaction = () => {\n  const navigate = useNavigate();\n  const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n  const [groupby, setGroupby] = useState({});\n\n  const [search,setSearch]=useState();\n  // const [sortedField, setSortedField] = useState({});\n  // let [sortedData,setSortedData]=useState(retrivedata)\n\n  // // pagination.........\n  // const [currentPage,setCurrentPage]=useState(1);\n  // const [postPerPage,setPostPerPage]=useState(3);\n  // const lastPostIndex = currentPage*postPerPage;\n  // const firstPostIndex = lastPostIndex - postPerPage;\n  // const paginationData = sortedData.slice(firstPostIndex,lastPostIndex)\n  // setSortedData(paginationData)\n\n  // const months = [\n  //   \"January 2023\",\n  //   \"February 2023\",\n  //   \"March 2023\",\n  //   \"April 2023\",\n  //   \"May 2023\",\n  //   \"June 2023\",\n  //   \"July 2023\",\n  //   \"August 2023\",\n  //   \"September 2023\",\n  //   \"October 2023\",\n  //   \"November 2023\",\n  //   \"December 2023\",\n  // ];\n\n  // const sorting = (key) => {\n  //   let direction = \"ascending\";\n\n  //   if (sortedField.key === key && sortedField.direction === \"ascending\") {\n  //     direction = \"descending\";\n  //   } else if (\n  //     sortedField.key === key &&\n  //     sortedField.direction === \"descending\"\n  //   ) {\n  //     direction = \"normal\";\n  //   }\n  //   setSortedField({ key, direction });\n  // };\n\n  // if (sortedField.direction === \"normal\") {\n  //   sortedData = [...retrivedata];\n\n  // } else if (sortedField.key === \"transactionAmount\") {\n  //   if (sortedField.direction === \"ascending\") {\n  //     sortedData.sort((a, b) => {\n  //       return a[sortedField?.key]?.value - b[sortedField?.key]?.value;\n  //     });\n  //   } else if (sortedField.direction === \"descending\") {\n  //     sortedData.sort((a, b) => {\n  //       return b[sortedField?.key]?.value - a[sortedField?.key]?.value;\n  //     });\n  //   }\n  // } else if (sortedField.key === \"transactionDate\") {\n  //   if (sortedField.direction === \"ascending\") {\n  //     sortedData.sort((a, b) => {\n  //       return (\n  //         new Date(a[sortedField?.key]?.value) -\n  //         new Date(b[sortedField?.key]?.value)\n  //       );\n  //     });\n  //   } else if (sortedField.direction === \"descending\") {\n  //     sortedData.sort((a, b) => {\n  //       return (\n  //         new Date(b[sortedField?.key]?.value) -\n  //         new Date(a[sortedField?.key]?.value)\n  //       );\n  //     });\n  //   }\n  // } else if (sortedField.key === \"monthYear\") {\n  //   if (sortedField.direction === \"ascending\") {\n  //     console.log(months.indexOf(\"January 2023\"));\n  //     sortedData.sort((a, b) => {\n  //       return (\n  //         months.indexOf(a[sortedField?.key]?.value) -\n  //         months.indexOf(b[sortedField?.key]?.value)\n  //       );\n  //     });\n  //   } else if (sortedField.direction === \"descending\") {\n  //     sortedData.sort((a, b) => {\n  //       return (\n  //         months.indexOf(b[sortedField?.key]?.value) -\n  //         months.indexOf(a[sortedField?.key]?.value)\n  //       );\n  //     });\n  //   }\n  // } else {\n  //   sortedData.sort((a, b) => {\n  //     // console.log(a[sortedField?.key].value < b[sortedField?.key].value);\n  //     if (\n  //       a[sortedField?.key]?.value?.toLowerCase() <\n  //       b[sortedField?.key]?.value?.toLowerCase()\n  //     ) {\n  //       return sortedField.direction === \"ascending\" ? -1 : 1;\n  //     }\n\n  //     if (\n  //       a[sortedField?.key]?.value?.toLowerCase() >\n  //       b[sortedField?.key]?.value?.toLowerCase()\n  //     ) {\n  //       return sortedField.direction === \"ascending\" ? 1 : -1;\n  //     }\n  //     return 0;\n  //   });\n  // }\n  // for group by\n  const groupBy = (e) => {\n    let field = e.target.value;\n    console.log(\"filed\", field);\n\n    const gData = [...retrivedata];\n      const search = [...retrivedata];\n\n    let groupData = {};\n    if (field === \"none\") {\n      setGroupby(groupData);\n    } else {\n      gData.forEach((items) => {\n        console.log(\"value\");\n        console.log(items[field]?.value);\n        const item = items[field]?.value;\n        groupData[item] = groupData[item] ?? [];\n        groupData[item].push(items);\n        setGroupby(groupData);\n      });\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"logindata\");\n    navigate('/public/login')\n  };\n\n  const groupArr = [\n    \"none\",\n    \"monthYear\",\n    \"transactionType\",\n    \"fromAccount\",\n    \"toAccount\",\n  ];\n   const groupFun = (e) => {\n    console.log(e)\n     groupBy(e);\n   };\n\n  return (\n    <>\n      <div className=\"details\">\n        <>\n        <Dropdown for={groupArr} funtion={groupFun} label={'Group By:'}/>\n          {/* <label>Group By:</label>\n          <select\n            className=\"groupby\"\n            onChange={(e) => {\n              groupBy(e);\n            }}\n          >\n            <option value=\"none\">None</option>\n            <option value=\"monthYear\">Month Year</option>\n            <option value=\"transactionType\">Transaction Type</option>\n            <option value=\"fromAccount\">From Account</option>\n            <option value=\"toAccount\">To Account</option>\n          </select> */}\n        </>\n\n        <Table records={retrivedata} />\n\n        <button className=\"createBtn\">\n          <Link to={\"/create\"}>Create Transaction</Link>\n        </button>\n\n        <button className=\"logoutBtn\" onClick={logout}>\n          Logout\n        </button>\n\n        <div className=\"groupDetails\">\n          {Object.keys(groupby).map((d, index) => {\n            if (d !== undefined) {\n              return (\n                <>\n                  <h2>{d}</h2>\n                  <Table records={groupby[d]} />\n                </>\n              );\n            } else {\n              <></>;\n            }\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Transaction;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}