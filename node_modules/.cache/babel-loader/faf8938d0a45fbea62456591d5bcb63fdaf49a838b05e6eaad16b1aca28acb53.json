{"ast":null,"code":"var _jsxFileName = \"/home/meet-vaghasiya/reactPractice/khatabook/src/components/GroupBy.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Pagination from \"./Pagination\";\nimport Table from \"./Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GroupBy = _ref => {\n  _s();\n  let {\n    groupby\n  } = _ref;\n  console.log(\"ff\");\n  console.log(groupby);\n  // pagination.........\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage, setPostPerPage] = useState(3);\n  const lastPostIndex = currentPage * postPerPage;\n  const firstPostIndex = lastPostIndex - postPerPage;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groupDetails\",\n      children: Object.keys(groupby).map((d, index) => {\n        {\n          const paginationData = groupby[d].slice(firstPostIndex, lastPostIndex);\n        }\n        if (d !== undefined) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: d\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              sortedData: paginationData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n              totalPosts: groupby[d].length,\n              postsPerPage: postPerPage,\n              setCurrentPage: setCurrentPage,\n              currentPage: currentPage,\n              lastPostIndex: lastPostIndex,\n              firstPostIndex: firstPostIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        } else {\n          /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(GroupBy, \"iFW+nec/ghjuN3OXjEclgH4vsB4=\");\n_c = GroupBy;\nexport default GroupBy;\nvar _c;\n$RefreshReg$(_c, \"GroupBy\");","map":{"version":3,"names":["React","useState","Pagination","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","GroupBy","_ref","_s","groupby","console","log","currentPage","setCurrentPage","postPerPage","setPostPerPage","lastPostIndex","firstPostIndex","children","className","Object","keys","map","d","index","paginationData","slice","undefined","fileName","_jsxFileName","lineNumber","columnNumber","sortedData","totalPosts","length","postsPerPage","_c","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/khatabook/src/components/GroupBy.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport Pagination from \"./Pagination\";\nimport Table from \"./Table\";\n\nconst GroupBy = ({ groupby }) => {\n  console.log(\"ff\");\n  console.log(groupby);\n  // pagination.........\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage, setPostPerPage] = useState(3);\n  const lastPostIndex = currentPage * postPerPage;\n  const firstPostIndex = lastPostIndex - postPerPage;\n\n  return (\n    <>\n      <div className=\"groupDetails\">\n        {Object.keys(groupby).map((d, index) => {\n\n          {\n            const paginationData = groupby[d].slice(\n              firstPostIndex,\n              lastPostIndex\n              );\n            }\n            if (d !== undefined) {\n              return (\n                <>\n                <h2>{d}</h2>\n                \n               \n                <Table sortedData={paginationData} />\n        \n                {/* <table>\n                  <thead>\n                    <th>Transaction Date</th>\n                    <th>Month Year</th>\n                    <th>Transaction Type</th>\n                    <th>From Account</th>\n                    <th>To Account</th>\n                    <th>Amount</th>\n                    <th>Receipt</th>\n                    <th>Notes</th>\n                    <th>Action</th>\n                  </thead>\n                  {groupby[d]?.map((values) => (\n                    <>\n                      <tr>\n                        <td>{values.transactionDate.value}</td>\n                        <td>{values.monthYear.value}</td>\n                        <td>{values.transactionType.value}</td>\n                        <td>{values.fromAccount.value}</td>\n                        <td>{values.toAccount.value}</td>\n                        <td>\n                          {Intl.NumberFormat(\"en-IN\", {\n                            style: \"currency\",\n                            currency: \"INR\",\n                          }).format(values.transactionAmount.value)}\n                        </td>\n                        <td>\n                          <img\n                            src={values.receipt.value}\n                            width={50}\n                            height={50}\n                            alt=\"\"\n                          />\n                        </td>\n                        <td>{values.notes.value}</td>\n                        <td>\n                          <a href=\"#\">View</a>\n                        </td>\n                      </tr>\n                    </>\n                  ))}\n                </table> */}\n                <Pagination\n                  totalPosts={groupby[d].length}\n                  postsPerPage={postPerPage}\n                  setCurrentPage={setCurrentPage}\n                  currentPage={currentPage}\n                  lastPostIndex={lastPostIndex}\n                  firstPostIndex={firstPostIndex}\n                />\n              </>\n            );\n          } else {\n            <></>;\n          }\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default GroupBy;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,OAAO,GAAGC,IAAA,IAAiB;EAAAC,EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC1BG,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACjBD,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB;EACA,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMiB,aAAa,GAAGJ,WAAW,GAAGE,WAAW;EAC/C,MAAMG,cAAc,GAAGD,aAAa,GAAGF,WAAW;EAElD,oBACEX,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACEf,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAD,QAAA,EAC1BE,MAAM,CAACC,IAAI,CAACZ,OAAO,CAAC,CAACa,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;QAEtC;UACE,MAAMC,cAAc,GAAGhB,OAAO,CAACc,CAAC,CAAC,CAACG,KAAK,CACrCT,cAAc,EACdD,aAAa,CACZ;QACH;QACA,IAAIO,CAAC,KAAKI,SAAS,EAAE;UACnB,oBACExB,OAAA,CAAAE,SAAA;YAAAa,QAAA,gBACAf,OAAA;cAAAe,QAAA,EAAKK;YAAC;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM,eAGZ5B,OAAA,CAACF,KAAK;cAAC+B,UAAU,EAAEP;YAAe;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG,eA4CrC5B,OAAA,CAACH,UAAU;cACTiC,UAAU,EAAExB,OAAO,CAACc,CAAC,CAAC,CAACW,MAAO;cAC9BC,YAAY,EAAErB,WAAY;cAC1BD,cAAc,EAAEA,cAAe;cAC/BD,WAAW,EAAEA,WAAY;cACzBI,aAAa,EAAEA,aAAc;cAC7BC,cAAc,EAAEA;YAAe;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAC/B;UAAA,gBACD;QAEP,CAAC,MAAM;UACL,aAAA5B,OAAA,CAAAE,SAAA,oBAAK;QACP;MACF,CAAC;IAAC;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACE,iBACL;AAEP,CAAC;AAACvB,EAAA,CAvFIF,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAyFb,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}