{"ast":null,"code":"var _jsxFileName = \"/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport \"../assets/styles/transaction.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { MonthArr, TransactionTypeArr, AccountArr, MAX_FILE_SIZE, validFileExtensions } from \"../utils/constant\";\nimport { Dropdown } from \"./Dropdown\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransactionForm = () => {\n  _s();\n  var _errors$transactionDa, _errors$monthYear, _errors$transactionTy, _errors$fromAccount, _errors$toAccount, _errors$transactionAm, _errors$receipt, _errors$notes;\n  const {\n    id\n  } = useParams();\n  const index = id - 1;\n  const updateData = JSON.parse(localStorage.getItem(\"transactionForm\"));\n  const [value, setvalue] = useState({});\n  const [data, setData] = useState({});\n  const navigate = useNavigate();\n\n  // YUP VALIDATIONS...\n\n  const formSchema = yup.object().shape({\n    transactionDate: yup.string().required(\"Transaction Date is required!!\"),\n    monthYear: yup.string().required(\"month year is required!!\"),\n    transactionType: yup.string().required(\"transaction type is required!!\"),\n    fromAccount: yup.string()\n    // .notOneOf([yup.ref(\"toAccount\"), null], \"To Account is  matched!!\")\n    .required(\"account is required!!\"),\n    toAccount: yup.string().notOneOf([yup.ref(\"fromAccount\"), null], \"From Account is  matched!!\").required(\"account is required!!\"),\n    transactionAmount: yup.number().integer().positive().min(2, \"minimum amount should be 10\").required().typeError(\"amount is required!!\"),\n    notes: yup.string().min(3).max(250).required().typeError(\"notes is required!!\"),\n    receipt: yup.mixed().test({\n      name: \"is-sku\",\n      skipAbsent: true,\n      test(value, error) {\n        if (value === undefined || value === null || value.length === 0) {\n          return error.createError({\n            message: \"image is required!!!\"\n          });\n        } else {\n          if (!validFileExtensions.includes(value[0].type)) {\n            return error.createError({\n              message: \"image type must be jpeg,png,jpg or svg..\"\n            });\n          }\n          if (value[0][\"size\"] > MAX_FILE_SIZE) {\n            return error.createError({\n              message: \"image must less than 10kb\"\n            });\n          }\n        }\n        return true;\n      }\n    })\n  });\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(formSchema)\n  });\n\n  // ......\n\n  useEffect(() => {\n    for (const key in updateData) {\n      var _updateData$key;\n      if (key && parseInt((_updateData$key = updateData[key]) === null || _updateData$key === void 0 ? void 0 : _updateData$key.id) === parseInt(id)) {\n        setData(updateData[key]);\n        break;\n      }\n    }\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const removeImage = () => {\n    setData(prev => ({\n      ...prev,\n      receipt: {\n        ...prev.receipt,\n        value: \"\"\n      }\n    }));\n  };\n  const onSubmit = e => {\n    //  console.log(e)\n    let {\n      monthYear,\n      transactionDate,\n      transactionType,\n      fromAccount,\n      toAccount,\n      transactionAmount,\n      receipt,\n      notes\n    } = e;\n\n    // const receiptPhoto;\n\n    let file = receipt[0];\n    let freader = new FileReader();\n    freader.readAsDataURL(file);\n    freader.addEventListener(\"load\", () => {\n      let receiptPhoto = freader.result;\n    });\n    let insertData = {\n      monthYear: {\n        value: monthYear\n      },\n      transactionDate: {\n        value: transactionDate\n      },\n      transactionType: {\n        value: transactionType\n      },\n      fromAccount: {\n        value: fromAccount\n      },\n      toAccount: {\n        value: toAccount\n      },\n      transactionAmount: {\n        value: transactionAmount\n      },\n      receipt: {\n        value: photo\n      },\n      notes: {\n        value: notes\n      }\n    };\n\n    // console.log(insertData);\n    setData(insertData);\n    // console.log(data);\n    //  console.log(data);\n    if (localStorage.getItem(\"transactionForm\")) {\n      const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n      // console.log(retrivedata);\n\n      if (id) {\n        for (const e in retrivedata) {\n          if (parseInt(retrivedata[e].id) === parseInt(id)) {\n            insertData[\"id\"] = id;\n            retrivedata[e] = insertData;\n          }\n        }\n      } else {\n        const prevDataIndex = Object.keys(retrivedata).length - 1;\n        const prevId = retrivedata[prevDataIndex][\"id\"];\n        insertData[\"id\"] = parseInt(prevId) + 1;\n        retrivedata.push(insertData);\n      }\n      localStorage.setItem(\"transactionForm\", JSON.stringify(retrivedata));\n    } else {\n      insertData[\"id\"] = 1;\n      localStorage.setItem(\"transactionForm\", JSON.stringify([insertData]));\n    }\n    navigate(\"/transaction\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Transaction Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"transactionDate\",\n            ...register(\"transactionDate\"),\n            // value={data.transactionDate.value}\n            // onChange={(e) => {\n            //   DateHandler(e.target.value);\n            // }}\n            onClick: () => {\n              const newdate = new Date();\n              var year = newdate.getFullYear();\n              var month = newdate.getMonth() + 1;\n              var day = newdate.getDate();\n              if (month < 10) {\n                month = \"0\" + month;\n              }\n              if (day < 10) {\n                day = \"0\" + day;\n              }\n              var limit = `${year}-${month}-${day}`;\n              document.getElementById(\"date\").setAttribute(\"max\", limit);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$transactionDa = errors.transactionDate) === null || _errors$transactionDa === void 0 ? void 0 : _errors$transactionDa.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Month Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"monthYear\",\n            ...register(\"monthYear\"),\n            // value={data.monthYear.value}\n            id: \"\"\n            // onChange={(e) => {\n            //   MonthHandler(e.target.value);\n            // }}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), MonthArr.map(month => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: `${month} 2023`,\n                children: `${month} 2023`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$monthYear = errors.monthYear) === null || _errors$monthYear === void 0 ? void 0 : _errors$monthYear.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Transaction Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"transactionType\",\n            ...register(\"transactionType\"),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              for: TransactionTypeArr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$transactionTy = errors.transactionType) === null || _errors$transactionTy === void 0 ? void 0 : _errors$transactionTy.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"From Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"fromAccount\",\n            ...register(\"fromAccount\"),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              for: AccountArr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$fromAccount = errors.fromAccount) === null || _errors$fromAccount === void 0 ? void 0 : _errors$fromAccount.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"To Account: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"toAccount\",\n            ...register(\"toAccount\"),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              for: AccountArr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$toAccount = errors.toAccount) === null || _errors$toAccount === void 0 ? void 0 : _errors$toAccount.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"transactionAmount\",\n            ...register(\"transactionAmount\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$transactionAm = errors.transactionAmount) === null || _errors$transactionAm === void 0 ? void 0 : _errors$transactionAm.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Receipt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [\n          /*#__PURE__*/\n          // data.receipt.value ? (\n          //   <>\n          //     <img src={data.receipt.value} width={50} height={50} alt=\"\" />\n          //     <span onClick={removeImage} className=\"cross\">\n          //       X\n          //     </span>\n          //   </>\n          // ) :\n          _jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"receipt\",\n              alt: \"Receipt is not found\",\n              ...register(\"receipt\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$receipt = errors.receipt) === null || _errors$receipt === void 0 ? void 0 : _errors$receipt.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: \"30\",\n            rows: \"6\",\n            name: \"notes\",\n            ...register(\"notes\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$notes = errors.notes) === null || _errors$notes === void 0 ? void 0 : _errors$notes.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submitBtn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/transaction`,\n          className: \"showTrn\",\n          children: \"Show Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TransactionForm, \"f2zklxP0mwV+n6nDprS1pWuBHd0=\", false, function () {\n  return [useParams, useNavigate, useForm];\n});\n_c = TransactionForm;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Link","MonthArr","TransactionTypeArr","AccountArr","MAX_FILE_SIZE","validFileExtensions","Dropdown","yup","yupResolver","useForm","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactionForm","_s","_errors$transactionDa","_errors$monthYear","_errors$transactionTy","_errors$fromAccount","_errors$toAccount","_errors$transactionAm","_errors$receipt","_errors$notes","id","index","updateData","JSON","parse","localStorage","getItem","value","setvalue","data","setData","navigate","formSchema","object","shape","transactionDate","string","required","monthYear","transactionType","fromAccount","toAccount","notOneOf","ref","transactionAmount","number","integer","positive","min","typeError","notes","max","receipt","mixed","test","name","skipAbsent","error","undefined","length","createError","message","includes","type","register","handleSubmit","setValue","formState","errors","resolver","key","_updateData$key","parseInt","removeImage","prev","onSubmit","e","file","freader","FileReader","readAsDataURL","addEventListener","receiptPhoto","result","insertData","photo","retrivedata","prevDataIndex","Object","keys","prevId","push","setItem","stringify","children","className","method","fileName","_jsxFileName","lineNumber","columnNumber","onClick","newdate","Date","year","getFullYear","month","getMonth","day","getDate","limit","document","getElementById","setAttribute","selected","map","for","alt","cols","rows","to","_c","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx"],"sourcesContent":["import \"../assets/styles/transaction.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport {\n  MonthArr,\n  TransactionTypeArr,\n  AccountArr,\n  MAX_FILE_SIZE,\n  validFileExtensions,\n} from \"../utils/constant\";\nimport { Dropdown } from \"./Dropdown\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\n\nconst TransactionForm = () => {\n  const { id } = useParams();\n  const index = id - 1;\n  const updateData = JSON.parse(localStorage.getItem(\"transactionForm\"));\n  const [value, setvalue] = useState({});\n\n  const [data, setData] = useState({});\n\n  const navigate = useNavigate();\n\n  // YUP VALIDATIONS...\n\n  const formSchema = yup.object().shape({\n    transactionDate: yup.string().required(\"Transaction Date is required!!\"),\n    monthYear: yup.string().required(\"month year is required!!\"),\n    transactionType: yup.string().required(\"transaction type is required!!\"),\n    fromAccount: yup\n      .string()\n      // .notOneOf([yup.ref(\"toAccount\"), null], \"To Account is  matched!!\")\n      .required(\"account is required!!\"),\n    toAccount: yup\n      .string()\n      .notOneOf([yup.ref(\"fromAccount\"), null], \"From Account is  matched!!\")\n      .required(\"account is required!!\"),\n    transactionAmount: yup\n      .number()\n      .integer()\n      .positive()\n      .min(2, \"minimum amount should be 10\")\n      .required()\n      .typeError(\"amount is required!!\"),\n    notes: yup\n      .string()\n      .min(3)\n      .max(250)\n      .required()\n      .typeError(\"notes is required!!\"),\n    receipt: yup.mixed().test({\n      name: \"is-sku\",\n      skipAbsent: true,\n      test(value, error) {\n        if (value === undefined || value === null || value.length === 0) {\n          return error.createError({ message: \"image is required!!!\" });\n        } else {\n          if (!validFileExtensions.includes(value[0].type)) {\n            return error.createError({\n              message: \"image type must be jpeg,png,jpg or svg..\",\n            });\n          }\n          if (value[0][\"size\"] > MAX_FILE_SIZE) {\n            return error.createError({ message: \"image must less than 10kb\" });\n          }\n        }\n        return true;\n      },\n    }),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(formSchema),\n  });\n\n  // ......\n\n  useEffect(() => {\n    for (const key in updateData) {\n      if (key && parseInt(updateData[key]?.id) === parseInt(id)) {\n        setData(updateData[key]);\n        break;\n      }\n    }\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const removeImage = () => {\n    setData((prev) => ({\n      ...prev,\n      receipt: {\n        ...prev.receipt,\n        value: \"\",\n      },\n    }));\n  };\n\n  const onSubmit = (e) => {\n    //  console.log(e)\n    let {\n      monthYear,\n      transactionDate,\n      transactionType,\n      fromAccount,\n      toAccount,\n      transactionAmount,\n      receipt,\n      notes,\n    } = e;\n   \n    // const receiptPhoto;\n\n    let file = receipt[0];\n    let freader = new FileReader();\n    freader.readAsDataURL(file);\n    freader.addEventListener(\"load\", () => {\n       let receiptPhoto = freader.result;\n\n    });\n\n    let insertData = {\n      monthYear: {\n        value: monthYear,\n      },\n      transactionDate: {\n        value: transactionDate,\n      },\n      transactionType: {\n        value: transactionType,\n      },\n      fromAccount: {\n        value: fromAccount,\n      },\n      toAccount: {\n        value: toAccount,\n      },\n      transactionAmount: {\n        value: transactionAmount,\n      },\n      receipt: {\n        value: photo,\n      },\n      notes: {\n        value: notes,\n      },\n    };\n\n    // console.log(insertData);\n    setData(insertData);\n    // console.log(data);\n    //  console.log(data);\n    if (localStorage.getItem(\"transactionForm\")) {\n      const retrivedata = JSON.parse(localStorage.getItem(\"transactionForm\"));\n      // console.log(retrivedata);\n\n      if (id) {\n        for (const e in retrivedata) {\n          if (parseInt(retrivedata[e].id) === parseInt(id)) {\n            insertData[\"id\"] = id;\n            retrivedata[e] = insertData;\n          }\n        }\n      } else {\n        const prevDataIndex = Object.keys(retrivedata).length - 1;\n        const prevId = retrivedata[prevDataIndex][\"id\"];\n        insertData[\"id\"] = parseInt(prevId) + 1;\n\n        retrivedata.push(insertData);\n      }\n\n      localStorage.setItem(\"transactionForm\", JSON.stringify(retrivedata));\n    } else {\n      insertData[\"id\"] = 1;\n\n      localStorage.setItem(\"transactionForm\", JSON.stringify([insertData]));\n    }\n\n    navigate(\"/transaction\");\n  };\n\n  return (\n    <>\n      <div className=\"form\">\n        <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">\n          <label className=\"label\">Transaction Date:</label>\n          <div className=\"input\">\n            <input\n              type=\"date\"\n              id=\"date\"\n              name=\"transactionDate\"\n              {...register(\"transactionDate\")}\n              // value={data.transactionDate.value}\n              // onChange={(e) => {\n              //   DateHandler(e.target.value);\n              // }}\n              onClick={() => {\n                const newdate = new Date();\n                var year = newdate.getFullYear();\n                var month = newdate.getMonth() + 1;\n                var day = newdate.getDate();\n                if (month < 10) {\n                  month = \"0\" + month;\n                }\n                if (day < 10) {\n                  day = \"0\" + day;\n                }\n\n                var limit = `${year}-${month}-${day}`;\n\n                document.getElementById(\"date\").setAttribute(\"max\", limit);\n              }}\n            ></input>\n            <span>{errors.transactionDate?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Month Year:</label>\n\n          <div className=\"input\">\n            <select\n              name=\"monthYear\"\n              {...register(\"monthYear\")}\n              // value={data.monthYear.value}\n              id=\"\"\n              // onChange={(e) => {\n              //   MonthHandler(e.target.value);\n              // }}\n            >\n              <option value=\"\" selected>\n                Select\n              </option>\n\n              {MonthArr.map((month) => {\n                return (\n                  <option value={`${month} 2023`}>{`${month} 2023`}</option>\n                );\n              })}\n            </select>\n            <span>{errors.monthYear?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Transaction Type:</label>\n          <div className=\"input\">\n            <select\n              name=\"transactionType\"\n              {...register(\"transactionType\")}\n              // value={data.transactionType.value}\n              // onChange={(e) => {\n              //   TypeHandler(e.target.value);\n              // }}\n            >\n              <option value=\"\" selected>\n                Select\n              </option>\n              <Dropdown for={TransactionTypeArr} />\n            </select>\n            <span>{errors.transactionType?.message}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">From Account:</label>\n          <div className=\"input\">\n            <select\n              name=\"fromAccount\"\n              {...register(\"fromAccount\")}\n\n              // value={data.fromAccount.value}\n              // onChange={(e) => {\n              //   FromActHandler(e.target.value);\n              // }}\n            >\n              <option value=\"\" selected>\n                Select\n              </option>\n              <Dropdown for={AccountArr} />\n            </select>\n            <span>{errors.fromAccount?.message}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">To Account: </label>\n          <div className=\"input\">\n            <select\n              name=\"toAccount\"\n              {...register(\"toAccount\")}\n              // value={data.toAccount.value}\n              // onChange={(e) => {\n              //   toActHandler(e.target.value);\n              // }}\n            >\n              <option value=\"\" selected>\n                Select\n              </option>\n              <Dropdown for={AccountArr} />\n            </select>\n            <span>{errors.toAccount?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Amount:</label>\n          <div className=\"input\">\n            <input\n              type=\"text\"\n              name=\"transactionAmount\"\n              {...register(\"transactionAmount\")}\n              // value={data.transactionAmount.value}\n              // onChange={(e) => {\n              //   AmountHandler(e.target.value);\n              // }}\n            ></input>\n            <span>{errors.transactionAmount?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Receipt:</label>\n          <div className=\"input\">\n            {\n              // data.receipt.value ? (\n              //   <>\n              //     <img src={data.receipt.value} width={50} height={50} alt=\"\" />\n              //     <span onClick={removeImage} className=\"cross\">\n              //       X\n              //     </span>\n              //   </>\n              // ) :\n              <>\n                <input\n                  type=\"file\"\n                  name=\"receipt\"\n                  alt=\"Receipt is not found\"\n                  {...register(\"receipt\")}\n                  // value={data.receipt.value}\n                  // onChange={(e) => {\n                  //   ReceiptHandler(e);\n                  // }}\n                ></input>\n              </>\n            }\n\n            <span>{errors.receipt?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Notes:</label>\n          <div className=\"input\">\n            <textarea\n              cols=\"30\"\n              rows=\"6\"\n              name=\"notes\"\n              {...register(\"notes\")}\n\n              // value={data.notes.value}\n              // onChange={(e) => {\n              //   NotesHandler(e.target.value);\n              // }}\n            ></textarea>\n            <span>{errors.notes?.message}</span>\n          </div>\n\n          <button type=\"submit\" className=\"submitBtn\">\n            Submit\n          </button>\n\n          <Link to={`/transaction`} className=\"showTrn\">\n            Show Transaction\n          </Link>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default TransactionForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}