[{"/home/meet-vaghasiya/reactPractice/khatabook/src/index.js":"1","/home/meet-vaghasiya/reactPractice/khatabook/src/App.js":"2","/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx":"3","/home/meet-vaghasiya/reactPractice/khatabook/src/components/Transaction.jsx":"4","/home/meet-vaghasiya/reactPractice/khatabook/src/components/Pagination.jsx":"5","/home/meet-vaghasiya/reactPractice/khatabook/src/components/View.jsx":"6","/home/meet-vaghasiya/reactPractice/khatabook/src/components/Registration.jsx":"7","/home/meet-vaghasiya/reactPractice/khatabook/src/components/Login.jsx":"8","/home/meet-vaghasiya/reactPractice/khatabook/src/components/Dropdown.jsx":"9","/home/meet-vaghasiya/reactPractice/khatabook/src/utils/constant.js":"10","/home/meet-vaghasiya/reactPractice/khatabook/src/utils/helper.js":"11","/home/meet-vaghasiya/reactPractice/khatabook/src/pages/transaction/compomnents/Table.jsx":"12","/home/meet-vaghasiya/reactPractice/khatabook/src/auth/Unauth.jsx":"13","/home/meet-vaghasiya/reactPractice/khatabook/src/auth/Auth.jsx":"14","/home/meet-vaghasiya/reactPractice/khatabook/src/Validations/UserValidation.js":"15","/home/meet-vaghasiya/reactPractice/khatabook/src/components/YupValidations.jsx":"16","/home/meet-vaghasiya/reactPractice/khatabook/src/context/transactionTable.jsx":"17","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/index.js":"18","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/App.js":"19","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/auth/Auth.jsx":"20","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/auth/Unauth.jsx":"21","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/context/transactionTable.jsx":"22","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/utils/constant.js":"23","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/Form.jsx":"24","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/Transaction.jsx":"25","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/View.jsx":"26","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/Registration.jsx":"27","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/Login.jsx":"28","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/utils/helper.js":"29","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/Dropdown.jsx":"30","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/pages/transaction/compomnents/Table.jsx":"31","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/Pagination.jsx":"32","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/Redux/store.js":"33","/home/meet-vaghasiya/reactPractice/khatabook-redux/src/Redux/ducks/counterSlice.js":"34"},{"size":148,"mtime":1682486666471,"results":"35","hashOfConfig":"36"},{"size":665,"mtime":1683724755406,"results":"37","hashOfConfig":"36"},{"size":11216,"mtime":1683875325720,"results":"38","hashOfConfig":"36"},{"size":2994,"mtime":1683892752735,"results":"39","hashOfConfig":"36"},{"size":1128,"mtime":1683519623453,"results":"40","hashOfConfig":"36"},{"size":2486,"mtime":1683875220971,"results":"41","hashOfConfig":"36"},{"size":3323,"mtime":1683553078206,"results":"42","hashOfConfig":"36"},{"size":2844,"mtime":1683875242067,"results":"43","hashOfConfig":"36"},{"size":216,"mtime":1683519623445,"results":"44","hashOfConfig":"36"},{"size":28520,"mtime":1683955537926,"results":"45","hashOfConfig":"36"},{"size":422,"mtime":1683891707290,"results":"46","hashOfConfig":"36"},{"size":9194,"mtime":1683893489945,"results":"47","hashOfConfig":"36"},{"size":779,"mtime":1683519623445,"results":"48","hashOfConfig":"36"},{"size":1001,"mtime":1683890641622,"results":"49","hashOfConfig":"36"},{"size":195,"mtime":1683544114631,"results":"50","hashOfConfig":"36"},{"size":2324,"mtime":1683550696794,"results":"51","hashOfConfig":"36"},{"size":598,"mtime":1683875338632,"results":"52","hashOfConfig":"36"},{"size":276,"mtime":1684132251568,"results":"53","hashOfConfig":"54"},{"size":665,"mtime":1684133080840,"results":"55","hashOfConfig":"54"},{"size":1001,"mtime":1683890641622,"results":"56","hashOfConfig":"54"},{"size":779,"mtime":1683519623445,"results":"57","hashOfConfig":"54"},{"size":598,"mtime":1683875338632,"results":"58","hashOfConfig":"54"},{"size":28520,"mtime":1684129750065,"results":"59","hashOfConfig":"54"},{"size":11032,"mtime":1684158256856,"results":"60","hashOfConfig":"54"},{"size":2918,"mtime":1684156902781,"results":"61","hashOfConfig":"54"},{"size":2486,"mtime":1683875220971,"results":"62","hashOfConfig":"54"},{"size":3323,"mtime":1683553078206,"results":"63","hashOfConfig":"54"},{"size":2844,"mtime":1683875242067,"results":"64","hashOfConfig":"54"},{"size":422,"mtime":1683891707290,"results":"65","hashOfConfig":"54"},{"size":216,"mtime":1683519623445,"results":"66","hashOfConfig":"54"},{"size":9057,"mtime":1684151059767,"results":"67","hashOfConfig":"54"},{"size":1128,"mtime":1683519623453,"results":"68","hashOfConfig":"54"},{"size":205,"mtime":1684139216399,"results":"69","hashOfConfig":"54"},{"size":1070,"mtime":1684158223044,"results":"70","hashOfConfig":"54"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1u9vbfx",{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qbggzn",{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/meet-vaghasiya/reactPractice/khatabook/src/index.js",[],[],[],"/home/meet-vaghasiya/reactPractice/khatabook/src/App.js",[],[],"/home/meet-vaghasiya/reactPractice/khatabook/src/components/Form.jsx",["178","179","180"],["181","182"],"import \"../assets/styles/transaction.css\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useTransactionData } from \"../context/transactionTable\";\nimport {\n  MonthArr,\n  TransactionTypeArr,\n  AccountArr,\n  MAX_FILE_SIZE,\n  validFileExtensions,\n} from \"../utils/constant\";\nimport { Dropdown } from \"./Dropdown\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nlet info = {\n  monthYear: {},\n  transactionDate: {},\n  transactionType: {},\n  fromAccount: {},\n  toAccount: {},\n  transactionAmount: {},\n  receipt: {},\n  notes: {},\n};\n\nconst TransactionForm = () => {\n  const { id } = useParams();\n  const index = id - 1;\n  // const updateData = JSON.parse(localStorage.getItem(\"transactionForm\"));\n\n  // context data\n  const { transactionData, setTransactionData } = useTransactionData([]);\n  const updateData = transactionData;\n  const [submit, setSubmit] = useState(false);\n  const navigate = useNavigate();\n  const [data, setData] = useState(info);\n\n  //\n  // YUP VALIDATIONS...\n\n  const formSchema = yup.object().shape({\n    transactionDate: yup.string().required(\"Transaction Date is required!!\"),\n    monthYear: yup.string().required(\"month year is required!!\"),\n    transactionType: yup.string().required(\"transaction type is required!!\"),\n    fromAccount: yup\n      .string()\n      // .notOneOf([yup.ref(\"toAccount\"), null], \"To Account is  matched!!\")\n      .required(\"account is required!!\"),\n    toAccount: yup\n      .string()\n      .notOneOf([yup.ref(\"fromAccount\"), null], \"From Account is  matched!!\")\n      .required(\"account is required!!\"),\n    transactionAmount: yup\n      .number()\n      .integer()\n      .positive()\n      .min(2, \"minimum amount should be 10\")\n      .required()\n      .typeError(\"amount is required!!\"),\n    notes: yup\n      .string()\n      .min(3)\n      .trim()\n      .max(250)\n      .required()\n      .typeError(\"notes is required!!\"),\n    receipt: yup.mixed().test({\n      name: \"is-sku\",\n      skipAbsent: true,\n      test(value, error) {\n        if (value === undefined || value === null || value.length === 0) {\n          return error.createError({ message: \"image is required!!!\" });\n        } else {\n          if (typeof value === \"string\") {\n            return true;\n          } else {\n            if (!validFileExtensions.includes(value[0].type)) {\n              return error.createError({\n                message: \"image type must be jpeg,png,jpg or svg..\",\n              });\n            }\n          }\n          if (typeof value === \"string\") {\n            return true;\n          } else {\n            if (value[0][\"size\"] > MAX_FILE_SIZE) {\n              return error.createError({\n                message: \"image must less than 10kb\",\n              });\n            }\n          }\n        }\n        return true;\n      },\n    }),\n  });\n  let dummy = updateData.filter((value) => {\n    if (parseInt(value[\"id\"])) {\n      return parseInt(value[\"id\"]) === parseInt(id);\n    }\n  });\n\n  let udata = {};\n\n  for (let a in dummy[0]) {\n    if (dummy[0][a].value !== undefined) {\n      udata[a] = dummy[0][a].value;\n    }\n  }\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(formSchema),\n    defaultValues: udata,\n  });\n  // ......\n\n  for (let a in dummy[0]) {\n    if (dummy[0][a].value !== undefined) {\n      udata[a] = dummy[0][a].value;\n    }\n  }\n\n  useEffect(() => {\n    for (const key in updateData) {\n      if (key && parseInt(updateData[key]?.id) === parseInt(id)) {\n        setData(updateData[key]);\n        break;\n      }\n    }\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  const removeImage = () => {\n    setData((prev) => ({\n      ...prev,\n      receipt: \"\",\n    }));\n  };\n  const onSubmit = (e) => {\n    let {\n      monthYear,\n      transactionDate,\n      transactionType,\n      fromAccount,\n      toAccount,\n      transactionAmount,\n      receipt,\n      notes,\n    } = e;\n\n    setData((prev) => ({\n      ...prev,\n      monthYear: {\n        value: monthYear,\n      },\n      transactionDate: {\n        value: transactionDate,\n      },\n      transactionType: {\n        value: transactionType,\n      },\n      fromAccount: {\n        value: fromAccount,\n      },\n      toAccount: {\n        value: toAccount,\n      },\n      transactionAmount: {\n        value: transactionAmount,\n      },\n      receipt: {\n        value: data.receipt.value,\n      },\n      notes: {\n        value: notes,\n      },\n    }));\n\n    // setData(data);\n    setData(data); // context data\n    setSubmit(true);\n  };\n  const handleChange = (e) => {\n    let receiptPhoto;\n    let file = e.target.files[0];\n    let freader = new FileReader();\n    freader.readAsDataURL(file);\n    freader.addEventListener(\"load\", () => {\n      receiptPhoto = freader.result;\n\n      setData((prev) => ({\n        ...prev,\n        receipt: {\n          ...prev.receipt,\n          value: receiptPhoto,\n        },\n      }));\n    });\n  };\n\n  useEffect(() => {\n    if (submit) {\n      if (transactionData.length !== 0) {\n        const retrivedata = transactionData;\n\n        if (id) {\n          for (const e in retrivedata) {\n            if (parseInt(retrivedata[e].id) === parseInt(id)) {\n              data[\"id\"] = id;\n              retrivedata[e] = data;\n            }\n          }\n        } else {\n          const prevDataIndex = Object.keys(retrivedata).length - 1;\n          const prevId = retrivedata[prevDataIndex][\"id\"];\n          data[\"id\"] = parseInt(parseInt(prevId) + 1);\n\n          retrivedata.push(data);\n        }\n        setTransactionData(retrivedata);\n        // localStorage.setItem(\"transactionForm\", JSON.stringify(retrivedata));\n      } else {\n        data[\"id\"] = parseInt(1);\n        // transactionData.push(data);   //secong approach\n        setTransactionData((prev) => [...prev, data]);\n\n        // localStorage.setItem(\"transactionForm\", JSON.stringify([data]));\n      }\n\n      navigate(\"/transaction\");\n    }\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return (\n    <>\n      <div className=\"form\">\n        <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">\n          <label className=\"label\">Transaction Date:</label>\n          <div className=\"input\">\n            <input\n              type=\"date\"\n              id=\"date\"\n              name=\"transactionDate\"\n              {...register(\"transactionDate\")}\n              // value={data?.transactionDate?.value}\n\n              onClick={() => {\n                const newdate = new Date();\n                var year = newdate.getFullYear();\n                var month = newdate.getMonth() + 1;\n                var day = newdate.getDate();\n                if (month < 10) {\n                  month = \"0\" + month;\n                }\n                if (day < 10) {\n                  day = \"0\" + day;\n                }\n\n                var limit = `${year}-${month}-${day}`;\n\n                document.getElementById(\"date\").setAttribute(\"max\", limit);\n              }}\n            ></input>\n            <span>{errors.transactionDate?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Month Year:</label>\n\n          <div className=\"input\">\n            <select\n              name=\"monthYear\"\n              {...register(\"monthYear\")}\n              // value={data?.monthYear?.value}\n            >\n              <option value=\"\" selected>\n                Select\n              </option>\n\n              {MonthArr.map((month) => {\n                return (\n                  <option value={`${month} 2023`}>{`${month} 2023`}</option>\n                );\n              })}\n            </select>\n            <span>{errors.monthYear?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Transaction Type:</label>\n          <div className=\"input\">\n            <select\n              name=\"transactionType\"\n              {...register(\"transactionType\")}\n              // value={data?.transactionType?.value}\n            >\n              <option value=\"\" selected>\n                Select\n              </option>\n              <Dropdown for={TransactionTypeArr} />\n            </select>\n            <span>{errors.transactionType?.message}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">From Account:</label>\n          <div className=\"input\">\n            <select\n              name=\"fromAccount\"\n              {...register(\"fromAccount\")}\n              // value={data?.fromAccount?.value}\n            >\n              <option value=\"\" selected>\n                Select\n              </option>\n              <Dropdown for={AccountArr} />\n            </select>\n            <span>{errors.fromAccount?.message}</span>\n          </div>\n          <br></br>\n\n          <label className=\"label\">To Account: </label>\n          <div className=\"input\">\n            <select\n              name=\"toAccount\"\n              {...register(\"toAccount\")}\n              // value={data?.toAccount?.value}\n            >\n              <option value=\"\" selected>\n                Select\n              </option>\n              <Dropdown for={AccountArr} />\n            </select>\n            <span>{errors.toAccount?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Amount:</label>\n          <div className=\"input\">\n            <input\n              type=\"text\"\n              name=\"transactionAmount\"\n              {...register(\"transactionAmount\")}\n              // value={data?.transactionAmount?.value}\n            ></input>\n            <span>{errors.transactionAmount?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Receipt:</label>\n          <div className=\"input\">\n            {data.receipt.value ? (\n              <>\n                <img src={data.receipt.value} width={50} height={50} alt=\"\" />\n                <span onClick={removeImage} className=\"cross\">\n                  X\n                </span>\n              </>\n            ) : (\n              <>\n                <input\n                  type=\"file\"\n                  name=\"receipt\"\n                  alt=\"Receipt is not found\"\n                  {...register(\"receipt\", { onChange: handleChange })}\n                  // value={data?.receipt?.value}\n                ></input>\n              </>\n            )}\n\n            <span>{errors.receipt?.message}</span>\n          </div>\n          <br></br>\n          <label className=\"label\">Notes:</label>\n          <div className=\"input\">\n            <textarea\n              cols=\"30\"\n              rows=\"6\"\n              name=\"notes\"\n              {...register(\"notes\")}\n              // value={data?.notes?.value}\n            ></textarea>\n            <span>{errors.notes?.message}</span>\n          </div>\n\n          <button type=\"submit\" className=\"submitBtn\">\n            Submit\n          </button>\n\n          <Link to={`/transaction`} className=\"showTrn\">\n            Show Transaction\n          </Link>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default TransactionForm;\n","/home/meet-vaghasiya/reactPractice/khatabook/src/components/Transaction.jsx",["183","184","185"],[],"import { Link, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Table from \"../pages/transaction/compomnents/Table\";\nimport { Dropdown } from \"../components/Dropdown\";\nimport { groupArr } from \"../utils/constant\";\nimport { useTransactionData } from \"../context/transactionTable\";\nimport { useEffect } from \"react\";\n\nconst Transaction = () => {\n  const navigate = useNavigate();\n  const { transactionData, setTransactionData } = useTransactionData();\n\n  const [transactionDatas,setTransactionDatas]=useState(transactionData);\n  // const retrivedata = [...transactionDatas;\n  const [groupby, setGroupby] = useState({});\n\n  useEffect(() => {\n    console.log(\"transa>>>>>>\");\n    console.log(transactionData);\n    setTransactionDatas(transactionData);\n  }, [transactionData]);\n\n  const [groupVal, setGroupVal] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"render effect\");\n    groupBy(groupVal);\n  }, [transactionDatas]);\n\n  const groupBy = (e) => {\n    const gData = [...transactionDatas];\n\n    let groupData = {};\n    if (e.target) {\n      if (transactionDatas) {\n        let field = e.target.value;\n        setGroupVal(field);\n        console.log(field, \"field\");\n\n        if (field === \"none\") {\n          setGroupby(groupData);\n        } else {\n          gData.forEach((items) => {\n            const item = items[field]?.value;\n            groupData[item] = groupData[item] ?? [];\n            groupData[item].push(items);\n          });\n          setGroupby(groupData);\n          // setTransactionData(groupData)\n        }\n      }\n    } else {\n      if (e) {\n        console.log(e, \"GEROERT>>>>>>>>>>>>>>\");\n        gData.forEach((items) => {\n          const item = items[e]?.value;\n          groupData[item] = groupData[item] ?? [];\n          groupData[item].push(items);\n        });\n        setGroupby(groupData);\n      }\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"logindata\");\n    navigate(\"/public/login\");\n  };\n\n  return (\n    <>\n      <div className=\"details\">\n        <>\n          <label>Group By:</label>\n          <select\n            className=\"groupby\"\n            onChange={(e) => {\n              groupBy(e);\n            }}\n          >\n            <Dropdown for={groupArr} />\n          </select>\n        </>\n\n        <div>{transactionDatas && <Table records={transactionDatas} />}</div>\n\n        <button className=\"createBtn\">\n          <Link to={\"/create\"}>Create Transaction</Link>\n        </button>\n\n        <button className=\"logoutBtn\" onClick={logout}>\n          Logout\n        </button>\n        <div className=\"groupDetails\">\n          {Object.keys(groupby).map((d, index) => {\n            if (d !== undefined) {\n              return (\n                <>\n                  <h2>{d}</h2>\n                  <Table records={groupby[d]} />\n                </>\n              );\n            } else {\n              <></>;\n            }\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Transaction;\n","/home/meet-vaghasiya/reactPractice/khatabook/src/components/Pagination.jsx",[],[],"/home/meet-vaghasiya/reactPractice/khatabook/src/components/View.jsx",[],[],"/home/meet-vaghasiya/reactPractice/khatabook/src/components/Registration.jsx",[],[],"/home/meet-vaghasiya/reactPractice/khatabook/src/components/Login.jsx",[],[],"/home/meet-vaghasiya/reactPractice/khatabook/src/components/Dropdown.jsx",[],[],"/home/meet-vaghasiya/reactPractice/khatabook/src/utils/constant.js",[],[],"/home/meet-vaghasiya/reactPractice/khatabook/src/utils/helper.js",[],[],"/home/meet-vaghasiya/reactPractice/khatabook/src/pages/transaction/compomnents/Table.jsx",[],["186"],"/home/meet-vaghasiya/reactPractice/khatabook/src/auth/Unauth.jsx",[],["187"],"/home/meet-vaghasiya/reactPractice/khatabook/src/auth/Auth.jsx",[],["188"],"/home/meet-vaghasiya/reactPractice/khatabook/src/Validations/UserValidation.js",[],[],[],"/home/meet-vaghasiya/reactPractice/khatabook/src/components/YupValidations.jsx",[],[],"/home/meet-vaghasiya/reactPractice/khatabook/src/context/transactionTable.jsx",[],[],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/index.js",[],[],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/App.js",[],[],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/auth/Auth.jsx",[],["189"],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/auth/Unauth.jsx",[],["190"],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/context/transactionTable.jsx",[],[],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/utils/constant.js",[],[],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/Form.jsx",["191","192","193"],["194","195"],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/Transaction.jsx",["196","197","198"],[],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/View.jsx",[],[],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/Registration.jsx",[],[],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/Login.jsx",[],[],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/utils/helper.js",[],[],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/Dropdown.jsx",[],[],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/pages/transaction/compomnents/Table.jsx",["199"],["200"],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/components/Pagination.jsx",[],[],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/Redux/store.js",[],[],[],"/home/meet-vaghasiya/reactPractice/khatabook-redux/src/Redux/ducks/counterSlice.js",["201","202"],[],{"ruleId":"203","severity":1,"message":"204","line":31,"column":9,"nodeType":"205","messageId":"206","endLine":31,"endColumn":14},{"ruleId":"207","severity":1,"message":"208","line":100,"column":41,"nodeType":"209","messageId":"210","endLine":100,"endColumn":43},{"ruleId":"203","severity":1,"message":"211","line":154,"column":7,"nodeType":"205","messageId":"206","endLine":154,"endColumn":14},{"ruleId":"212","severity":1,"message":"213","line":138,"column":6,"nodeType":"214","endLine":138,"endColumn":10,"suggestions":"215","suppressions":"216"},{"ruleId":"212","severity":1,"message":"217","line":240,"column":6,"nodeType":"214","endLine":240,"endColumn":12,"suggestions":"218","suppressions":"219"},{"ruleId":"203","severity":1,"message":"220","line":11,"column":28,"nodeType":"205","messageId":"206","endLine":11,"endColumn":46},{"ruleId":"212","severity":1,"message":"221","line":28,"column":6,"nodeType":"214","endLine":28,"endColumn":24,"suggestions":"222"},{"ruleId":"207","severity":1,"message":"223","line":95,"column":48,"nodeType":"209","messageId":"210","endLine":95,"endColumn":50},{"ruleId":"212","severity":1,"message":"224","line":117,"column":6,"nodeType":"214","endLine":117,"endColumn":19,"suggestions":"225","suppressions":"226"},{"ruleId":"212","severity":1,"message":"227","line":14,"column":5,"nodeType":"214","endLine":14,"endColumn":7,"suggestions":"228","suppressions":"229"},{"ruleId":"212","severity":1,"message":"227","line":16,"column":6,"nodeType":"214","endLine":16,"endColumn":8,"suggestions":"230","suppressions":"231"},{"ruleId":"212","severity":1,"message":"227","line":16,"column":6,"nodeType":"214","endLine":16,"endColumn":8,"suggestions":"232","suppressions":"233"},{"ruleId":"212","severity":1,"message":"227","line":14,"column":5,"nodeType":"214","endLine":14,"endColumn":7,"suggestions":"234","suppressions":"235"},{"ruleId":"203","severity":1,"message":"204","line":32,"column":9,"nodeType":"205","messageId":"206","endLine":32,"endColumn":14},{"ruleId":"207","severity":1,"message":"208","line":107,"column":41,"nodeType":"209","messageId":"210","endLine":107,"endColumn":43},{"ruleId":"203","severity":1,"message":"211","line":161,"column":7,"nodeType":"205","messageId":"206","endLine":161,"endColumn":14},{"ruleId":"212","severity":1,"message":"213","line":145,"column":6,"nodeType":"214","endLine":145,"endColumn":10,"suggestions":"236","suppressions":"237"},{"ruleId":"212","severity":1,"message":"238","line":240,"column":6,"nodeType":"214","endLine":240,"endColumn":12,"suggestions":"239","suppressions":"240"},{"ruleId":"203","severity":1,"message":"241","line":7,"column":22,"nodeType":"205","messageId":"206","endLine":7,"endColumn":33},{"ruleId":"212","severity":1,"message":"221","line":28,"column":6,"nodeType":"214","endLine":28,"endColumn":24,"suggestions":"242"},{"ruleId":"207","severity":1,"message":"223","line":95,"column":48,"nodeType":"209","messageId":"210","endLine":95,"endColumn":50},{"ruleId":"203","severity":1,"message":"243","line":18,"column":9,"nodeType":"205","messageId":"206","endLine":18,"endColumn":18},{"ruleId":"212","severity":1,"message":"224","line":125,"column":6,"nodeType":"214","endLine":125,"endColumn":19,"suggestions":"244","suppressions":"245"},{"ruleId":"203","severity":1,"message":"246","line":1,"column":23,"nodeType":"205","messageId":"206","endLine":1,"endColumn":30},{"ruleId":"247","severity":1,"message":"248","line":17,"column":40,"nodeType":"249","messageId":"250","endLine":17,"endColumn":42},"no-unused-vars","'index' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'receipt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.","ArrayExpression",["251"],["252"],"React Hook useEffect has missing dependencies: 'id', 'navigate', 'setTransactionData', 'submit', and 'transactionData'. Either include them or remove the dependency array.",["253"],["254"],"'setTransactionData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'groupBy' and 'groupVal'. Either include them or remove the dependency array.",["255"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'props.records' and 'sortedData'. Either include them or remove the dependency array. If 'setSortedData' needs the current value of 'props.records', you can also switch to useReducer instead of useState and read 'props.records' in the reducer.",["256"],["257"],"React Hook useEffect has missing dependencies: 'navigate' and 'token'. Either include them or remove the dependency array.",["258"],["259"],["260"],["261"],["262"],["263"],["264"],["265"],["266"],["267"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', 'navigate', 'submit', and 'transactionData'. Either include them or remove the dependency array.",["268"],["269"],"'useDispatch' is defined but never used.",["270"],"'reduxData' is assigned a value but never used.",["271"],["272"],"'current' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"273","fix":"274"},{"kind":"275","justification":"276"},{"desc":"277","fix":"278"},{"kind":"275","justification":"276"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"kind":"275","justification":"276"},{"desc":"283","fix":"284"},{"kind":"275","justification":"276"},{"desc":"283","fix":"285"},{"kind":"275","justification":"276"},{"desc":"283","fix":"286"},{"kind":"275","justification":"276"},{"desc":"283","fix":"287"},{"kind":"275","justification":"276"},{"desc":"273","fix":"288"},{"kind":"275","justification":"276"},{"desc":"289","fix":"290"},{"kind":"275","justification":"276"},{"desc":"279","fix":"291"},{"desc":"281","fix":"292"},{"kind":"275","justification":"276"},"Update the dependencies array to be: [id, updateData]",{"range":"293","text":"294"},"directive","","Update the dependencies array to be: [data, id, navigate, setTransactionData, submit, transactionData]",{"range":"295","text":"296"},"Update the dependencies array to be: [groupBy, groupVal, transactionDatas]",{"range":"297","text":"298"},"Update the dependencies array to be: [props.records, sortedData, sortedField]",{"range":"299","text":"300"},"Update the dependencies array to be: [navigate, token]",{"range":"301","text":"302"},{"range":"303","text":"302"},{"range":"304","text":"302"},{"range":"305","text":"302"},{"range":"306","text":"294"},"Update the dependencies array to be: [data, dispatch, id, navigate, submit, transactionData]",{"range":"307","text":"308"},{"range":"309","text":"298"},{"range":"310","text":"300"},[3809,3813],"[id, updateData]",[6188,6194],"[data, id, navigate, setTransactionData, submit, transactionData]",[936,954],"[groupBy, groupVal, transactionDatas]",[3917,3930],"[props.records, sortedData, sortedField]",[458,460],"[navigate, token]",[537,539],[537,539],[458,460],[3895,3899],[6004,6010],"[data, dispatch, id, navigate, submit, transactionData]",[860,878],[3872,3885]]